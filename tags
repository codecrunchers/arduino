abs	./SoftwareSerial/SoftwareSerial.h	109;"	d
abs	./SoftwareSerial/SoftwareSerial.h	109;"	d
abs	./TinyGPS/TinyGPS.h	153;"	d
abs	./TinyGPS/TinyGPS.h	153;"	d
ACCEL_X_PIN	./Esplora/Esplora.cpp	/^const byte ACCEL_X_PIN = A5;$/;"	v
ACCEL_X_PIN	./Esplora/Esplora.cpp	/^const byte ACCEL_X_PIN = A5;$/;"	v
ACCEL_Y_PIN	./Esplora/Esplora.cpp	/^const byte ACCEL_Y_PIN = A11;$/;"	v
ACCEL_Y_PIN	./Esplora/Esplora.cpp	/^const byte ACCEL_Y_PIN = A11;$/;"	v
ACCEL_ZERO_X	./Esplora/Esplora.cpp	/^const int ACCEL_ZERO_X = 320;$/;"	v
ACCEL_ZERO_X	./Esplora/Esplora.cpp	/^const int ACCEL_ZERO_X = 320;$/;"	v
ACCEL_ZERO_Y	./Esplora/Esplora.cpp	/^const int ACCEL_ZERO_Y = 330;$/;"	v
ACCEL_ZERO_Y	./Esplora/Esplora.cpp	/^const int ACCEL_ZERO_Y = 330;$/;"	v
ACCEL_ZERO_Z	./Esplora/Esplora.cpp	/^const int ACCEL_ZERO_Z = 310;$/;"	v
ACCEL_ZERO_Z	./Esplora/Esplora.cpp	/^const int ACCEL_ZERO_Z = 310;$/;"	v
ACCEL_Z_PIN	./Esplora/Esplora.cpp	/^const byte ACCEL_Z_PIN = A6;$/;"	v
ACCEL_Z_PIN	./Esplora/Esplora.cpp	/^const byte ACCEL_Z_PIN = A6;$/;"	v
accept	./Ethernet/EthernetServer.cpp	/^void EthernetServer::accept()$/;"	f	class:EthernetServer
accept	./Ethernet/EthernetServer.cpp	/^void EthernetServer::accept()$/;"	f	class:EthernetServer
accessPoint	./GSM/GSM3ShieldV1.h	/^		char* accessPoint;			\/\/APN.					$/;"	m	class:GSM3ShieldV1
accessPoint	./GSM/GSM3ShieldV1.h	/^		char* accessPoint;			\/\/APN.					$/;"	m	class:GSM3ShieldV1
ACMD23	./SD/utility/SdInfo.h	/^uint8_t const ACMD23 = 0X17;$/;"	v
ACMD23	./SD/utility/SdInfo.h	/^uint8_t const ACMD23 = 0X17;$/;"	v
ACMD41	./Robot_Control/SdCard.h	/^uint8_t const ACMD41   = 0X29;$/;"	v
ACMD41	./Robot_Control/SdCard.h	/^uint8_t const ACMD41   = 0X29;$/;"	v
ACMD41	./SD/utility/SdInfo.h	/^uint8_t const ACMD41 = 0X29;$/;"	v
ACMD41	./SD/utility/SdInfo.h	/^uint8_t const ACMD41 = 0X29;$/;"	v
_activeObject	./GSM/GSM3SoftSerial.cpp	/^GSM3SoftSerial* GSM3SoftSerial::_activeObject=0;$/;"	m	class:GSM3SoftSerial	file:
_activeObject	./GSM/GSM3SoftSerial.cpp	/^GSM3SoftSerial* GSM3SoftSerial::_activeObject=0;$/;"	m	class:GSM3SoftSerial	file:
_activeObject	./GSM/GSM3SoftSerial.h	/^		static GSM3SoftSerial* _activeObject;$/;"	m	class:GSM3SoftSerial
_activeObject	./GSM/GSM3SoftSerial.h	/^		static GSM3SoftSerial* _activeObject;$/;"	m	class:GSM3SoftSerial
active_object	./SoftwareSerial/SoftwareSerial.cpp	/^SoftwareSerial *SoftwareSerial::active_object = 0;$/;"	m	class:SoftwareSerial	file:
active_object	./SoftwareSerial/SoftwareSerial.cpp	/^SoftwareSerial *SoftwareSerial::active_object = 0;$/;"	m	class:SoftwareSerial	file:
active_object	./SoftwareSerial/SoftwareSerial.h	/^  static SoftwareSerial *active_object;$/;"	m	class:SoftwareSerial
active_object	./SoftwareSerial/SoftwareSerial.h	/^  static SoftwareSerial *active_object;$/;"	m	class:SoftwareSerial
activeProvider	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3ShieldV1BaseProvider* activeProvider;$/;"	m	class:GSM3ShieldV1ModemCore
activeProvider	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3ShieldV1BaseProvider* activeProvider;$/;"	m	class:GSM3ShieldV1ModemCore
acu	./Robot_Motor/LineFollow.h	/^		int lectura_sensor[5], last_error, acu;$/;"	m	class:LineFollow
acu	./Robot_Motor/LineFollow.h	/^		int lectura_sensor[5], last_error, acu;$/;"	m	class:LineFollow
_ADAFRUIT_GFX_H	./Robot_Control/Adafruit_GFX.h	17;"	d
_ADAFRUIT_GFX_H	./Robot_Control/Adafruit_GFX.h	17;"	d
_ADAFRUIT_GFX_H	./TFT/utility/Adafruit_GFX.h	18;"	d
_ADAFRUIT_GFX_H	./TFT/utility/Adafruit_GFX.h	18;"	d
Adafruit_GFX	./Robot_Control/Adafruit_GFX.h	/^class Adafruit_GFX : public Print {$/;"	c
Adafruit_GFX	./Robot_Control/Adafruit_GFX.h	/^class Adafruit_GFX : public Print {$/;"	c
Adafruit_GFX	./TFT/utility/Adafruit_GFX.h	/^class Adafruit_GFX : public Print {$/;"	c
Adafruit_GFX	./TFT/utility/Adafruit_GFX.h	/^class Adafruit_GFX : public Print {$/;"	c
_ADAFRUIT_ST7735H_	./TFT/utility/Adafruit_ST7735.h	20;"	d
_ADAFRUIT_ST7735H_	./TFT/utility/Adafruit_ST7735.h	20;"	d
Adafruit_ST7735	./TFT/utility/Adafruit_ST7735.cpp	/^Adafruit_ST7735::Adafruit_ST7735(uint8_t cs, uint8_t rs, uint8_t rst) {$/;"	f	class:Adafruit_ST7735
Adafruit_ST7735	./TFT/utility/Adafruit_ST7735.cpp	/^Adafruit_ST7735::Adafruit_ST7735(uint8_t cs, uint8_t rs, uint8_t rst) {$/;"	f	class:Adafruit_ST7735
Adafruit_ST7735	./TFT/utility/Adafruit_ST7735.cpp	/^Adafruit_ST7735::Adafruit_ST7735(uint8_t cs, uint8_t rs, uint8_t sid,$/;"	f	class:Adafruit_ST7735
Adafruit_ST7735	./TFT/utility/Adafruit_ST7735.cpp	/^Adafruit_ST7735::Adafruit_ST7735(uint8_t cs, uint8_t rs, uint8_t sid,$/;"	f	class:Adafruit_ST7735
Adafruit_ST7735	./TFT/utility/Adafruit_ST7735.h	/^class Adafruit_ST7735 : public Adafruit_GFX {$/;"	c
Adafruit_ST7735	./TFT/utility/Adafruit_ST7735.h	/^class Adafruit_ST7735 : public Adafruit_GFX {$/;"	c
addCluster	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::addCluster(void) {$/;"	f	class:Fat16
addCluster	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::addCluster(void) {$/;"	f	class:Fat16
addCluster	./SD/utility/SdFile.cpp	/^uint8_t SdFile::addCluster() {$/;"	f	class:SdFile
addCluster	./SD/utility/SdFile.cpp	/^uint8_t SdFile::addCluster() {$/;"	f	class:SdFile
addDirCluster	./SD/utility/SdFile.cpp	/^uint8_t SdFile::addDirCluster(void) {$/;"	f	class:SdFile
addDirCluster	./SD/utility/SdFile.cpp	/^uint8_t SdFile::addDirCluster(void) {$/;"	f	class:SdFile
ADDRESS_CITYNAME	./Robot_Control/ArduinoRobot.h	110;"	d
ADDRESS_CITYNAME	./Robot_Control/ArduinoRobot.h	110;"	d
ADDRESS_COUNTRYNAME	./Robot_Control/ArduinoRobot.h	112;"	d
ADDRESS_COUNTRYNAME	./Robot_Control/ArduinoRobot.h	112;"	d
address	./Robot_Control/ArduinoRobot.h	/^	uint16_t address;$/;"	m	struct:EEPROM_BMP
address	./Robot_Control/ArduinoRobot.h	/^	uint16_t address;$/;"	m	struct:EEPROM_BMP
ADDRESS_ROBOTINFO	./Robot_Control/ArduinoRobot.h	114;"	d
ADDRESS_ROBOTINFO	./Robot_Control/ArduinoRobot.h	114;"	d
ADDRESS_ROBOTNAME	./Robot_Control/ArduinoRobot.h	108;"	d
ADDRESS_ROBOTNAME	./Robot_Control/ArduinoRobot.h	108;"	d
ADDRESS_USERNAME	./Robot_Control/ArduinoRobot.h	106;"	d
ADDRESS_USERNAME	./Robot_Control/ArduinoRobot.h	106;"	d
AF_DCMotor	./AFMotor/AFMotor.cpp	/^AF_DCMotor::AF_DCMotor(uint8_t num, uint8_t freq) {$/;"	f	class:AF_DCMotor
AF_DCMotor	./AFMotor/AFMotor.cpp	/^AF_DCMotor::AF_DCMotor(uint8_t num, uint8_t freq) {$/;"	f	class:AF_DCMotor
AF_DCMotor	./AFMotor/AFMotor.h	/^class AF_DCMotor$/;"	c
AF_DCMotor	./AFMotor/AFMotor.h	/^class AF_DCMotor$/;"	c
AFMotorController	./AFMotor/AFMotor.cpp	/^AFMotorController::AFMotorController(void) {$/;"	f	class:AFMotorController
AFMotorController	./AFMotor/AFMotor.cpp	/^AFMotorController::AFMotorController(void) {$/;"	f	class:AFMotorController
AFMotorController	./AFMotor/AFMotor.h	/^class AFMotorController$/;"	c
AFMotorController	./AFMotor/AFMotor.h	/^class AFMotorController$/;"	c
_AFMotor_h_	./AFMotor/AFMotor.h	33;"	d
_AFMotor_h_	./AFMotor/AFMotor.h	33;"	d
AF_Stepper	./AFMotor/AFMotor.cpp	/^AF_Stepper::AF_Stepper(uint16_t steps, uint8_t num) {$/;"	f	class:AF_Stepper
AF_Stepper	./AFMotor/AFMotor.cpp	/^AF_Stepper::AF_Stepper(uint16_t steps, uint8_t num) {$/;"	f	class:AF_Stepper
AF_Stepper	./AFMotor/AFMotor.h	/^class AF_Stepper {$/;"	c
AF_Stepper	./AFMotor/AFMotor.h	/^class AF_Stepper {$/;"	c
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	class:TinyGPSCustom
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	class:TinyGPSCustom
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const       { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSDate
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const       { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSDate
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSDecimal
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSDecimal
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSInteger
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSInteger
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSLocation
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSLocation
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const       { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSTime
age	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t age() const       { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }$/;"	f	struct:TinyGPSTime
ajusta_niveles	./Robot_Motor/lineFollow.cpp	/^void LineFollow::ajusta_niveles()$/;"	f	class:LineFollow
ajusta_niveles	./Robot_Motor/lineFollow.cpp	/^void LineFollow::ajusta_niveles()$/;"	f	class:LineFollow
ALIVETEST	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
ALIVETEST	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
allocContiguous	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::allocContiguous(uint32_t count, uint32_t* curCluster) {$/;"	f	class:SdVolume
allocContiguous	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::allocContiguous(uint32_t count, uint32_t* curCluster) {$/;"	f	class:SdVolume
allocSearchStart_	./SD/utility/SdFat.h	/^  uint32_t allocSearchStart_;   \/\/ start cluster for alloc search$/;"	m	class:SdVolume
allocSearchStart_	./SD/utility/SdFat.h	/^  uint32_t allocSearchStart_;   \/\/ start cluster for alloc search$/;"	m	class:SdVolume
ALLOW_DEPRECATED_FUNCTIONS	./Robot_Control/Fat16Config.h	29;"	d
ALLOW_DEPRECATED_FUNCTIONS	./Robot_Control/Fat16Config.h	29;"	d
ALLOW_DEPRECATED_FUNCTIONS	./SD/utility/SdFat.h	34;"	d
ALLOW_DEPRECATED_FUNCTIONS	./SD/utility/SdFat.h	34;"	d
altitude	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSAltitude altitude;$/;"	m	class:TinyGPSPlus
altitude	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSAltitude altitude;$/;"	m	class:TinyGPSPlus
altitude	./TinyGPS/TinyGPS.h	/^  inline long altitude() { return _altitude; }$/;"	f	class:TinyGPS
altitude	./TinyGPS/TinyGPS.h	/^  inline long altitude() { return _altitude; }$/;"	f	class:TinyGPS
_altitude	./TinyGPS/TinyGPS.h	/^  long _altitude, _new_altitude;$/;"	m	class:TinyGPS
_altitude	./TinyGPS/TinyGPS.h	/^  long _altitude, _new_altitude;$/;"	m	class:TinyGPS
always1	./Robot_Control/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CID
always1	./Robot_Control/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CID
always1	./Robot_Control/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CSD
always1	./Robot_Control/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CSD
always1	./SD/utility/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CID
always1	./SD/utility/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CID
always1	./SD/utility/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CSDV1
always1	./SD/utility/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CSDV1
always1	./SD/utility/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CSDV2
always1	./SD/utility/SdInfo.h	/^  unsigned always1 : 1;$/;"	m	struct:CSDV2
ANALOG	./Firmata/Firmata.h	70;"	d
ANALOG	./Firmata/Firmata.h	70;"	d
ANALOG_MAPPING_QUERY	./Firmata/Firmata.h	55;"	d
ANALOG_MAPPING_QUERY	./Firmata/Firmata.h	55;"	d
ANALOG_MAPPING_RESPONSE	./Firmata/Firmata.h	56;"	d
ANALOG_MAPPING_RESPONSE	./Firmata/Firmata.h	56;"	d
ANALOG_MESSAGE	./Firmata/Firmata.h	30;"	d
ANALOG_MESSAGE	./Firmata/Firmata.h	30;"	d
analogRead	./Robot_Control/Sensors.cpp	/^int RobotControl::analogRead(uint8_t port){$/;"	f	class:RobotControl
analogRead	./Robot_Control/Sensors.cpp	/^int RobotControl::analogRead(uint8_t port){$/;"	f	class:RobotControl
_analogRead	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_analogRead(uint8_t codename){$/;"	f	class:RobotMotorBoard
_analogRead	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_analogRead(uint8_t codename){$/;"	f	class:RobotMotorBoard
_analogReadTopMux	./Robot_Control/Sensors.cpp	/^int RobotControl::_analogReadTopMux(uint8_t port){$/;"	f	class:RobotControl
_analogReadTopMux	./Robot_Control/Sensors.cpp	/^int RobotControl::_analogReadTopMux(uint8_t port){$/;"	f	class:RobotControl
_analogReadTopPin	./Robot_Control/Sensors.cpp	/^int RobotControl::_analogReadTopPin(uint8_t port){$/;"	f	class:RobotControl
_analogReadTopPin	./Robot_Control/Sensors.cpp	/^int RobotControl::_analogReadTopPin(uint8_t port){$/;"	f	class:RobotControl
analogWrite	./Robot_Control/Sensors.cpp	/^void RobotControl::analogWrite(uint8_t port, uint8_t value){$/;"	f	class:RobotControl
analogWrite	./Robot_Control/Sensors.cpp	/^void RobotControl::analogWrite(uint8_t port, uint8_t value){$/;"	f	class:RobotControl
_analogWrite	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_analogWrite(uint8_t codename,int value){$/;"	f	class:RobotMotorBoard
_analogWrite	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_analogWrite(uint8_t codename,int value){$/;"	f	class:RobotMotorBoard
angle	./SoftwareServo/SoftwareServo.h	/^    uint8_t angle;       \/\/ in degrees$/;"	m	class:SoftwareServo
angle	./SoftwareServo/SoftwareServo.h	/^    uint8_t angle;       \/\/ in degrees$/;"	m	class:SoftwareServo
answerCallContinue	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^void GSM3ShieldV1VoiceProvider::answerCallContinue()$/;"	f	class:GSM3ShieldV1VoiceProvider
answerCallContinue	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^void GSM3ShieldV1VoiceProvider::answerCallContinue()$/;"	f	class:GSM3ShieldV1VoiceProvider
answerCall	./GSM/GSM3MobileMockupProvider.h	/^		inline int answerCall(){return 0;};$/;"	f	class:GSM3MobileMockupProvider
answerCall	./GSM/GSM3MobileMockupProvider.h	/^		inline int answerCall(){return 0;};$/;"	f	class:GSM3MobileMockupProvider
ANSWERCALL	./GSM/GSM3ShieldV1BaseProvider.h	/^	VOICECALL, ANSWERCALL, HANGCALL, RETRIEVECALLINGNUMBER, $/;"	e	enum:GSM3_commandType_e
ANSWERCALL	./GSM/GSM3ShieldV1BaseProvider.h	/^	VOICECALL, ANSWERCALL, HANGCALL, RETRIEVECALLINGNUMBER, $/;"	e	enum:GSM3_commandType_e
answerCall	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^int GSM3ShieldV1VoiceProvider::answerCall()$/;"	f	class:GSM3ShieldV1VoiceProvider
answerCall	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^int GSM3ShieldV1VoiceProvider::answerCall()$/;"	f	class:GSM3ShieldV1VoiceProvider
answerCall	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::answerCall()$/;"	f	class:GSM3VoiceCallService
answerCall	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::answerCall()$/;"	f	class:GSM3VoiceCallService
_ARDUINO_LCDH_	./Robot_Control/Arduino_LCD.h	20;"	d
_ARDUINO_LCDH_	./Robot_Control/Arduino_LCD.h	20;"	d
Arduino_LCD	./Robot_Control/Arduino_LCD.cpp	/^Arduino_LCD::Arduino_LCD(uint8_t cs, uint8_t rs, uint8_t rst) {$/;"	f	class:Arduino_LCD
Arduino_LCD	./Robot_Control/Arduino_LCD.cpp	/^Arduino_LCD::Arduino_LCD(uint8_t cs, uint8_t rs, uint8_t rst) {$/;"	f	class:Arduino_LCD
Arduino_LCD	./Robot_Control/Arduino_LCD.cpp	/^Arduino_LCD::Arduino_LCD(uint8_t cs, uint8_t rs, uint8_t sid,$/;"	f	class:Arduino_LCD
Arduino_LCD	./Robot_Control/Arduino_LCD.cpp	/^Arduino_LCD::Arduino_LCD(uint8_t cs, uint8_t rs, uint8_t sid,$/;"	f	class:Arduino_LCD
Arduino_LCD	./Robot_Control/Arduino_LCD.h	/^class Arduino_LCD : public Adafruit_GFX {$/;"	c
Arduino_LCD	./Robot_Control/Arduino_LCD.h	/^class Arduino_LCD : public Adafruit_GFX {$/;"	c
ARDUINO_PINOUT_OPTIMIZE	./Firmata/Boards.h	150;"	d
ARDUINO_PINOUT_OPTIMIZE	./Firmata/Boards.h	150;"	d
ARDUINO_PINOUT_OPTIMIZE	./Firmata/Boards.h	181;"	d
ARDUINO_PINOUT_OPTIMIZE	./Firmata/Boards.h	181;"	d
ArduinoRobot_h	./Robot_Control/ArduinoRobot.h	2;"	d
ArduinoRobot_h	./Robot_Control/ArduinoRobot.h	2;"	d
ArduinoRobot_h	./Robot_Motor/ArduinoRobotMotorBoard.h	2;"	d
ArduinoRobot_h	./Robot_Motor/ArduinoRobotMotorBoard.h	2;"	d
_ARDUINO_TFT_H	./TFT/TFT.h	3;"	d
_ARDUINO_TFT_H	./TFT/TFT.h	3;"	d
arpeggio	./Robot_Control/Squawk.cpp	/^static inline uint16_t arpeggio(uint8_t ch, uint8_t halftones) {$/;"	f	file:
arpeggio	./Robot_Control/Squawk.cpp	/^static inline uint16_t arpeggio(uint8_t ch, uint8_t halftones) {$/;"	f	file:
at_resp_enum	./GSM_Shield/GSM_Shield.h	/^enum at_resp_enum $/;"	g
at_resp_enum	./GSM_Shield/GSM_Shield.h	/^enum at_resp_enum $/;"	g
AT_RESP_ERR_DIF_RESP	./GSM_Shield/GSM_Shield.h	/^  AT_RESP_ERR_DIF_RESP = 0,   \/\/ response_string is different from the response$/;"	e	enum:at_resp_enum
AT_RESP_ERR_DIF_RESP	./GSM_Shield/GSM_Shield.h	/^  AT_RESP_ERR_DIF_RESP = 0,   \/\/ response_string is different from the response$/;"	e	enum:at_resp_enum
AT_RESP_ERR_NO_RESP	./GSM_Shield/GSM_Shield.h	/^  AT_RESP_ERR_NO_RESP = -1,   \/\/ nothing received$/;"	e	enum:at_resp_enum
AT_RESP_ERR_NO_RESP	./GSM_Shield/GSM_Shield.h	/^  AT_RESP_ERR_NO_RESP = -1,   \/\/ nothing received$/;"	e	enum:at_resp_enum
AT_RESP_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  AT_RESP_LAST_ITEM$/;"	e	enum:at_resp_enum
AT_RESP_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  AT_RESP_LAST_ITEM$/;"	e	enum:at_resp_enum
AT_RESP_OK	./GSM_Shield/GSM_Shield.h	/^  AT_RESP_OK = 1,             \/\/ response_string was included in the response$/;"	e	enum:at_resp_enum
AT_RESP_OK	./GSM_Shield/GSM_Shield.h	/^  AT_RESP_OK = 1,             \/\/ response_string was included in the response$/;"	e	enum:at_resp_enum
attached	./Servo/Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo
attached	./Servo/Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo
attached	./SoftwareServo/SoftwareServo.cpp	/^uint8_t SoftwareServo::attached()$/;"	f	class:SoftwareServo
attached	./SoftwareServo/SoftwareServo.cpp	/^uint8_t SoftwareServo::attached()$/;"	f	class:SoftwareServo
attach	./Firmata/Firmata.cpp	/^void FirmataClass::attach(byte command, callbackFunction newFunction)$/;"	f	class:FirmataClass
attach	./Firmata/Firmata.cpp	/^void FirmataClass::attach(byte command, callbackFunction newFunction)$/;"	f	class:FirmataClass
attach	./Firmata/Firmata.cpp	/^void FirmataClass::attach(byte command, stringCallbackFunction newFunction)$/;"	f	class:FirmataClass
attach	./Firmata/Firmata.cpp	/^void FirmataClass::attach(byte command, stringCallbackFunction newFunction)$/;"	f	class:FirmataClass
attach	./Firmata/Firmata.cpp	/^void FirmataClass::attach(byte command, sysexCallbackFunction newFunction)$/;"	f	class:FirmataClass
attach	./Firmata/Firmata.cpp	/^void FirmataClass::attach(byte command, sysexCallbackFunction newFunction)$/;"	f	class:FirmataClass
attach	./Firmata/Firmata.cpp	/^void FirmataClass::attach(byte command, systemResetCallbackFunction newFunction)$/;"	f	class:FirmataClass
attach	./Firmata/Firmata.cpp	/^void FirmataClass::attach(byte command, systemResetCallbackFunction newFunction)$/;"	f	class:FirmataClass
attachGPRSContinue	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^void GSM3ShieldV1DataNetworkProvider::attachGPRSContinue()$/;"	f	class:GSM3ShieldV1DataNetworkProvider
attachGPRSContinue	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^void GSM3ShieldV1DataNetworkProvider::attachGPRSContinue()$/;"	f	class:GSM3ShieldV1DataNetworkProvider
ATTACHGPRS	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
ATTACHGPRS	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
attachGPRS	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1DataNetworkProvider::attachGPRS(char* apn, char* user_name, char* password, bool synchronous)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
attachGPRS	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1DataNetworkProvider::attachGPRS(char* apn, char* user_name, char* password, bool synchronous)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
attachInterrupt	./Robot_Control/SPI.h	/^void SPIClass::attachInterrupt() {$/;"	f	class:SPIClass
attachInterrupt	./Robot_Control/SPI.h	/^void SPIClass::attachInterrupt() {$/;"	f	class:SPIClass
attachInterrupt	./SPI/SPI.h	/^void SPIClass::attachInterrupt() {$/;"	f	class:SPIClass
attachInterrupt	./SPI/SPI.h	/^void SPIClass::attachInterrupt() {$/;"	f	class:SPIClass
attach	./Servo/Servo.cpp	/^uint8_t Servo::attach(int pin)$/;"	f	class:Servo
attach	./Servo/Servo.cpp	/^uint8_t Servo::attach(int pin)$/;"	f	class:Servo
attach	./Servo/Servo.cpp	/^uint8_t Servo::attach(int pin, int min, int max)$/;"	f	class:Servo
attach	./Servo/Servo.cpp	/^uint8_t Servo::attach(int pin, int min, int max)$/;"	f	class:Servo
attach	./SoftwareServo/SoftwareServo.cpp	/^uint8_t SoftwareServo::attach(int pinArg)$/;"	f	class:SoftwareServo
attach	./SoftwareServo/SoftwareServo.cpp	/^uint8_t SoftwareServo::attach(int pinArg)$/;"	f	class:SoftwareServo
attributes	./Robot_Control/FatStructs.h	/^  uint8_t  attributes;$/;"	m	struct:directoryEntry
attributes	./Robot_Control/FatStructs.h	/^  uint8_t  attributes;$/;"	m	struct:directoryEntry
attributes	./SD/utility/FatStructs.h	/^  uint8_t  attributes;$/;"	m	struct:directoryEntry
attributes	./SD/utility/FatStructs.h	/^  uint8_t  attributes;$/;"	m	struct:directoryEntry
AUTH_MODE_AUTO	./WiFi/utility/wl_types.h	/^        AUTH_MODE_AUTO,$/;"	e	enum:wl_auth_mode
AUTH_MODE_AUTO	./WiFi/utility/wl_types.h	/^        AUTH_MODE_AUTO,$/;"	e	enum:wl_auth_mode
AUTH_MODE_INVALID	./WiFi/utility/wl_types.h	/^        AUTH_MODE_INVALID,$/;"	e	enum:wl_auth_mode
AUTH_MODE_INVALID	./WiFi/utility/wl_types.h	/^        AUTH_MODE_INVALID,$/;"	e	enum:wl_auth_mode
AUTH_MODE_OPEN_SYSTEM	./WiFi/utility/wl_types.h	/^        AUTH_MODE_OPEN_SYSTEM,$/;"	e	enum:wl_auth_mode
AUTH_MODE_OPEN_SYSTEM	./WiFi/utility/wl_types.h	/^        AUTH_MODE_OPEN_SYSTEM,$/;"	e	enum:wl_auth_mode
AUTH_MODE_SHARED_KEY	./WiFi/utility/wl_types.h	/^        AUTH_MODE_SHARED_KEY,$/;"	e	enum:wl_auth_mode
AUTH_MODE_SHARED_KEY	./WiFi/utility/wl_types.h	/^        AUTH_MODE_SHARED_KEY,$/;"	e	enum:wl_auth_mode
AUTH_MODE_WPA2_PSK	./WiFi/utility/wl_types.h	/^        AUTH_MODE_WPA2_PSK$/;"	e	enum:wl_auth_mode
AUTH_MODE_WPA2_PSK	./WiFi/utility/wl_types.h	/^        AUTH_MODE_WPA2_PSK$/;"	e	enum:wl_auth_mode
AUTH_MODE_WPA2	./WiFi/utility/wl_types.h	/^        AUTH_MODE_WPA2,$/;"	e	enum:wl_auth_mode
AUTH_MODE_WPA2	./WiFi/utility/wl_types.h	/^        AUTH_MODE_WPA2,$/;"	e	enum:wl_auth_mode
AUTH_MODE_WPA_PSK	./WiFi/utility/wl_types.h	/^        AUTH_MODE_WPA_PSK,$/;"	e	enum:wl_auth_mode
AUTH_MODE_WPA_PSK	./WiFi/utility/wl_types.h	/^        AUTH_MODE_WPA_PSK,$/;"	e	enum:wl_auth_mode
AUTH_MODE_WPA	./WiFi/utility/wl_types.h	/^        AUTH_MODE_WPA,$/;"	e	enum:wl_auth_mode
AUTH_MODE_WPA	./WiFi/utility/wl_types.h	/^        AUTH_MODE_WPA,$/;"	e	enum:wl_auth_mode
AUTHORITATIVE_FLAG	./Ethernet/Dns.cpp	27;"	d	file:
AUTHORITATIVE_FLAG	./Ethernet/Dns.cpp	27;"	d	file:
autoscroll	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::autoscroll(void) {$/;"	f	class:LiquidCrystal
autoscroll	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::autoscroll(void) {$/;"	f	class:LiquidCrystal
availableBytes	./GSM/GSM3CircularBuffer.h	/^		inline byte availableBytes(){ return ((head-(tail+1))&__BUFFERMASK__);};$/;"	f	class:GSM3CircularBuffer
availableBytes	./GSM/GSM3CircularBuffer.h	/^		inline byte availableBytes(){ return ((head-(tail+1))&__BUFFERMASK__);};$/;"	f	class:GSM3CircularBuffer
available	./Ethernet/EthernetClient.cpp	/^int EthernetClient::available() {$/;"	f	class:EthernetClient
available	./Ethernet/EthernetClient.cpp	/^int EthernetClient::available() {$/;"	f	class:EthernetClient
available	./Ethernet/EthernetServer.cpp	/^EthernetClient EthernetServer::available()$/;"	f	class:EthernetServer
available	./Ethernet/EthernetServer.cpp	/^EthernetClient EthernetServer::available()$/;"	f	class:EthernetServer
available	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::available() {$/;"	f	class:EthernetUDP
available	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::available() {$/;"	f	class:EthernetUDP
available	./Firmata/Firmata.cpp	/^int FirmataClass::available(void)$/;"	f	class:FirmataClass
available	./Firmata/Firmata.cpp	/^int FirmataClass::available(void)$/;"	f	class:FirmataClass
available	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::available()$/;"	f	class:GSM3MobileClientService
available	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::available()$/;"	f	class:GSM3MobileClientService
available	./GSM/GSM3MobileServerService.cpp	/^GSM3MobileClientService GSM3MobileServerService::available(bool synch)$/;"	f	class:GSM3MobileServerService
available	./GSM/GSM3MobileServerService.cpp	/^GSM3MobileClientService GSM3MobileServerService::available(bool synch)$/;"	f	class:GSM3MobileServerService
available	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^int\/*bool*\/ GSM3ShieldV1DirectModemProvider::available()$/;"	f	class:GSM3ShieldV1DirectModemProvider
available	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^int\/*bool*\/ GSM3ShieldV1DirectModemProvider::available()$/;"	f	class:GSM3ShieldV1DirectModemProvider
available	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::available()$/;"	f	class:GSM3SMSService
available	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::available()$/;"	f	class:GSM3SMSService
available	./Robot_Control/Wire.cpp	/^int TwoWire::available(void)$/;"	f	class:TwoWire
available	./Robot_Control/Wire.cpp	/^int TwoWire::available(void)$/;"	f	class:TwoWire
available	./SD/File.cpp	/^int File::available() {$/;"	f	class:File
available	./SD/File.cpp	/^int File::available() {$/;"	f	class:File
availableSMSContinue	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::availableSMSContinue()$/;"	f	class:GSM3ShieldV1SMSProvider
availableSMSContinue	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::availableSMSContinue()$/;"	f	class:GSM3ShieldV1SMSProvider
availableSMS	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::availableSMS()$/;"	f	class:GSM3MobileMockupProvider
availableSMS	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::availableSMS()$/;"	f	class:GSM3MobileMockupProvider
availableSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int availableSMS(){return 0;};$/;"	f	class:GSM3MobileSMSProvider
availableSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int availableSMS(){return 0;};$/;"	f	class:GSM3MobileSMSProvider
AVAILABLESMS	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
AVAILABLESMS	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
availableSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::availableSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
availableSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::availableSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
availableSocketContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::availableSocketContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
availableSocketContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::availableSocketContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
availableSocket	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::availableSocket(int idsocket)$/;"	f	class:GSM3MobileMockupProvider
availableSocket	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::availableSocket(int idsocket)$/;"	f	class:GSM3MobileMockupProvider
AVAILABLESOCKET	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
AVAILABLESOCKET	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
availableSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::availableSocket(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
availableSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::availableSocket(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
availableSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::availableSocket(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
availableSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::availableSocket(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
available	./SoftwareSerial/SoftwareSerial.cpp	/^int SoftwareSerial::available()$/;"	f	class:SoftwareSerial
available	./SoftwareSerial/SoftwareSerial.cpp	/^int SoftwareSerial::available()$/;"	f	class:SoftwareSerial
available	./WiFi/WiFiClient.cpp	/^int WiFiClient::available() {$/;"	f	class:WiFiClient
available	./WiFi/WiFiClient.cpp	/^int WiFiClient::available() {$/;"	f	class:WiFiClient
available	./WiFi/WiFiServer.cpp	/^WiFiClient WiFiServer::available(byte* status)$/;"	f	class:WiFiServer
available	./WiFi/WiFiServer.cpp	/^WiFiClient WiFiServer::available(byte* status)$/;"	f	class:WiFiServer
available	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::available() {$/;"	f	class:WiFiUDP
available	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::available() {$/;"	f	class:WiFiUDP
available	./Wire/Wire.cpp	/^int TwoWire::available(void)$/;"	f	class:TwoWire
available	./Wire/Wire.cpp	/^int TwoWire::available(void)$/;"	f	class:TwoWire
AVAIL_DATA_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    AVAIL_DATA_TCP_CMD	= 0x2B,$/;"	e	enum:__anon4
AVAIL_DATA_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    AVAIL_DATA_TCP_CMD	= 0x2B,$/;"	e	enum:__anon4
availData	./WiFi/utility/server_drv.cpp	/^uint16_t ServerDrv::availData(uint8_t sock)$/;"	f	class:ServerDrv
availData	./WiFi/utility/server_drv.cpp	/^uint16_t ServerDrv::availData(uint8_t sock)$/;"	f	class:ServerDrv
averageAnalogInput	./Robot_Control/keyboard.cpp	/^int RobotControl::averageAnalogInput(int pinNum)$/;"	f	class:RobotControl
averageAnalogInput	./Robot_Control/keyboard.cpp	/^int RobotControl::averageAnalogInput(int pinNum)$/;"	f	class:RobotControl
background	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::background(color c) {$/;"	f	class:Adafruit_GFX
background	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::background(color c) {$/;"	f	class:Adafruit_GFX
background	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::background(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
background	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::background(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
backGround	./Robot_Control/ArduinoRobot.h	/^		uint16_t backGround;\/\/background color$/;"	m	class:RobotControl
backGround	./Robot_Control/ArduinoRobot.h	/^		uint16_t backGround;\/\/background color$/;"	m	class:RobotControl
background	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::background(color c) {$/;"	f	class:Adafruit_GFX
background	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::background(color c) {$/;"	f	class:Adafruit_GFX
background	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::background(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
background	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::background(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
BACKWARD	./AFMotor/AFMotor.h	109;"	d
BACKWARD	./AFMotor/AFMotor.h	109;"	d
backwardstep1	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void backwardstep1() {  $/;"	f
backwardstep1	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void backwardstep1() {  $/;"	f
backwardstep2	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void backwardstep2() {  $/;"	f
backwardstep2	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void backwardstep2() {  $/;"	f
backwardstep	./AFMotor/examples/AFMotor_ConstantSpeed/AFMotor_ConstantSpeed.pde	/^void backwardstep() {  $/;"	f
backwardstep	./AFMotor/examples/AFMotor_ConstantSpeed/AFMotor_ConstantSpeed.pde	/^void backwardstep() {  $/;"	f
BATTERY_BMP	./Robot_Control/ArduinoRobot.h	35;"	d
BATTERY_BMP	./Robot_Control/ArduinoRobot.h	35;"	d
baud	./GSM/GSM3SoftSerial.cpp	/^  long baud;$/;"	m	struct:_DELAY_TABLE	file:
baud	./GSM/GSM3SoftSerial.cpp	/^  long baud;$/;"	m	struct:_DELAY_TABLE	file:
baud	./SoftwareSerial/SoftwareSerial.cpp	/^  long baud;$/;"	m	struct:_DELAY_TABLE	file:
baud	./SoftwareSerial/SoftwareSerial.cpp	/^  long baud;$/;"	m	struct:_DELAY_TABLE	file:
Bcmd	./Robot_Control/Arduino_LCD.cpp	/^  Bcmd[] = {                    \/\/ Initialization commands for 7735B screens$/;"	v
Bcmd	./Robot_Control/Arduino_LCD.cpp	/^  Bcmd[] = {                    \/\/ Initialization commands for 7735B screens$/;"	v
Bcmd	./TFT/utility/Adafruit_ST7735.cpp	/^  Bcmd[] = {                  \/\/ Initialization commands for 7735B screens$/;"	v	file:
Bcmd	./TFT/utility/Adafruit_ST7735.cpp	/^  Bcmd[] = {                  \/\/ Initialization commands for 7735B screens$/;"	v	file:
BEEP_DOUBLE	./Robot_Control/ArduinoRobot.h	30;"	d
BEEP_DOUBLE	./Robot_Control/ArduinoRobot.h	30;"	d
BEEP_LONG	./Robot_Control/ArduinoRobot.h	31;"	d
BEEP_LONG	./Robot_Control/ArduinoRobot.h	31;"	d
beep	./Robot_Control/Melody.cpp	/^void RobotControl::beep(int beep_length){$/;"	f	class:RobotControl
beep	./Robot_Control/Melody.cpp	/^void RobotControl::beep(int beep_length){$/;"	f	class:RobotControl
BEEP_SIMPLE	./Robot_Control/ArduinoRobot.h	29;"	d
BEEP_SIMPLE	./Robot_Control/ArduinoRobot.h	29;"	d
beginBMPFromEEPROM	./Robot_Control/lcd.cpp	/^void RobotControl::beginBMPFromEEPROM(){$/;"	f	class:RobotControl
beginBMPFromEEPROM	./Robot_Control/lcd.cpp	/^void RobotControl::beginBMPFromEEPROM(){$/;"	f	class:RobotControl
beginCylinderHigh	./Robot_Control/FatStructs.h	/^  unsigned beginCylinderHigh : 2;$/;"	m	struct:partitionTable
beginCylinderHigh	./Robot_Control/FatStructs.h	/^  unsigned beginCylinderHigh : 2;$/;"	m	struct:partitionTable
beginCylinderHigh	./SD/utility/FatStructs.h	/^  unsigned beginCylinderHigh : 2;$/;"	m	struct:partitionTable
beginCylinderHigh	./SD/utility/FatStructs.h	/^  unsigned beginCylinderHigh : 2;$/;"	m	struct:partitionTable
beginCylinderLow	./Robot_Control/FatStructs.h	/^  uint8_t  beginCylinderLow;$/;"	m	struct:partitionTable
beginCylinderLow	./Robot_Control/FatStructs.h	/^  uint8_t  beginCylinderLow;$/;"	m	struct:partitionTable
beginCylinderLow	./SD/utility/FatStructs.h	/^  uint8_t  beginCylinderLow;$/;"	m	struct:partitionTable
beginCylinderLow	./SD/utility/FatStructs.h	/^  uint8_t  beginCylinderLow;$/;"	m	struct:partitionTable
begin	./Ethernet/Dns.cpp	/^void DNSClient::begin(const IPAddress& aDNSServer)$/;"	f	class:DNSClient
begin	./Ethernet/Dns.cpp	/^void DNSClient::begin(const IPAddress& aDNSServer)$/;"	f	class:DNSClient
begin	./Ethernet/Ethernet.cpp	/^int EthernetClass::begin(uint8_t *mac_address)$/;"	f	class:EthernetClass
begin	./Ethernet/Ethernet.cpp	/^int EthernetClass::begin(uint8_t *mac_address)$/;"	f	class:EthernetClass
begin	./Ethernet/Ethernet.cpp	/^void EthernetClass::begin(uint8_t *mac_address, IPAddress local_ip)$/;"	f	class:EthernetClass
begin	./Ethernet/Ethernet.cpp	/^void EthernetClass::begin(uint8_t *mac_address, IPAddress local_ip)$/;"	f	class:EthernetClass
begin	./Ethernet/Ethernet.cpp	/^void EthernetClass::begin(uint8_t *mac_address, IPAddress local_ip, IPAddress dns_server)$/;"	f	class:EthernetClass
begin	./Ethernet/Ethernet.cpp	/^void EthernetClass::begin(uint8_t *mac_address, IPAddress local_ip, IPAddress dns_server)$/;"	f	class:EthernetClass
begin	./Ethernet/Ethernet.cpp	/^void EthernetClass::begin(uint8_t *mac_address, IPAddress local_ip, IPAddress dns_server, IPAddress gateway)$/;"	f	class:EthernetClass
begin	./Ethernet/Ethernet.cpp	/^void EthernetClass::begin(uint8_t *mac_address, IPAddress local_ip, IPAddress dns_server, IPAddress gateway)$/;"	f	class:EthernetClass
begin	./Ethernet/Ethernet.cpp	/^void EthernetClass::begin(uint8_t *mac, IPAddress local_ip, IPAddress dns_server, IPAddress gateway, IPAddress subnet)$/;"	f	class:EthernetClass
begin	./Ethernet/Ethernet.cpp	/^void EthernetClass::begin(uint8_t *mac, IPAddress local_ip, IPAddress dns_server, IPAddress gateway, IPAddress subnet)$/;"	f	class:EthernetClass
begin	./Ethernet/EthernetServer.cpp	/^void EthernetServer::begin()$/;"	f	class:EthernetServer
begin	./Ethernet/EthernetServer.cpp	/^void EthernetServer::begin()$/;"	f	class:EthernetServer
begin	./Ethernet/EthernetUdp.cpp	/^uint8_t EthernetUDP::begin(uint16_t port) {$/;"	f	class:EthernetUDP
begin	./Ethernet/EthernetUdp.cpp	/^uint8_t EthernetUDP::begin(uint16_t port) {$/;"	f	class:EthernetUDP
begin	./Firmata/Firmata.cpp	/^void FirmataClass::begin(long speed)$/;"	f	class:FirmataClass
begin	./Firmata/Firmata.cpp	/^void FirmataClass::begin(long speed)$/;"	f	class:FirmataClass
begin	./Firmata/Firmata.cpp	/^void FirmataClass::begin(Stream &s)$/;"	f	class:FirmataClass
begin	./Firmata/Firmata.cpp	/^void FirmataClass::begin(Stream &s)$/;"	f	class:FirmataClass
begin	./Firmata/Firmata.cpp	/^void FirmataClass::begin(void)$/;"	f	class:FirmataClass
begin	./Firmata/Firmata.cpp	/^void FirmataClass::begin(void)$/;"	f	class:FirmataClass
begin	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::begin(char* pin)$/;"	f	class:GSM3MobileMockupProvider
begin	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::begin(char* pin)$/;"	f	class:GSM3MobileMockupProvider
begin	./GSM/GSM3MobileServerService.cpp	/^void GSM3MobileServerService::begin()$/;"	f	class:GSM3MobileServerService
begin	./GSM/GSM3MobileServerService.cpp	/^void GSM3MobileServerService::begin()$/;"	f	class:GSM3MobileServerService
begin	./GSM/GSM3ShieldV1AccessProvider.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1AccessProvider::begin(char* pin, bool restart, bool synchronous)$/;"	f	class:GSM3ShieldV1AccessProvider
begin	./GSM/GSM3ShieldV1AccessProvider.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1AccessProvider::begin(char* pin, bool restart, bool synchronous)$/;"	f	class:GSM3ShieldV1AccessProvider
begin	./GSM/GSM3ShieldV1BandManagement.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1BandManagement::begin()$/;"	f	class:GSM3ShieldV1BandManagement
begin	./GSM/GSM3ShieldV1BandManagement.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1BandManagement::begin()$/;"	f	class:GSM3ShieldV1BandManagement
begin	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::begin()$/;"	f	class:GSM3ShieldV1DirectModemProvider
begin	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::begin()$/;"	f	class:GSM3ShieldV1DirectModemProvider
begin	./GSM/GSM3ShieldV1ModemVerification.cpp	/^int GSM3ShieldV1ModemVerification::begin()$/;"	f	class:GSM3ShieldV1ModemVerification
begin	./GSM/GSM3ShieldV1ModemVerification.cpp	/^int GSM3ShieldV1ModemVerification::begin()$/;"	f	class:GSM3ShieldV1ModemVerification
begin	./GSM/GSM3ShieldV1PinManagement.cpp	/^void GSM3ShieldV1PinManagement::begin()$/;"	f	class:GSM3ShieldV1PinManagement
begin	./GSM/GSM3ShieldV1PinManagement.cpp	/^void GSM3ShieldV1PinManagement::begin()$/;"	f	class:GSM3ShieldV1PinManagement
begin	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1ScanNetworks::begin()$/;"	f	class:GSM3ShieldV1ScanNetworks
begin	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1ScanNetworks::begin()$/;"	f	class:GSM3ShieldV1ScanNetworks
begin	./GSM/GSM3SoftSerial.cpp	/^int GSM3SoftSerial::begin(long speed)$/;"	f	class:GSM3SoftSerial
begin	./GSM/GSM3SoftSerial.cpp	/^int GSM3SoftSerial::begin(long speed)$/;"	f	class:GSM3SoftSerial
beginHead	./Robot_Control/FatStructs.h	/^  uint8_t  beginHead;$/;"	m	struct:partitionTable
beginHead	./Robot_Control/FatStructs.h	/^  uint8_t  beginHead;$/;"	m	struct:partitionTable
beginHead	./SD/utility/FatStructs.h	/^  uint8_t  beginHead;$/;"	m	struct:partitionTable
beginHead	./SD/utility/FatStructs.h	/^  uint8_t  beginHead;$/;"	m	struct:partitionTable
begin	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {$/;"	f	class:LiquidCrystal
begin	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {$/;"	f	class:LiquidCrystal
beginPacket	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::beginPacket(const char *host, uint16_t port)$/;"	f	class:EthernetUDP
beginPacket	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::beginPacket(const char *host, uint16_t port)$/;"	f	class:EthernetUDP
beginPacket	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::beginPacket(IPAddress ip, uint16_t port)$/;"	f	class:EthernetUDP
beginPacket	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::beginPacket(IPAddress ip, uint16_t port)$/;"	f	class:EthernetUDP
beginPacket	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::beginPacket(const char *host, uint16_t port)$/;"	f	class:WiFiUDP
beginPacket	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::beginPacket(const char *host, uint16_t port)$/;"	f	class:WiFiUDP
beginPacket	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::beginPacket(IPAddress ip, uint16_t port)$/;"	f	class:WiFiUDP
beginPacket	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::beginPacket(IPAddress ip, uint16_t port)$/;"	f	class:WiFiUDP
begin	./Robot_Control/ArduinoRobot.cpp	/^void RobotControl::begin(){$/;"	f	class:RobotControl
begin	./Robot_Control/ArduinoRobot.cpp	/^void RobotControl::begin(){$/;"	f	class:RobotControl
begin	./Robot_Control/Compass.cpp	/^void Compass::begin(){$/;"	f	class:Compass
begin	./Robot_Control/Compass.cpp	/^void Compass::begin(){$/;"	f	class:Compass
begin	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::begin(HardwareSerial *theSerial){$/;"	f	class:EasyTransfer2
begin	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::begin(HardwareSerial *theSerial){$/;"	f	class:EasyTransfer2
begin	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::begin(){$/;"	f	class:EEPROM_I2C
begin	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::begin(){$/;"	f	class:EEPROM_I2C
begin	./Robot_Control/Multiplexer.cpp	/^void Multiplexer::begin(uint8_t* selectors, uint8_t Z, uint8_t length){$/;"	f	class:Multiplexer
begin	./Robot_Control/Multiplexer.cpp	/^void Multiplexer::begin(uint8_t* selectors, uint8_t Z, uint8_t length){$/;"	f	class:Multiplexer
begin	./Robot_Control/SPI.cpp	/^void SPIClass::begin() {$/;"	f	class:SPIClass
begin	./Robot_Control/SPI.cpp	/^void SPIClass::begin() {$/;"	f	class:SPIClass
begin	./Robot_Control/Squawk.cpp	/^void SquawkSynth::begin(uint16_t hz) {$/;"	f	class:SquawkSynth
begin	./Robot_Control/Squawk.cpp	/^void SquawkSynth::begin(uint16_t hz) {$/;"	f	class:SquawkSynth
begin	./Robot_Control/Wire.cpp	/^void TwoWire::begin(int address)$/;"	f	class:TwoWire
begin	./Robot_Control/Wire.cpp	/^void TwoWire::begin(int address)$/;"	f	class:TwoWire
begin	./Robot_Control/Wire.cpp	/^void TwoWire::begin(uint8_t address)$/;"	f	class:TwoWire
begin	./Robot_Control/Wire.cpp	/^void TwoWire::begin(uint8_t address)$/;"	f	class:TwoWire
begin	./Robot_Control/Wire.cpp	/^void TwoWire::begin(void)$/;"	f	class:TwoWire
begin	./Robot_Control/Wire.cpp	/^void TwoWire::begin(void)$/;"	f	class:TwoWire
begin	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::begin(){$/;"	f	class:RobotMotorBoard
begin	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::begin(){$/;"	f	class:RobotMotorBoard
begin	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::begin(HardwareSerial *theSerial){$/;"	f	class:EasyTransfer2
begin	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::begin(HardwareSerial *theSerial){$/;"	f	class:EasyTransfer2
begin	./Robot_Motor/Multiplexer.cpp	/^void Multiplexer::begin(uint8_t* selectors, uint8_t Z, uint8_t length){$/;"	f	class:Multiplexer
begin	./Robot_Motor/Multiplexer.cpp	/^void Multiplexer::begin(uint8_t* selectors, uint8_t Z, uint8_t length){$/;"	f	class:Multiplexer
beginSD	./Robot_Control/RobotSdCard.cpp	/^void RobotControl::beginSD(){$/;"	f	class:RobotControl
beginSD	./Robot_Control/RobotSdCard.cpp	/^void RobotControl::beginSD(){$/;"	f	class:RobotControl
begin	./SD/SD.cpp	/^boolean SDClass::begin(uint8_t csPin) {$/;"	f	class:SDClass
begin	./SD/SD.cpp	/^boolean SDClass::begin(uint8_t csPin) {$/;"	f	class:SDClass
beginSector	./Robot_Control/FatStructs.h	/^  unsigned beginSector : 6;$/;"	m	struct:partitionTable
beginSector	./Robot_Control/FatStructs.h	/^  unsigned beginSector : 6;$/;"	m	struct:partitionTable
beginSector	./SD/utility/FatStructs.h	/^  unsigned beginSector : 6;$/;"	m	struct:partitionTable
beginSector	./SD/utility/FatStructs.h	/^  unsigned beginSector : 6;$/;"	m	struct:partitionTable
beginSMSContinue	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::beginSMSContinue()$/;"	f	class:GSM3ShieldV1SMSProvider
beginSMSContinue	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::beginSMSContinue()$/;"	f	class:GSM3ShieldV1SMSProvider
beginSMS	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::beginSMS(const char* number)$/;"	f	class:GSM3MobileMockupProvider
beginSMS	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::beginSMS(const char* number)$/;"	f	class:GSM3MobileMockupProvider
beginSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int beginSMS(const char* to){return 0;};$/;"	f	class:GSM3MobileSMSProvider
beginSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int beginSMS(const char* to){return 0;};$/;"	f	class:GSM3MobileSMSProvider
BEGINSMS	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
BEGINSMS	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
beginSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::beginSMS(const char* to)$/;"	f	class:GSM3ShieldV1SMSProvider
beginSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::beginSMS(const char* to)$/;"	f	class:GSM3ShieldV1SMSProvider
beginSMS	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::beginSMS(const char *number)$/;"	f	class:GSM3SMSService
beginSMS	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::beginSMS(const char *number)$/;"	f	class:GSM3SMSService
begin	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::begin(long speed)$/;"	f	class:SoftwareSerial
begin	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::begin(long speed)$/;"	f	class:SoftwareSerial
beginSpeaker	./Robot_Control/Melody.cpp	/^void RobotControl::beginSpeaker(uint16_t frequency){$/;"	f	class:RobotControl
beginSpeaker	./Robot_Control/Melody.cpp	/^void RobotControl::beginSpeaker(uint16_t frequency){$/;"	f	class:RobotControl
begin	./SPI/SPI.cpp	/^void SPIClass::begin() {$/;"	f	class:SPIClass
begin	./SPI/SPI.cpp	/^void SPIClass::begin() {$/;"	f	class:SPIClass
beginTFT	./Robot_Control/lcd.cpp	/^void RobotControl::beginTFT(uint16_t foreGround, uint16_t backGround){$/;"	f	class:RobotControl
beginTFT	./Robot_Control/lcd.cpp	/^void RobotControl::beginTFT(uint16_t foreGround, uint16_t backGround){$/;"	f	class:RobotControl
begin	./TFT/TFT.cpp	/^void TFT::begin() {$/;"	f	class:TFT
begin	./TFT/TFT.cpp	/^void TFT::begin() {$/;"	f	class:TFT
begin	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSCustom::begin(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber)$/;"	f	class:TinyGPSCustom
begin	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSCustom::begin(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber)$/;"	f	class:TinyGPSCustom
_beginTransmission	./Robot_Control/Compass.cpp	/^void Compass::_beginTransmission(){$/;"	f	class:Compass
_beginTransmission	./Robot_Control/Compass.cpp	/^void Compass::_beginTransmission(){$/;"	f	class:Compass
_beginTransmission	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::_beginTransmission(unsigned int eeaddress){$/;"	f	class:EEPROM_I2C
_beginTransmission	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::_beginTransmission(unsigned int eeaddress){$/;"	f	class:EEPROM_I2C
beginTransmission	./Robot_Control/Wire.cpp	/^void TwoWire::beginTransmission(int address)$/;"	f	class:TwoWire
beginTransmission	./Robot_Control/Wire.cpp	/^void TwoWire::beginTransmission(int address)$/;"	f	class:TwoWire
beginTransmission	./Robot_Control/Wire.cpp	/^void TwoWire::beginTransmission(uint8_t address)$/;"	f	class:TwoWire
beginTransmission	./Robot_Control/Wire.cpp	/^void TwoWire::beginTransmission(uint8_t address)$/;"	f	class:TwoWire
beginTransmission	./Wire/Wire.cpp	/^void TwoWire::beginTransmission(int address)$/;"	f	class:TwoWire
beginTransmission	./Wire/Wire.cpp	/^void TwoWire::beginTransmission(int address)$/;"	f	class:TwoWire
beginTransmission	./Wire/Wire.cpp	/^void TwoWire::beginTransmission(uint8_t address)$/;"	f	class:TwoWire
beginTransmission	./Wire/Wire.cpp	/^void TwoWire::beginTransmission(uint8_t address)$/;"	f	class:TwoWire
begin	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::begin()$/;"	f	class:SpiDrv
begin	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::begin()$/;"	f	class:SpiDrv
begin	./WiFi/WiFi.cpp	/^int WiFiClass::begin(char* ssid, const char *passphrase)$/;"	f	class:WiFiClass
begin	./WiFi/WiFi.cpp	/^int WiFiClass::begin(char* ssid, const char *passphrase)$/;"	f	class:WiFiClass
begin	./WiFi/WiFi.cpp	/^int WiFiClass::begin(char* ssid)$/;"	f	class:WiFiClass
begin	./WiFi/WiFi.cpp	/^int WiFiClass::begin(char* ssid)$/;"	f	class:WiFiClass
begin	./WiFi/WiFi.cpp	/^int WiFiClass::begin(char* ssid, uint8_t key_idx, const char *key)$/;"	f	class:WiFiClass
begin	./WiFi/WiFi.cpp	/^int WiFiClass::begin(char* ssid, uint8_t key_idx, const char *key)$/;"	f	class:WiFiClass
begin	./WiFi/WiFiServer.cpp	/^void WiFiServer::begin()$/;"	f	class:WiFiServer
begin	./WiFi/WiFiServer.cpp	/^void WiFiServer::begin()$/;"	f	class:WiFiServer
begin	./WiFi/WiFiUdp.cpp	/^uint8_t WiFiUDP::begin(uint16_t port) {$/;"	f	class:WiFiUDP
begin	./WiFi/WiFiUdp.cpp	/^uint8_t WiFiUDP::begin(uint16_t port) {$/;"	f	class:WiFiUDP
begin	./Wire/Wire.cpp	/^void TwoWire::begin(int address)$/;"	f	class:TwoWire
begin	./Wire/Wire.cpp	/^void TwoWire::begin(int address)$/;"	f	class:TwoWire
begin	./Wire/Wire.cpp	/^void TwoWire::begin(uint8_t address)$/;"	f	class:TwoWire
begin	./Wire/Wire.cpp	/^void TwoWire::begin(uint8_t address)$/;"	f	class:TwoWire
begin	./Wire/Wire.cpp	/^void TwoWire::begin(void)$/;"	f	class:TwoWire
begin	./Wire/Wire.cpp	/^void TwoWire::begin(void)$/;"	f	class:TwoWire
beginWithDHCP	./Ethernet/Dhcp.cpp	/^int DhcpClass::beginWithDHCP(uint8_t *mac, unsigned long timeout, unsigned long responseTimeout)$/;"	f	class:DhcpClass
beginWithDHCP	./Ethernet/Dhcp.cpp	/^int DhcpClass::beginWithDHCP(uint8_t *mac, unsigned long timeout, unsigned long responseTimeout)$/;"	f	class:DhcpClass
beginWrite	./GSM/GSM3MobileClientService.cpp	/^void GSM3MobileClientService::beginWrite(bool sync)$/;"	f	class:GSM3MobileClientService
beginWrite	./GSM/GSM3MobileClientService.cpp	/^void GSM3MobileClientService::beginWrite(bool sync)$/;"	f	class:GSM3MobileClientService
beginWrite	./GSM/GSM3MobileServerService.cpp	/^void GSM3MobileServerService::beginWrite()$/;"	f	class:GSM3MobileServerService
beginWrite	./GSM/GSM3MobileServerService.cpp	/^void GSM3MobileServerService::beginWrite()$/;"	f	class:GSM3MobileServerService
beginWriteSocketContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::beginWriteSocketContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
beginWriteSocketContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::beginWriteSocketContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
BEGINWRITESOCKET	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
BEGINWRITESOCKET	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
beginWriteSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::beginWriteSocket(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
beginWriteSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::beginWriteSocket(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
beginWriteSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::beginWriteSocket(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
beginWriteSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::beginWriteSocket(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
billionths	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t billionths;$/;"	m	struct:RawDegrees
billionths	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t billionths;$/;"	m	struct:RawDegrees
biosParmBlock	./Robot_Control/FatStructs.h	/^struct biosParmBlock {$/;"	s
biosParmBlock	./Robot_Control/FatStructs.h	/^struct biosParmBlock {$/;"	s
biosParmBlock	./SD/utility/FatStructs.h	/^struct biosParmBlock {$/;"	s
biosParmBlock	./SD/utility/FatStructs.h	/^struct biosParmBlock {$/;"	s
B_IR0	./Robot_Control/ArduinoRobot.h	95;"	d
B_IR0	./Robot_Control/ArduinoRobot.h	95;"	d
B_IR1	./Robot_Control/ArduinoRobot.h	96;"	d
B_IR1	./Robot_Control/ArduinoRobot.h	96;"	d
B_IR2	./Robot_Control/ArduinoRobot.h	97;"	d
B_IR2	./Robot_Control/ArduinoRobot.h	97;"	d
B_IR3	./Robot_Control/ArduinoRobot.h	98;"	d
B_IR3	./Robot_Control/ArduinoRobot.h	98;"	d
B_IR4	./Robot_Control/ArduinoRobot.h	99;"	d
B_IR4	./Robot_Control/ArduinoRobot.h	99;"	d
bit	./SD/utility/Sd2PinMap.h	/^  uint8_t bit;$/;"	m	struct:pin_map_t
bit	./SD/utility/Sd2PinMap.h	/^  uint8_t bit;$/;"	m	struct:pin_map_t
BLACK	./Robot_Control/ArduinoRobot.h	116;"	d
BLACK	./Robot_Control/ArduinoRobot.h	116;"	d
BlinkDebugLED	./GSM_Shield/GSM_Shield.cpp	/^void  GSM::BlinkDebugLED (byte num_of_blink)$/;"	f	class:GSM
BlinkDebugLED	./GSM_Shield/GSM_Shield.cpp	/^void  GSM::BlinkDebugLED (byte num_of_blink)$/;"	f	class:GSM
blink	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::blink() {$/;"	f	class:LiquidCrystal
blink	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::blink() {$/;"	f	class:LiquidCrystal
blinkVersion	./Firmata/Firmata.cpp	/^void FirmataClass::blinkVersion(void)$/;"	f	class:FirmataClass
blinkVersion	./Firmata/Firmata.cpp	/^void FirmataClass::blinkVersion(void)$/;"	f	class:FirmataClass
blockNumber	./SD/utility/SdFat.h	/^  uint32_t blockNumber(uint32_t cluster, uint32_t position) const {$/;"	f	class:SdVolume
blockNumber	./SD/utility/SdFat.h	/^  uint32_t blockNumber(uint32_t cluster, uint32_t position) const {$/;"	f	class:SdVolume
blockOfCluster	./Robot_Control/Fat16.h	/^  static uint8_t blockOfCluster(uint32_t position) {$/;"	f	class:Fat16
blockOfCluster	./Robot_Control/Fat16.h	/^  static uint8_t blockOfCluster(uint32_t position) {$/;"	f	class:Fat16
blockOfCluster	./SD/utility/SdFat.h	/^  uint8_t blockOfCluster(uint32_t position) const {$/;"	f	class:SdVolume
blockOfCluster	./SD/utility/SdFat.h	/^  uint8_t blockOfCluster(uint32_t position) const {$/;"	f	class:SdVolume
block_	./SD/utility/Sd2Card.h	/^  uint32_t block_;$/;"	m	class:Sd2Card
block_	./SD/utility/Sd2Card.h	/^  uint32_t block_;$/;"	m	class:Sd2Card
blocksPerCluster_	./Robot_Control/Fat16.cpp	/^uint8_t  Fat16::blocksPerCluster_;       \/\/ must be power of 2$/;"	m	class:Fat16	file:
blocksPerCluster_	./Robot_Control/Fat16.cpp	/^uint8_t  Fat16::blocksPerCluster_;       \/\/ must be power of 2$/;"	m	class:Fat16	file:
blocksPerCluster_	./Robot_Control/Fat16.h	/^  static uint8_t  blocksPerCluster_;   \/\/ must be power of 2$/;"	m	class:Fat16
blocksPerCluster_	./Robot_Control/Fat16.h	/^  static uint8_t  blocksPerCluster_;   \/\/ must be power of 2$/;"	m	class:Fat16
blocksPerCluster_	./SD/utility/SdFat.h	/^  uint8_t blocksPerCluster_;    \/\/ cluster size in blocks$/;"	m	class:SdVolume
blocksPerCluster_	./SD/utility/SdFat.h	/^  uint8_t blocksPerCluster_;    \/\/ cluster size in blocks$/;"	m	class:SdVolume
blocksPerCluster	./SD/utility/SdFat.h	/^  uint8_t blocksPerCluster(void) const {return blocksPerCluster_;}$/;"	f	class:SdVolume
blocksPerCluster	./SD/utility/SdFat.h	/^  uint8_t blocksPerCluster(void) const {return blocksPerCluster_;}$/;"	f	class:SdVolume
blocksPerFat_	./Robot_Control/Fat16.cpp	/^fat_t    Fat16::blocksPerFat_;           \/\/ number of blocks in one FAT$/;"	m	class:Fat16	file:
blocksPerFat_	./Robot_Control/Fat16.cpp	/^fat_t    Fat16::blocksPerFat_;           \/\/ number of blocks in one FAT$/;"	m	class:Fat16	file:
blocksPerFat_	./Robot_Control/Fat16.h	/^  static fat_t    blocksPerFat_;       \/\/ number of blocks in one FAT$/;"	m	class:Fat16
blocksPerFat_	./Robot_Control/Fat16.h	/^  static fat_t    blocksPerFat_;       \/\/ number of blocks in one FAT$/;"	m	class:Fat16
blocksPerFat_	./SD/utility/SdFat.h	/^  uint32_t blocksPerFat_;       \/\/ FAT size in blocks$/;"	m	class:SdVolume
blocksPerFat_	./SD/utility/SdFat.h	/^  uint32_t blocksPerFat_;       \/\/ FAT size in blocks$/;"	m	class:SdVolume
blocksPerFat	./SD/utility/SdFat.h	/^  uint32_t blocksPerFat(void)  const {return blocksPerFat_;}$/;"	f	class:SdVolume
blocksPerFat	./SD/utility/SdFat.h	/^  uint32_t blocksPerFat(void)  const {return blocksPerFat_;}$/;"	f	class:SdVolume
BLUE_PIN	./Esplora/Esplora.cpp	/^const byte BLUE_PIN   = 9;$/;"	v
BLUE_PIN	./Esplora/Esplora.cpp	/^const byte BLUE_PIN   = 9;$/;"	v
BLUE	./Robot_Control/ArduinoRobot.h	117;"	d
BLUE	./Robot_Control/ArduinoRobot.h	117;"	d
_bmpDepth	./TFT/utility/PImage.h	/^  uint8_t  _bmpDepth;              \/\/ Bit depth (currently must be 24)$/;"	m	class:PImage
_bmpDepth	./TFT/utility/PImage.h	/^  uint8_t  _bmpDepth;              \/\/ Bit depth (currently must be 24)$/;"	m	class:PImage
_bmpFile	./TFT/utility/PImage.h	/^  File _bmpFile;$/;"	m	class:PImage
_bmpFile	./TFT/utility/PImage.h	/^  File _bmpFile;$/;"	m	class:PImage
_bmpHeight	./TFT/utility/PImage.h	/^  int  _bmpWidth, _bmpHeight;   \/\/ W+H in pixels$/;"	m	class:PImage
_bmpHeight	./TFT/utility/PImage.h	/^  int  _bmpWidth, _bmpHeight;   \/\/ W+H in pixels$/;"	m	class:PImage
_bmpImageoffset	./TFT/utility/PImage.h	/^  uint32_t _bmpImageoffset;        \/\/ Start of image data in file$/;"	m	class:PImage
_bmpImageoffset	./TFT/utility/PImage.h	/^  uint32_t _bmpImageoffset;        \/\/ Start of image data in file$/;"	m	class:PImage
_bmpWidth	./TFT/utility/PImage.h	/^  int  _bmpWidth, _bmpHeight;   \/\/ W+H in pixels$/;"	m	class:PImage
_bmpWidth	./TFT/utility/PImage.h	/^  int  _bmpWidth, _bmpHeight;   \/\/ W+H in pixels$/;"	m	class:PImage
bootCode	./Robot_Control/FatStructs.h	/^  uint8_t  bootCode[420];$/;"	m	struct:fat32BootSector
bootCode	./Robot_Control/FatStructs.h	/^  uint8_t  bootCode[420];$/;"	m	struct:fat32BootSector
bootCode	./SD/utility/FatStructs.h	/^  uint8_t  bootCode[420];$/;"	m	struct:fat32BootSector
bootCode	./SD/utility/FatStructs.h	/^  uint8_t  bootCode[420];$/;"	m	struct:fat32BootSector
boot	./Robot_Control/FatStructs.h	/^  uint8_t  boot;$/;"	m	struct:partitionTable
boot	./Robot_Control/FatStructs.h	/^  uint8_t  boot;$/;"	m	struct:partitionTable
boot	./SD/utility/FatStructs.h	/^  uint8_t  boot;$/;"	m	struct:partitionTable
boot	./SD/utility/FatStructs.h	/^  uint8_t  boot;$/;"	m	struct:partitionTable
bootSectorSig0	./Robot_Control/FatStructs.h	/^  uint8_t  bootSectorSig0;$/;"	m	struct:fat32BootSector
bootSectorSig0	./Robot_Control/FatStructs.h	/^  uint8_t  bootSectorSig0;$/;"	m	struct:fat32BootSector
bootSectorSig0	./SD/utility/FatStructs.h	/^  uint8_t  bootSectorSig0;$/;"	m	struct:fat32BootSector
bootSectorSig0	./SD/utility/FatStructs.h	/^  uint8_t  bootSectorSig0;$/;"	m	struct:fat32BootSector
bootSectorSig1	./Robot_Control/FatStructs.h	/^  uint8_t  bootSectorSig1;$/;"	m	struct:fat32BootSector
bootSectorSig1	./Robot_Control/FatStructs.h	/^  uint8_t  bootSectorSig1;$/;"	m	struct:fat32BootSector
bootSectorSig1	./SD/utility/FatStructs.h	/^  uint8_t  bootSectorSig1;$/;"	m	struct:fat32BootSector
bootSectorSig1	./SD/utility/FatStructs.h	/^  uint8_t  bootSectorSig1;$/;"	m	struct:fat32BootSector
BOOTSIG0	./Robot_Control/FatStructs.h	/^uint8_t const BOOTSIG0 = 0X55;$/;"	v
BOOTSIG0	./Robot_Control/FatStructs.h	/^uint8_t const BOOTSIG0 = 0X55;$/;"	v
BOOTSIG0	./SD/utility/FatStructs.h	/^uint8_t const BOOTSIG0 = 0X55;$/;"	v
BOOTSIG0	./SD/utility/FatStructs.h	/^uint8_t const BOOTSIG0 = 0X55;$/;"	v
BOOTSIG1	./Robot_Control/FatStructs.h	/^uint8_t const BOOTSIG1 = 0XAA;$/;"	v
BOOTSIG1	./Robot_Control/FatStructs.h	/^uint8_t const BOOTSIG1 = 0XAA;$/;"	v
BOOTSIG1	./SD/utility/FatStructs.h	/^uint8_t const BOOTSIG1 = 0XAA;$/;"	v
BOOTSIG1	./SD/utility/FatStructs.h	/^uint8_t const BOOTSIG1 = 0XAA;$/;"	v
bootSignature	./Robot_Control/FatStructs.h	/^  uint8_t  bootSignature;$/;"	m	struct:fat32BootSector
bootSignature	./Robot_Control/FatStructs.h	/^  uint8_t  bootSignature;$/;"	m	struct:fat32BootSector
bootSignature	./SD/utility/FatStructs.h	/^  uint8_t  bootSignature;$/;"	m	struct:fat32BootSector
bootSignature	./SD/utility/FatStructs.h	/^  uint8_t  bootSignature;$/;"	m	struct:fat32BootSector
bpb	./Robot_Control/FatStructs.h	/^  bpb_t    bpb;$/;"	m	struct:fat32BootSector
bpb	./Robot_Control/FatStructs.h	/^  bpb_t    bpb;$/;"	m	struct:fat32BootSector
bpb	./SD/utility/FatStructs.h	/^  bpb_t    bpb;$/;"	m	struct:fat32BootSector
bpb	./SD/utility/FatStructs.h	/^  bpb_t    bpb;$/;"	m	struct:fat32BootSector
bpb_t	./Robot_Control/FatStructs.h	/^typedef struct biosParmBlock bpb_t;$/;"	t	typeref:struct:biosParmBlock
bpb_t	./Robot_Control/FatStructs.h	/^typedef struct biosParmBlock bpb_t;$/;"	t	typeref:struct:biosParmBlock
bpb_t	./SD/utility/FatStructs.h	/^typedef struct biosParmBlock bpb_t;$/;"	t	typeref:struct:biosParmBlock
bpb_t	./SD/utility/FatStructs.h	/^typedef struct biosParmBlock bpb_t;$/;"	t	typeref:struct:biosParmBlock
BRAKE	./AFMotor/AFMotor.h	110;"	d
BRAKE	./AFMotor/AFMotor.h	110;"	d
_bssid	./WiFi/utility/wifi_drv.cpp	/^uint8_t	WiFiDrv::_bssid[] = {0};$/;"	m	class:WiFiDrv	file:
_bssid	./WiFi/utility/wifi_drv.cpp	/^uint8_t	WiFiDrv::_bssid[] = {0};$/;"	m	class:WiFiDrv	file:
_bssid	./WiFi/utility/wifi_drv.h	/^	static uint8_t 	_bssid[WL_MAC_ADDR_LENGTH];$/;"	m	class:WiFiDrv
_bssid	./WiFi/utility/wifi_drv.h	/^	static uint8_t 	_bssid[WL_MAC_ADDR_LENGTH];$/;"	m	class:WiFiDrv
BSSID	./WiFi/WiFi.cpp	/^uint8_t* WiFiClass::BSSID(uint8_t* bssid)$/;"	f	class:WiFiClass
BSSID	./WiFi/WiFi.cpp	/^uint8_t* WiFiClass::BSSID(uint8_t* bssid)$/;"	f	class:WiFiClass
B_TK1	./Robot_Control/ArduinoRobot.h	89;"	d
B_TK1	./Robot_Control/ArduinoRobot.h	89;"	d
_B_TK1	./Robot_Control/ArduinoRobot.h	/^	int _B_TK1;$/;"	m	struct:MOTOR_BOARD_DATA
_B_TK1	./Robot_Control/ArduinoRobot.h	/^	int _B_TK1;$/;"	m	struct:MOTOR_BOARD_DATA
B_TK1	./Robot_Motor/ArduinoRobotMotorBoard.h	46;"	d
B_TK1	./Robot_Motor/ArduinoRobotMotorBoard.h	46;"	d
B_TK2	./Robot_Control/ArduinoRobot.h	90;"	d
B_TK2	./Robot_Control/ArduinoRobot.h	90;"	d
_B_TK2	./Robot_Control/ArduinoRobot.h	/^	int _B_TK2;$/;"	m	struct:MOTOR_BOARD_DATA
_B_TK2	./Robot_Control/ArduinoRobot.h	/^	int _B_TK2;$/;"	m	struct:MOTOR_BOARD_DATA
B_TK2	./Robot_Motor/ArduinoRobotMotorBoard.h	47;"	d
B_TK2	./Robot_Motor/ArduinoRobotMotorBoard.h	47;"	d
B_TK3	./Robot_Control/ArduinoRobot.h	91;"	d
B_TK3	./Robot_Control/ArduinoRobot.h	91;"	d
_B_TK3	./Robot_Control/ArduinoRobot.h	/^	int _B_TK3;$/;"	m	struct:MOTOR_BOARD_DATA
_B_TK3	./Robot_Control/ArduinoRobot.h	/^	int _B_TK3;$/;"	m	struct:MOTOR_BOARD_DATA
B_TK3	./Robot_Motor/ArduinoRobotMotorBoard.h	48;"	d
B_TK3	./Robot_Motor/ArduinoRobotMotorBoard.h	48;"	d
B_TK4	./Robot_Control/ArduinoRobot.h	92;"	d
B_TK4	./Robot_Control/ArduinoRobot.h	92;"	d
_B_TK4	./Robot_Control/ArduinoRobot.h	/^	int _B_TK4;$/;"	m	struct:MOTOR_BOARD_DATA
_B_TK4	./Robot_Control/ArduinoRobot.h	/^	int _B_TK4;$/;"	m	struct:MOTOR_BOARD_DATA
B_TK4	./Robot_Motor/ArduinoRobotMotorBoard.h	49;"	d
B_TK4	./Robot_Motor/ArduinoRobotMotorBoard.h	49;"	d
bufferData	./Ethernet/utility/socket.cpp	/^uint16_t bufferData(SOCKET s, uint16_t offset, const uint8_t* buf, uint16_t len)$/;"	f
bufferData	./Ethernet/utility/socket.cpp	/^uint16_t bufferData(SOCKET s, uint16_t offset, const uint8_t* buf, uint16_t len)$/;"	f
bufferICCID	./GSM/GSM3ShieldV1CellManagement.h	/^		char *bufferICCID;$/;"	m	class:GSM3ShieldV1CellManagement
bufferICCID	./GSM/GSM3ShieldV1CellManagement.h	/^		char *bufferICCID;$/;"	m	class:GSM3ShieldV1CellManagement
BUFFER_LENGTH	./Robot_Control/Wire.h	28;"	d
BUFFER_LENGTH	./Robot_Control/Wire.h	28;"	d
BUFFER_LENGTH	./Wire/Wire.h	28;"	d
BUFFER_LENGTH	./Wire/Wire.h	28;"	d
__BUFFERMASK__	./GSM/GSM3CircularBuffer.h	48;"	d
__BUFFERMASK__	./GSM/GSM3CircularBuffer.h	48;"	d
__BUFFERSIZE__	./GSM/GSM3CircularBuffer.h	47;"	d
__BUFFERSIZE__	./GSM/GSM3CircularBuffer.h	47;"	d
BUFFERSIZETWEET	./GSM/GSM3MobileServerService.cpp	40;"	d	file:
BUFFERSIZETWEET	./GSM/GSM3MobileServerService.cpp	40;"	d	file:
buffer	./TinyGPSPlus/TinyGPS++.h	/^   char buffer[_GPS_MAX_FIELD_SIZE + 1];$/;"	m	class:TinyGPSCustom
buffer	./TinyGPSPlus/TinyGPS++.h	/^   char buffer[_GPS_MAX_FIELD_SIZE + 1];$/;"	m	class:TinyGPSCustom
BUFFPIXEL	./Robot_Control/Adafruit_GFX.cpp	635;"	d	file:
BUFFPIXEL	./Robot_Control/Adafruit_GFX.cpp	635;"	d	file:
BUFFPIXEL	./Robot_Control/lcd.cpp	4;"	d	file:
BUFFPIXEL	./Robot_Control/lcd.cpp	4;"	d	file:
BUFFPIXEL	./TFT/utility/Adafruit_GFX.cpp	616;"	d	file:
BUFFPIXEL	./TFT/utility/Adafruit_GFX.cpp	616;"	d	file:
BUFFPIXEL	./TFT/utility/Adafruit_GFX.h	222;"	d
BUFFPIXEL	./TFT/utility/Adafruit_GFX.h	222;"	d
BuildRequest	./Ethernet/Dns.cpp	/^uint16_t DNSClient::BuildRequest(const char* aName)$/;"	f	class:DNSClient
BuildRequest	./Ethernet/Dns.cpp	/^uint16_t DNSClient::BuildRequest(const char* aName)$/;"	f	class:DNSClient
BUTTON_DOWN	./Robot_Control/ArduinoRobot.h	22;"	d
BUTTON_DOWN	./Robot_Control/ArduinoRobot.h	22;"	d
BUTTON_LEFT	./Robot_Control/ArduinoRobot.h	21;"	d
BUTTON_LEFT	./Robot_Control/ArduinoRobot.h	21;"	d
BUTTON_MIDDLE	./Robot_Control/ArduinoRobot.h	25;"	d
BUTTON_MIDDLE	./Robot_Control/ArduinoRobot.h	25;"	d
BUTTON_NONE	./Robot_Control/ArduinoRobot.h	20;"	d
BUTTON_NONE	./Robot_Control/ArduinoRobot.h	20;"	d
BUTTON_RIGHT	./Robot_Control/ArduinoRobot.h	24;"	d
BUTTON_RIGHT	./Robot_Control/ArduinoRobot.h	24;"	d
BUTTON_UP	./Robot_Control/ArduinoRobot.h	23;"	d
BUTTON_UP	./Robot_Control/ArduinoRobot.h	23;"	d
BUZZER_PIN	./Esplora/Esplora.cpp	/^const byte BUZZER_PIN = 6;$/;"	v
BUZZER_PIN	./Esplora/Esplora.cpp	/^const byte BUZZER_PIN = 6;$/;"	v
byte	./GSM/GSM3CircularBuffer.h	42;"	d
byte	./GSM/GSM3CircularBuffer.h	42;"	d
byte	./SoftwareSerial/SoftwareSerial.h	107;"	d
byte	./SoftwareSerial/SoftwareSerial.h	107;"	d
bytesPerSector	./Robot_Control/FatStructs.h	/^  uint16_t bytesPerSector;$/;"	m	struct:biosParmBlock
bytesPerSector	./Robot_Control/FatStructs.h	/^  uint16_t bytesPerSector;$/;"	m	struct:biosParmBlock
bytesPerSector	./SD/utility/FatStructs.h	/^  uint16_t bytesPerSector;$/;"	m	struct:biosParmBlock
bytesPerSector	./SD/utility/FatStructs.h	/^  uint16_t bytesPerSector;$/;"	m	struct:biosParmBlock
byte	./TinyGPS/TinyGPS.h	151;"	d
byte	./TinyGPS/TinyGPS.h	151;"	d
cache16_t	./Robot_Control/Fat16.h	/^union cache16_t {$/;"	u
cache16_t	./Robot_Control/Fat16.h	/^union cache16_t {$/;"	u
cacheBlockNumber_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::cacheBlockNumber_ = 0XFFFFFFFF;  \/\/ init to invalid block number$/;"	m	class:Fat16	file:
cacheBlockNumber_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::cacheBlockNumber_ = 0XFFFFFFFF;  \/\/ init to invalid block number$/;"	m	class:Fat16	file:
cacheBlockNumber_	./Robot_Control/Fat16.h	/^  static uint32_t cacheBlockNumber_;  \/\/ Logical number of block in the cache$/;"	m	class:Fat16
cacheBlockNumber_	./Robot_Control/Fat16.h	/^  static uint32_t cacheBlockNumber_;  \/\/ Logical number of block in the cache$/;"	m	class:Fat16
cacheBlockNumber_	./SD/utility/SdFat.h	/^  static uint32_t cacheBlockNumber_;  \/\/ Logical number of block in the cache$/;"	m	class:SdVolume
cacheBlockNumber_	./SD/utility/SdFat.h	/^  static uint32_t cacheBlockNumber_;  \/\/ Logical number of block in the cache$/;"	m	class:SdVolume
cacheBlockNumber_	./SD/utility/SdVolume.cpp	/^uint32_t SdVolume::cacheBlockNumber_ = 0XFFFFFFFF;$/;"	m	class:SdVolume	file:
cacheBlockNumber_	./SD/utility/SdVolume.cpp	/^uint32_t SdVolume::cacheBlockNumber_ = 0XFFFFFFFF;$/;"	m	class:SdVolume	file:
cacheBuffer_	./Robot_Control/Fat16.cpp	/^cache16_t  Fat16::cacheBuffer_;         \/\/ 512 byte cache for SdCard$/;"	m	class:Fat16	file:
cacheBuffer_	./Robot_Control/Fat16.cpp	/^cache16_t  Fat16::cacheBuffer_;         \/\/ 512 byte cache for SdCard$/;"	m	class:Fat16	file:
cacheBuffer_	./Robot_Control/Fat16.h	/^  static cache16_t cacheBuffer_;      \/\/ 512 byte cache for raw blocks$/;"	m	class:Fat16
cacheBuffer_	./Robot_Control/Fat16.h	/^  static cache16_t cacheBuffer_;      \/\/ 512 byte cache for raw blocks$/;"	m	class:Fat16
cacheBuffer_	./SD/utility/SdFat.h	/^  static cache_t cacheBuffer_;        \/\/ 512 byte cache for device blocks$/;"	m	class:SdVolume
cacheBuffer_	./SD/utility/SdFat.h	/^  static cache_t cacheBuffer_;        \/\/ 512 byte cache for device blocks$/;"	m	class:SdVolume
cacheBuffer_	./SD/utility/SdVolume.cpp	/^cache_t  SdVolume::cacheBuffer_;     \/\/ 512 byte cache for Sd2Card$/;"	m	class:SdVolume	file:
cacheBuffer_	./SD/utility/SdVolume.cpp	/^cache_t  SdVolume::cacheBuffer_;     \/\/ 512 byte cache for Sd2Card$/;"	m	class:SdVolume	file:
cacheClear	./SD/utility/SdFat.h	/^  static uint8_t* cacheClear(void) {$/;"	f	class:SdVolume
cacheClear	./SD/utility/SdFat.h	/^  static uint8_t* cacheClear(void) {$/;"	f	class:SdVolume
cacheDataOffset	./Robot_Control/Fat16.h	/^  static uint16_t cacheDataOffset(uint32_t position) {return position & 0X1FF;}$/;"	f	class:Fat16
cacheDataOffset	./Robot_Control/Fat16.h	/^  static uint16_t cacheDataOffset(uint32_t position) {return position & 0X1FF;}$/;"	f	class:Fat16
cacheDirEntry	./Robot_Control/Fat16.cpp	/^dir_t* Fat16::cacheDirEntry(uint16_t index, uint8_t action) {$/;"	f	class:Fat16
cacheDirEntry	./Robot_Control/Fat16.cpp	/^dir_t* Fat16::cacheDirEntry(uint16_t index, uint8_t action) {$/;"	f	class:Fat16
cacheDirEntry	./SD/utility/SdFile.cpp	/^dir_t* SdFile::cacheDirEntry(uint8_t action) {$/;"	f	class:SdFile
cacheDirEntry	./SD/utility/SdFile.cpp	/^dir_t* SdFile::cacheDirEntry(uint8_t action) {$/;"	f	class:SdFile
cacheDirty_	./Robot_Control/Fat16.cpp	/^uint8_t  Fat16::cacheDirty_ = 0;        \/\/ cacheFlush() will write block if true$/;"	m	class:Fat16	file:
cacheDirty_	./Robot_Control/Fat16.cpp	/^uint8_t  Fat16::cacheDirty_ = 0;        \/\/ cacheFlush() will write block if true$/;"	m	class:Fat16	file:
cacheDirty_	./Robot_Control/Fat16.h	/^  static uint8_t cacheDirty_;         \/\/ cacheFlush() will write block if true$/;"	m	class:Fat16
cacheDirty_	./Robot_Control/Fat16.h	/^  static uint8_t cacheDirty_;         \/\/ cacheFlush() will write block if true$/;"	m	class:Fat16
cacheDirty_	./SD/utility/SdFat.h	/^  static uint8_t cacheDirty_;         \/\/ cacheFlush() will write block if true$/;"	m	class:SdVolume
cacheDirty_	./SD/utility/SdFat.h	/^  static uint8_t cacheDirty_;         \/\/ cacheFlush() will write block if true$/;"	m	class:SdVolume
cacheDirty_	./SD/utility/SdVolume.cpp	/^uint8_t  SdVolume::cacheDirty_ = 0;  \/\/ cacheFlush() will write block if true$/;"	m	class:SdVolume	file:
cacheDirty_	./SD/utility/SdVolume.cpp	/^uint8_t  SdVolume::cacheDirty_ = 0;  \/\/ cacheFlush() will write block if true$/;"	m	class:SdVolume	file:
cacheFlush	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::cacheFlush(void) {$/;"	f	class:Fat16
cacheFlush	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::cacheFlush(void) {$/;"	f	class:Fat16
cacheFlush	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::cacheFlush(void) {$/;"	f	class:SdVolume
cacheFlush	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::cacheFlush(void) {$/;"	f	class:SdVolume
CACHE_FOR_READ	./Robot_Control/Fat16.h	/^  static uint8_t const CACHE_FOR_READ  = 0;    \/\/ cache a block for read$/;"	m	class:Fat16
CACHE_FOR_READ	./Robot_Control/Fat16.h	/^  static uint8_t const CACHE_FOR_READ  = 0;    \/\/ cache a block for read$/;"	m	class:Fat16
CACHE_FOR_READ	./SD/utility/SdFat.h	/^  static uint8_t const CACHE_FOR_READ = 0;$/;"	m	class:SdVolume
CACHE_FOR_READ	./SD/utility/SdFat.h	/^  static uint8_t const CACHE_FOR_READ = 0;$/;"	m	class:SdVolume
CACHE_FOR_WRITE	./Robot_Control/Fat16.h	/^  static uint8_t const CACHE_FOR_WRITE = 1;    \/\/ cache a block and set dirty$/;"	m	class:Fat16
CACHE_FOR_WRITE	./Robot_Control/Fat16.h	/^  static uint8_t const CACHE_FOR_WRITE = 1;    \/\/ cache a block and set dirty$/;"	m	class:Fat16
CACHE_FOR_WRITE	./SD/utility/SdFat.h	/^  static uint8_t const CACHE_FOR_WRITE = 1;$/;"	m	class:SdVolume
CACHE_FOR_WRITE	./SD/utility/SdFat.h	/^  static uint8_t const CACHE_FOR_WRITE = 1;$/;"	m	class:SdVolume
cacheMirrorBlock_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::cacheMirrorBlock_ = 0;  \/\/ mirror  block for second FAT$/;"	m	class:Fat16	file:
cacheMirrorBlock_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::cacheMirrorBlock_ = 0;  \/\/ mirror  block for second FAT$/;"	m	class:Fat16	file:
cacheMirrorBlock_	./Robot_Control/Fat16.h	/^  static uint32_t cacheMirrorBlock_;  \/\/ mirror block for second FAT$/;"	m	class:Fat16
cacheMirrorBlock_	./Robot_Control/Fat16.h	/^  static uint32_t cacheMirrorBlock_;  \/\/ mirror block for second FAT$/;"	m	class:Fat16
cacheMirrorBlock_	./SD/utility/SdFat.h	/^  static uint32_t cacheMirrorBlock_;  \/\/ block number for mirror FAT$/;"	m	class:SdVolume
cacheMirrorBlock_	./SD/utility/SdFat.h	/^  static uint32_t cacheMirrorBlock_;  \/\/ block number for mirror FAT$/;"	m	class:SdVolume
cacheMirrorBlock_	./SD/utility/SdVolume.cpp	/^uint32_t SdVolume::cacheMirrorBlock_ = 0;  \/\/ mirror  block for second FAT$/;"	m	class:SdVolume	file:
cacheMirrorBlock_	./SD/utility/SdVolume.cpp	/^uint32_t SdVolume::cacheMirrorBlock_ = 0;  \/\/ mirror  block for second FAT$/;"	m	class:SdVolume	file:
cacheRawBlock	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::cacheRawBlock(uint32_t blockNumber, uint8_t action) {$/;"	f	class:Fat16
cacheRawBlock	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::cacheRawBlock(uint32_t blockNumber, uint8_t action) {$/;"	f	class:Fat16
cacheRawBlock	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::cacheRawBlock(uint32_t blockNumber, uint8_t action) {$/;"	f	class:SdVolume
cacheRawBlock	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::cacheRawBlock(uint32_t blockNumber, uint8_t action) {$/;"	f	class:SdVolume
cacheSetDirty	./Robot_Control/Fat16.h	/^  static void cacheSetDirty(void) {cacheDirty_ |= CACHE_FOR_WRITE;}$/;"	f	class:Fat16
cacheSetDirty	./Robot_Control/Fat16.h	/^  static void cacheSetDirty(void) {cacheDirty_ |= CACHE_FOR_WRITE;}$/;"	f	class:Fat16
cacheSetDirty	./SD/utility/SdFat.h	/^  static void cacheSetDirty(void) {cacheDirty_ |= CACHE_FOR_WRITE;}$/;"	f	class:SdVolume
cacheSetDirty	./SD/utility/SdFat.h	/^  static void cacheSetDirty(void) {cacheDirty_ |= CACHE_FOR_WRITE;}$/;"	f	class:SdVolume
cache_t	./SD/utility/SdFat.h	/^union cache_t {$/;"	u
cache_t	./SD/utility/SdFat.h	/^union cache_t {$/;"	u
cacheZeroBlock	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::cacheZeroBlock(uint32_t blockNumber) {$/;"	f	class:SdVolume
cacheZeroBlock	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::cacheZeroBlock(uint32_t blockNumber) {$/;"	f	class:SdVolume
calc_CS	./Robot_Control/EasyTransfer2.h	/^uint8_t calc_CS;	   \/\/calculated Chacksum$/;"	m	class:EasyTransfer2
calc_CS	./Robot_Control/EasyTransfer2.h	/^uint8_t calc_CS;	   \/\/calculated Chacksum$/;"	m	class:EasyTransfer2
calc_CS	./Robot_Motor/EasyTransfer2.h	/^uint8_t calc_CS;	   \/\/calculated Chacksum$/;"	m	class:EasyTransfer2
calc_CS	./Robot_Motor/EasyTransfer2.h	/^uint8_t calc_CS;	   \/\/calculated Chacksum$/;"	m	class:EasyTransfer2
calibIRs	./Robot_Motor/lineFollow.cpp	/^void LineFollow::calibIRs(){$/;"	f	class:LineFollow
calibIRs	./Robot_Motor/lineFollow.cpp	/^void LineFollow::calibIRs(){$/;"	f	class:LineFollow
CALL_ACTIVE_DATA	./GSM_Shield/GSM_Shield.h	/^  CALL_ACTIVE_DATA,$/;"	e	enum:call_ret_val_enum
CALL_ACTIVE_DATA	./GSM_Shield/GSM_Shield.h	/^  CALL_ACTIVE_DATA,$/;"	e	enum:call_ret_val_enum
CALL_ACTIVE_VOICE	./GSM_Shield/GSM_Shield.h	/^  CALL_ACTIVE_VOICE,$/;"	e	enum:call_ret_val_enum
CALL_ACTIVE_VOICE	./GSM_Shield/GSM_Shield.h	/^  CALL_ACTIVE_VOICE,$/;"	e	enum:call_ret_val_enum
callbackFunction	./Firmata/Firmata.h	/^    typedef void (*callbackFunction)(byte, int);$/;"	t
callbackFunction	./Firmata/Firmata.h	/^    typedef void (*callbackFunction)(byte, int);$/;"	t
callback_makeDirPath	./SD/SD.cpp	/^boolean callback_makeDirPath(SdFile& parentDir, char *filePathComponent, $/;"	f
callback_makeDirPath	./SD/SD.cpp	/^boolean callback_makeDirPath(SdFile& parentDir, char *filePathComponent, $/;"	f
callback_pathExists	./SD/SD.cpp	/^boolean callback_pathExists(SdFile& parentDir, char *filePathComponent, $/;"	f
callback_pathExists	./SD/SD.cpp	/^boolean callback_pathExists(SdFile& parentDir, char *filePathComponent, $/;"	f
callback_remove	./SD/SD.cpp	/^boolean callback_remove(SdFile& parentDir, char *filePathComponent, $/;"	f
callback_remove	./SD/SD.cpp	/^boolean callback_remove(SdFile& parentDir, char *filePathComponent, $/;"	f
callback_rmdir	./SD/SD.cpp	/^boolean callback_rmdir(SdFile& parentDir, char *filePathComponent, $/;"	f
callback_rmdir	./SD/SD.cpp	/^boolean callback_rmdir(SdFile& parentDir, char *filePathComponent, $/;"	f
CALL_COMM_LINE_BUSY	./GSM_Shield/GSM_Shield.h	/^  CALL_COMM_LINE_BUSY,$/;"	e	enum:call_ret_val_enum
CALL_COMM_LINE_BUSY	./GSM_Shield/GSM_Shield.h	/^  CALL_COMM_LINE_BUSY,$/;"	e	enum:call_ret_val_enum
Call	./GSM_Shield/GSM_Shield.cpp	/^void GSM::Call(char *number_string)$/;"	f	class:GSM
Call	./GSM_Shield/GSM_Shield.cpp	/^void GSM::Call(char *number_string)$/;"	f	class:GSM
Call	./GSM_Shield/GSM_Shield.cpp	/^void GSM::Call(int sim_position)$/;"	f	class:GSM
Call	./GSM_Shield/GSM_Shield.cpp	/^void GSM::Call(int sim_position)$/;"	f	class:GSM
CALL_INCOM_DATA_AUTH	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_DATA_AUTH,$/;"	e	enum:call_ret_val_enum
CALL_INCOM_DATA_AUTH	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_DATA_AUTH,$/;"	e	enum:call_ret_val_enum
CALL_INCOM_DATA_NOT_AUTH	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_DATA_NOT_AUTH,$/;"	e	enum:call_ret_val_enum
CALL_INCOM_DATA_NOT_AUTH	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_DATA_NOT_AUTH,$/;"	e	enum:call_ret_val_enum
CALL_INCOM_VOICE_AUTH	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_VOICE_AUTH,$/;"	e	enum:call_ret_val_enum
CALL_INCOM_VOICE_AUTH	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_VOICE_AUTH,$/;"	e	enum:call_ret_val_enum
CALL_INCOM_VOICE	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_VOICE,$/;"	e	enum:call_ret_val_enum
CALL_INCOM_VOICE	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_VOICE,$/;"	e	enum:call_ret_val_enum
CALL_INCOM_VOICE_NOT_AUTH	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_VOICE_NOT_AUTH,$/;"	e	enum:call_ret_val_enum
CALL_INCOM_VOICE_NOT_AUTH	./GSM_Shield/GSM_Shield.h	/^  CALL_INCOM_VOICE_NOT_AUTH,$/;"	e	enum:call_ret_val_enum
CALLING	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	e	enum:GSM3_voiceCall_st
CALLING	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	e	enum:GSM3_voiceCall_st
CALL_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  CALL_LAST_ITEM$/;"	e	enum:call_ret_val_enum
CALL_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  CALL_LAST_ITEM$/;"	e	enum:call_ret_val_enum
CALL_NONE	./GSM_Shield/GSM_Shield.h	/^  CALL_NONE = 0,$/;"	e	enum:call_ret_val_enum
CALL_NONE	./GSM_Shield/GSM_Shield.h	/^  CALL_NONE = 0,$/;"	e	enum:call_ret_val_enum
CALL_NO_RESPONSE	./GSM_Shield/GSM_Shield.h	/^  CALL_NO_RESPONSE,$/;"	e	enum:call_ret_val_enum
CALL_NO_RESPONSE	./GSM_Shield/GSM_Shield.h	/^  CALL_NO_RESPONSE,$/;"	e	enum:call_ret_val_enum
CALL_OTHERS	./GSM_Shield/GSM_Shield.h	/^  CALL_OTHERS,$/;"	e	enum:call_ret_val_enum
CALL_OTHERS	./GSM_Shield/GSM_Shield.h	/^  CALL_OTHERS,$/;"	e	enum:call_ret_val_enum
call_ret_val_enum	./GSM_Shield/GSM_Shield.h	/^enum call_ret_val_enum$/;"	g
call_ret_val_enum	./GSM_Shield/GSM_Shield.h	/^enum call_ret_val_enum$/;"	g
CallStatus	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::CallStatus(void)$/;"	f	class:GSM
CallStatus	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::CallStatus(void)$/;"	f	class:GSM
CallStatusWithAuth	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::CallStatusWithAuth(char *phone_number,$/;"	f	class:GSM
CallStatusWithAuth	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::CallStatusWithAuth(char *phone_number,$/;"	f	class:GSM
CAPABILITY_QUERY	./Firmata/Firmata.h	53;"	d
CAPABILITY_QUERY	./Firmata/Firmata.h	53;"	d
CAPABILITY_RESPONSE	./Firmata/Firmata.h	54;"	d
CAPABILITY_RESPONSE	./Firmata/Firmata.h	54;"	d
cardAcmd	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::cardAcmd(uint8_t cmd, uint32_t arg) {$/;"	f	class:SdCard
cardAcmd	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::cardAcmd(uint8_t cmd, uint32_t arg) {$/;"	f	class:SdCard
cardAcmd	./SD/utility/Sd2Card.h	/^  uint8_t cardAcmd(uint8_t cmd, uint32_t arg) {$/;"	f	class:Sd2Card
cardAcmd	./SD/utility/Sd2Card.h	/^  uint8_t cardAcmd(uint8_t cmd, uint32_t arg) {$/;"	f	class:Sd2Card
cardCommand	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::cardCommand(uint8_t cmd, uint32_t arg) {$/;"	f	class:SdCard
cardCommand	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::cardCommand(uint8_t cmd, uint32_t arg) {$/;"	f	class:SdCard
cardCommand	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::cardCommand(uint8_t cmd, uint32_t arg) {$/;"	f	class:Sd2Card
cardCommand	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::cardCommand(uint8_t cmd, uint32_t arg) {$/;"	f	class:Sd2Card
cardinal	./TinyGPSPlus/TinyGPS++.cpp	/^const char *TinyGPSPlus::cardinal(double course)$/;"	f	class:TinyGPSPlus
cardinal	./TinyGPSPlus/TinyGPS++.cpp	/^const char *TinyGPSPlus::cardinal(double course)$/;"	f	class:TinyGPSPlus
cardinal	./TinyGPS/TinyGPS.cpp	/^const char *TinyGPS::cardinal (float course)$/;"	f	class:TinyGPS
cardinal	./TinyGPS/TinyGPS.cpp	/^const char *TinyGPS::cardinal (float course)$/;"	f	class:TinyGPS
card	./Robot_Control/ArduinoRobot.h	/^		SdCard card;$/;"	m	class:RobotControl
card	./Robot_Control/ArduinoRobot.h	/^		SdCard card;$/;"	m	class:RobotControl
card	./SD/SD.h	/^  Sd2Card card;$/;"	m	class:SDClass
card	./SD/SD.h	/^  Sd2Card card;$/;"	m	class:SDClass
cardSize	./Robot_Control/SdCard.cpp	/^uint32_t SdCard::cardSize(void) {$/;"	f	class:SdCard
cardSize	./Robot_Control/SdCard.cpp	/^uint32_t SdCard::cardSize(void) {$/;"	f	class:SdCard
cardSize	./SD/utility/Sd2Card.cpp	/^uint32_t Sd2Card::cardSize(void) {$/;"	f	class:Sd2Card
cardSize	./SD/utility/Sd2Card.cpp	/^uint32_t Sd2Card::cardSize(void) {$/;"	f	class:Sd2Card
cb	./GSM/GSM3SoftSerial.h	/^		GSM3CircularBuffer cb; \/\/ Circular buffer$/;"	m	class:GSM3SoftSerial
cb	./GSM/GSM3SoftSerial.h	/^		GSM3CircularBuffer cb; \/\/ Circular buffer$/;"	m	class:GSM3SoftSerial
cbm	./GSM/GSM3CircularBuffer.h	/^		GSM3CircularBufferManager* cbm; \/\/ Circular buffer manager$/;"	m	class:GSM3CircularBuffer
cbm	./GSM/GSM3CircularBuffer.h	/^		GSM3CircularBufferManager* cbm; \/\/ Circular buffer manager$/;"	m	class:GSM3CircularBuffer
ccc_high	./Robot_Control/SdInfo.h	/^  uint8_t ccc_high;$/;"	m	struct:CSD
ccc_high	./Robot_Control/SdInfo.h	/^  uint8_t ccc_high;$/;"	m	struct:CSD
ccc_high	./SD/utility/SdInfo.h	/^  uint8_t ccc_high;$/;"	m	struct:CSDV1
ccc_high	./SD/utility/SdInfo.h	/^  uint8_t ccc_high;$/;"	m	struct:CSDV1
ccc_high	./SD/utility/SdInfo.h	/^  uint8_t ccc_high;$/;"	m	struct:CSDV2
ccc_high	./SD/utility/SdInfo.h	/^  uint8_t ccc_high;$/;"	m	struct:CSDV2
ccc_low	./Robot_Control/SdInfo.h	/^  unsigned ccc_low : 4;$/;"	m	struct:CSD
ccc_low	./Robot_Control/SdInfo.h	/^  unsigned ccc_low : 4;$/;"	m	struct:CSD
ccc_low	./SD/utility/SdInfo.h	/^  unsigned ccc_low : 4;$/;"	m	struct:CSDV1
ccc_low	./SD/utility/SdInfo.h	/^  unsigned ccc_low : 4;$/;"	m	struct:CSDV1
ccc_low	./SD/utility/SdInfo.h	/^  unsigned ccc_low : 4;$/;"	m	struct:CSDV2
ccc_low	./SD/utility/SdInfo.h	/^  unsigned ccc_low : 4;$/;"	m	struct:CSDV2
cellId	./GSM/GSM3ShieldV1CellManagement.h	/^		char *cellId;$/;"	m	class:GSM3ShieldV1CellManagement
cellId	./GSM/GSM3ShieldV1CellManagement.h	/^		char *cellId;$/;"	m	class:GSM3ShieldV1CellManagement
cel	./Robot_Control/Squawk.cpp	/^static cel_t    cel[4];$/;"	v	file:
cel	./Robot_Control/Squawk.cpp	/^static cel_t    cel[4];$/;"	v	file:
cel_t	./Robot_Control/Squawk.cpp	/^} cel_t;$/;"	t	typeref:struct:__anon17	file:
cel_t	./Robot_Control/Squawk.cpp	/^} cel_t;$/;"	t	typeref:struct:__anon17	file:
centisecond	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSTime::centisecond()$/;"	f	class:TinyGPSTime
centisecond	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSTime::centisecond()$/;"	f	class:TinyGPSTime
chaddr	./Ethernet/Dhcp.h	/^	uint8_t  chaddr[6];$/;"	m	struct:_RIP_MSG_FIXED
chaddr	./Ethernet/Dhcp.h	/^	uint8_t  chaddr[6];$/;"	m	struct:_RIP_MSG_FIXED
chainSize	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::chainSize(uint32_t cluster, uint32_t* size) const {$/;"	f	class:SdVolume
chainSize	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::chainSize(uint32_t cluster, uint32_t* size) const {$/;"	f	class:SdVolume
changePIN	./GSM/GSM3ShieldV1PinManagement.cpp	/^void GSM3ShieldV1PinManagement::changePIN(String old, String pin)$/;"	f	class:GSM3ShieldV1PinManagement
changePIN	./GSM/GSM3ShieldV1PinManagement.cpp	/^void GSM3ShieldV1PinManagement::changePIN(String old, String pin)$/;"	f	class:GSM3ShieldV1PinManagement
Channel	./Servo/Servo.cpp	/^static volatile int8_t Channel[_Nbr_16timers ];             \/\/ counter for the servo being pulsed for each timer (or -1 if refresh interval)$/;"	v	file:
Channel	./Servo/Servo.cpp	/^static volatile int8_t Channel[_Nbr_16timers ];             \/\/ counter for the servo being pulsed for each timer (or -1 if refresh interval)$/;"	v	file:
char	./SoftwareSerial/SoftwareSerial.h	105;"	d
char	./SoftwareSerial/SoftwareSerial.h	105;"	d
charsProcessed	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t charsProcessed()   const { return encodedCharCount; }$/;"	f	class:TinyGPSPlus
charsProcessed	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t charsProcessed()   const { return encodedCharCount; }$/;"	f	class:TinyGPSPlus
char	./TinyGPS/TinyGPS.h	149;"	d
char	./TinyGPS/TinyGPS.h	149;"	d
charWidth	./Robot_Control/utility/RobotTextManager.cpp	/^const int TextManager::charWidth=6;$/;"	m	class:TextManager	file:
charWidth	./Robot_Control/utility/RobotTextManager.cpp	/^const int TextManager::charWidth=6;$/;"	m	class:TextManager	file:
charWidth	./Robot_Control/utility/RobotTextManager.h	/^    static const int charWidth;\/\/5+1=6$/;"	m	class:TextManager
charWidth	./Robot_Control/utility/RobotTextManager.h	/^    static const int charWidth;\/\/5+1=6$/;"	m	class:TextManager
CH_BASE	./Ethernet/utility/w5100.h	/^  static const uint16_t CH_BASE = 0x0400;$/;"	m	class:W5100Class
CH_BASE	./Ethernet/utility/w5100.h	/^  static const uint16_t CH_BASE = 0x0400;$/;"	m	class:W5100Class
checkDataSent	./WiFi/utility/server_drv.cpp	/^uint8_t ServerDrv::checkDataSent(uint8_t sock)$/;"	f	class:ServerDrv
checkDataSent	./WiFi/utility/server_drv.cpp	/^uint8_t ServerDrv::checkDataSent(uint8_t sock)$/;"	f	class:ServerDrv
CHECK_DATA	./WiFi/utility/spi_drv.cpp	130;"	d	file:
CHECK_DATA	./WiFi/utility/spi_drv.cpp	130;"	d	file:
checkLease	./Ethernet/Dhcp.cpp	/^int DhcpClass::checkLease(){$/;"	f	class:DhcpClass
checkLease	./Ethernet/Dhcp.cpp	/^int DhcpClass::checkLease(){$/;"	f	class:DhcpClass
checkPIN	./GSM/GSM3ShieldV1PinManagement.cpp	/^int GSM3ShieldV1PinManagement::checkPIN(String pin)$/;"	f	class:GSM3ShieldV1PinManagement
checkPIN	./GSM/GSM3ShieldV1PinManagement.cpp	/^int GSM3ShieldV1PinManagement::checkPIN(String pin)$/;"	f	class:GSM3ShieldV1PinManagement
checkPUK	./GSM/GSM3ShieldV1PinManagement.cpp	/^int GSM3ShieldV1PinManagement::checkPUK(String puk, String pin)$/;"	f	class:GSM3ShieldV1PinManagement
checkPUK	./GSM/GSM3ShieldV1PinManagement.cpp	/^int GSM3ShieldV1PinManagement::checkPUK(String puk, String pin)$/;"	f	class:GSM3ShieldV1PinManagement
checkReg	./GSM/GSM3ShieldV1PinManagement.cpp	/^int GSM3ShieldV1PinManagement::checkReg()$/;"	f	class:GSM3ShieldV1PinManagement
checkReg	./GSM/GSM3ShieldV1PinManagement.cpp	/^int GSM3ShieldV1PinManagement::checkReg()$/;"	f	class:GSM3ShieldV1PinManagement
CheckRegistration	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::CheckRegistration(void)$/;"	f	class:GSM
CheckRegistration	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::CheckRegistration(void)$/;"	f	class:GSM
checkSecondBuffer	./GSM/GSM3ShieldV1SMSProvider.h	/^		bool checkSecondBuffer; \/\/ Pending to detect if the second buffer has more than 1 SMS.$/;"	m	class:GSM3ShieldV1SMSProvider
checkSecondBuffer	./GSM/GSM3ShieldV1SMSProvider.h	/^		bool checkSecondBuffer; \/\/ Pending to detect if the second buffer has more than 1 SMS.$/;"	m	class:GSM3ShieldV1SMSProvider
chipSelectHigh	./Robot_Control/SdCard.cpp	/^void SdCard::chipSelectHigh(void) {$/;"	f	class:SdCard
chipSelectHigh	./Robot_Control/SdCard.cpp	/^void SdCard::chipSelectHigh(void) {$/;"	f	class:SdCard
chipSelectHigh	./SD/utility/Sd2Card.cpp	/^void Sd2Card::chipSelectHigh(void) {$/;"	f	class:Sd2Card
chipSelectHigh	./SD/utility/Sd2Card.cpp	/^void Sd2Card::chipSelectHigh(void) {$/;"	f	class:Sd2Card
chipSelectLow	./Robot_Control/SdCard.cpp	/^void SdCard::chipSelectLow(void) {$/;"	f	class:SdCard
chipSelectLow	./Robot_Control/SdCard.cpp	/^void SdCard::chipSelectLow(void) {$/;"	f	class:SdCard
chipSelectLow	./SD/utility/Sd2Card.cpp	/^void Sd2Card::chipSelectLow(void) {$/;"	f	class:Sd2Card
chipSelectLow	./SD/utility/Sd2Card.cpp	/^void Sd2Card::chipSelectLow(void) {$/;"	f	class:Sd2Card
chipSelectPin_	./Robot_Control/SdCard.h	/^  uint8_t chipSelectPin_;$/;"	m	class:SdCard
chipSelectPin_	./Robot_Control/SdCard.h	/^  uint8_t chipSelectPin_;$/;"	m	class:SdCard
chipSelectPin_	./SD/utility/Sd2Card.h	/^  uint8_t chipSelectPin_;$/;"	m	class:Sd2Card
chipSelectPin_	./SD/utility/Sd2Card.h	/^  uint8_t chipSelectPin_;$/;"	m	class:Sd2Card
CH_JOYSTICK_SW	./Esplora/Esplora.h	/^const byte CH_JOYSTICK_SW = 10;$/;"	v
CH_JOYSTICK_SW	./Esplora/Esplora.h	/^const byte CH_JOYSTICK_SW = 10;$/;"	v
CH_JOYSTICK_X	./Esplora/Esplora.h	/^const byte CH_JOYSTICK_X  = 11;$/;"	v
CH_JOYSTICK_X	./Esplora/Esplora.h	/^const byte CH_JOYSTICK_X  = 11;$/;"	v
CH_JOYSTICK_Y	./Esplora/Esplora.h	/^const byte CH_JOYSTICK_Y  = 12;$/;"	v
CH_JOYSTICK_Y	./Esplora/Esplora.h	/^const byte CH_JOYSTICK_Y  = 12;$/;"	v
CH_LIGHT	./Esplora/Esplora.h	/^const byte CH_LIGHT       = 5;$/;"	v
CH_LIGHT	./Esplora/Esplora.h	/^const byte CH_LIGHT       = 5;$/;"	v
CH_MIC	./Esplora/Esplora.h	/^const byte CH_MIC         = 7;$/;"	v
CH_MIC	./Esplora/Esplora.h	/^const byte CH_MIC         = 7;$/;"	v
chopUntil	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::chopUntil(const char* reference, bool movetotheend, bool usehead)$/;"	f	class:GSM3CircularBuffer
chopUntil	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::chopUntil(const char* reference, bool movetotheend, bool usehead)$/;"	f	class:GSM3CircularBuffer
CH_SIZE	./Ethernet/utility/w5100.h	/^  static const uint16_t CH_SIZE = 0x0100;$/;"	m	class:W5100Class
CH_SIZE	./Ethernet/utility/w5100.h	/^  static const uint16_t CH_SIZE = 0x0100;$/;"	m	class:W5100Class
CH_SLIDER	./Esplora/Esplora.h	/^const byte CH_SLIDER      = 4;$/;"	v
CH_SLIDER	./Esplora/Esplora.h	/^const byte CH_SLIDER      = 4;$/;"	v
CH_SWITCH_1	./Esplora/Esplora.h	/^const byte CH_SWITCH_1    = 0;$/;"	v
CH_SWITCH_1	./Esplora/Esplora.h	/^const byte CH_SWITCH_1    = 0;$/;"	v
CH_SWITCH_2	./Esplora/Esplora.h	/^const byte CH_SWITCH_2    = 1;$/;"	v
CH_SWITCH_2	./Esplora/Esplora.h	/^const byte CH_SWITCH_2    = 1;$/;"	v
CH_SWITCH_3	./Esplora/Esplora.h	/^const byte CH_SWITCH_3    = 2;$/;"	v
CH_SWITCH_3	./Esplora/Esplora.h	/^const byte CH_SWITCH_3    = 2;$/;"	v
CH_SWITCH_4	./Esplora/Esplora.h	/^const byte CH_SWITCH_4    = 3;$/;"	v
CH_SWITCH_4	./Esplora/Esplora.h	/^const byte CH_SWITCH_4    = 3;$/;"	v
CH_TEMPERATURE	./Esplora/Esplora.h	/^const byte CH_TEMPERATURE = 6;$/;"	v
CH_TEMPERATURE	./Esplora/Esplora.h	/^const byte CH_TEMPERATURE = 6;$/;"	v
ciaddr	./Ethernet/Dhcp.h	/^	uint8_t  ciaddr[4];$/;"	m	struct:_RIP_MSG_FIXED
ciaddr	./Ethernet/Dhcp.h	/^	uint8_t  ciaddr[4];$/;"	m	struct:_RIP_MSG_FIXED
CID	./Robot_Control/SdInfo.h	/^typedef struct CID {$/;"	s
CID	./Robot_Control/SdInfo.h	/^typedef struct CID {$/;"	s
CID	./SD/utility/SdInfo.h	/^typedef struct CID {$/;"	s
CID	./SD/utility/SdInfo.h	/^typedef struct CID {$/;"	s
cid_t	./Robot_Control/SdInfo.h	/^}cid_t;$/;"	t	typeref:struct:CID
cid_t	./Robot_Control/SdInfo.h	/^}cid_t;$/;"	t	typeref:struct:CID
cid_t	./SD/utility/SdInfo.h	/^}cid_t;$/;"	t	typeref:struct:CID
cid_t	./SD/utility/SdInfo.h	/^}cid_t;$/;"	t	typeref:struct:CID
circle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::circle(int16_t x, int16_t y, int16_t r) {$/;"	f	class:Adafruit_GFX
circle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::circle(int16_t x, int16_t y, int16_t r) {$/;"	f	class:Adafruit_GFX
circle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::circle(int16_t x, int16_t y, int16_t r) {$/;"	f	class:Adafruit_GFX
circle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::circle(int16_t x, int16_t y, int16_t r) {$/;"	f	class:Adafruit_GFX
cityNameRead	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::cityNameRead(char* container){$/;"	f	class:RobotControl
cityNameRead	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::cityNameRead(char* container){$/;"	f	class:RobotControl
CITYNAME	./Robot_Control/utility/RobotTextManager.h	6;"	d
CITYNAME	./Robot_Control/utility/RobotTextManager.h	6;"	d
cityNameWrite	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::cityNameWrite(char* text){$/;"	f	class:RobotControl
cityNameWrite	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::cityNameWrite(char* text){$/;"	f	class:RobotControl
CLASS_IN	./Ethernet/Dns.cpp	39;"	d	file:
CLASS_IN	./Ethernet/Dns.cpp	39;"	d	file:
clear	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::clear()$/;"	f	class:LiquidCrystal
clear	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::clear()$/;"	f	class:LiquidCrystal
clearScreen	./Robot_Control/lcd.cpp	/^void RobotControl::clearScreen(){$/;"	f	class:RobotControl
clearScreen	./Robot_Control/lcd.cpp	/^void RobotControl::clearScreen(){$/;"	f	class:RobotControl
clearUnbufferedRead	./SD/utility/SdFat.h	/^  void clearUnbufferedRead(void) {$/;"	f	class:SdFile
clearUnbufferedRead	./SD/utility/SdFat.h	/^  void clearUnbufferedRead(void) {$/;"	f	class:SdFile
client1_server0	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		bool client1_server0;	\/\/1 Client, 0 Server.$/;"	m	class:GSM3ShieldV1MultiClientProvider
client1_server0	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		bool client1_server0;	\/\/1 Client, 0 Server.$/;"	m	class:GSM3ShieldV1MultiClientProvider
clkpinmask	./Robot_Control/Arduino_LCD.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Arduino_LCD
clkpinmask	./Robot_Control/Arduino_LCD.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Arduino_LCD
clkpinmask	./TFT/utility/Adafruit_ST7735.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Adafruit_ST7735
clkpinmask	./TFT/utility/Adafruit_ST7735.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Adafruit_ST7735
clkport	./Robot_Control/Arduino_LCD.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Arduino_LCD
clkport	./Robot_Control/Arduino_LCD.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Arduino_LCD
clkport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint32_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
clkport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint32_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
clkport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
clkport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
closeCommand	./GSM/GSM3MobileMockupProvider.h	/^		inline void closeCommand(int code){};$/;"	f	class:GSM3MobileMockupProvider
closeCommand	./GSM/GSM3MobileMockupProvider.h	/^		inline void closeCommand(int code){};$/;"	f	class:GSM3MobileMockupProvider
closeCommand	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline void closeCommand(int code){};$/;"	f	class:GSM3MobileNetworkProvider
closeCommand	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline void closeCommand(int code){};$/;"	f	class:GSM3MobileNetworkProvider
closeCommand	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::closeCommand(int code)$/;"	f	class:GSM3ShieldV1ModemCore
closeCommand	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::closeCommand(int code)$/;"	f	class:GSM3ShieldV1ModemCore
CLOSED	./Ethernet/utility/w5100.h	/^  static const uint8_t CLOSED      = 0x00;$/;"	m	class:SnSR
CLOSED	./Ethernet/utility/w5100.h	/^  static const uint8_t CLOSED      = 0x00;$/;"	m	class:SnSR
CLOSED	./WiFi/utility/wifi_spi.h	/^  CLOSED      = 0,$/;"	e	enum:wl_tcp_state
CLOSED	./WiFi/utility/wifi_spi.h	/^  CLOSED      = 0,$/;"	e	enum:wl_tcp_state
close	./Ethernet/utility/socket.cpp	/^void close(SOCKET s)$/;"	f
close	./Ethernet/utility/socket.cpp	/^void close(SOCKET s)$/;"	f
CLOSE	./Ethernet/utility/w5100.h	/^  static const uint8_t CLOSE  = 0x00;$/;"	m	class:SnMR
CLOSE	./Ethernet/utility/w5100.h	/^  static const uint8_t CLOSE  = 0x00;$/;"	m	class:SnMR
close	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::close()$/;"	f	class:GSM3SoftSerial
close	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::close()$/;"	f	class:GSM3SoftSerial
close	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::close(void) {$/;"	f	class:Fat16
close	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::close(void) {$/;"	f	class:Fat16
close	./SD/File.cpp	/^void File::close() {$/;"	f	class:File
close	./SD/File.cpp	/^void File::close() {$/;"	f	class:File
close	./SD/utility/SdFile.cpp	/^uint8_t SdFile::close(void) {$/;"	f	class:SdFile
close	./SD/utility/SdFile.cpp	/^uint8_t SdFile::close(void) {$/;"	f	class:SdFile
CLOSE_WAIT	./Ethernet/utility/w5100.h	/^  static const uint8_t CLOSE_WAIT  = 0x1C;$/;"	m	class:SnSR
CLOSE_WAIT	./Ethernet/utility/w5100.h	/^  static const uint8_t CLOSE_WAIT  = 0x1C;$/;"	m	class:SnSR
CLOSE_WAIT	./WiFi/utility/wifi_spi.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:wl_tcp_state
CLOSE_WAIT	./WiFi/utility/wifi_spi.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:wl_tcp_state
CLOSING	./Ethernet/utility/w5100.h	/^  static const uint8_t CLOSING     = 0x1A;$/;"	m	class:SnSR
CLOSING	./Ethernet/utility/w5100.h	/^  static const uint8_t CLOSING     = 0x1A;$/;"	m	class:SnSR
CLOSING	./WiFi/utility/wifi_spi.h	/^  CLOSING     = 8,$/;"	e	enum:wl_tcp_state
CLOSING	./WiFi/utility/wifi_spi.h	/^  CLOSING     = 8,$/;"	e	enum:wl_tcp_state
CLS_ATCMD	./GSM_Shield/GSM_Shield.h	/^  CLS_ATCMD,  \/\/ line is used by AT commands, includes also time for response$/;"	e	enum:comm_line_status_enum
CLS_ATCMD	./GSM_Shield/GSM_Shield.h	/^  CLS_ATCMD,  \/\/ line is used by AT commands, includes also time for response$/;"	e	enum:comm_line_status_enum
CLS_DATA	./GSM_Shield/GSM_Shield.h	/^  CLS_DATA,   \/\/ for the future - line is used in the CSD or GPRS communication  $/;"	e	enum:comm_line_status_enum
CLS_DATA	./GSM_Shield/GSM_Shield.h	/^  CLS_DATA,   \/\/ for the future - line is used in the CSD or GPRS communication  $/;"	e	enum:comm_line_status_enum
CLS_FREE	./GSM_Shield/GSM_Shield.h	/^  CLS_FREE,   \/\/ line is free - not used by the communication and can be used$/;"	e	enum:comm_line_status_enum
CLS_FREE	./GSM_Shield/GSM_Shield.h	/^  CLS_FREE,   \/\/ line is free - not used by the communication and can be used$/;"	e	enum:comm_line_status_enum
CLS_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  CLS_LAST_ITEM$/;"	e	enum:comm_line_status_enum
CLS_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  CLS_LAST_ITEM$/;"	e	enum:comm_line_status_enum
clusterCount_	./Robot_Control/Fat16.cpp	/^fat_t    Fat16::clusterCount_;           \/\/ total clusters in volume$/;"	m	class:Fat16	file:
clusterCount_	./Robot_Control/Fat16.cpp	/^fat_t    Fat16::clusterCount_;           \/\/ total clusters in volume$/;"	m	class:Fat16	file:
clusterCount_	./Robot_Control/Fat16.h	/^  static fat_t    clusterCount_;       \/\/ total clusters in volume$/;"	m	class:Fat16
clusterCount_	./Robot_Control/Fat16.h	/^  static fat_t    clusterCount_;       \/\/ total clusters in volume$/;"	m	class:Fat16
clusterCount	./Robot_Control/Fat16.h	/^  static fat_t clusterCount(void) {return clusterCount_;}$/;"	f	class:Fat16
clusterCount	./Robot_Control/Fat16.h	/^  static fat_t clusterCount(void) {return clusterCount_;}$/;"	f	class:Fat16
clusterCount_	./SD/utility/SdFat.h	/^  uint32_t clusterCount_;       \/\/ clusters in one FAT$/;"	m	class:SdVolume
clusterCount_	./SD/utility/SdFat.h	/^  uint32_t clusterCount_;       \/\/ clusters in one FAT$/;"	m	class:SdVolume
clusterCount	./SD/utility/SdFat.h	/^  uint32_t clusterCount(void) const {return clusterCount_;}$/;"	f	class:SdVolume
clusterCount	./SD/utility/SdFat.h	/^  uint32_t clusterCount(void) const {return clusterCount_;}$/;"	f	class:SdVolume
clusterSize	./Robot_Control/Fat16.h	/^  static uint8_t clusterSize(void) {return blocksPerCluster_;}$/;"	f	class:Fat16
clusterSize	./Robot_Control/Fat16.h	/^  static uint8_t clusterSize(void) {return blocksPerCluster_;}$/;"	f	class:Fat16
clusterSizeShift_	./SD/utility/SdFat.h	/^  uint8_t clusterSizeShift_;    \/\/ shift to convert cluster count to block count$/;"	m	class:SdVolume
clusterSizeShift_	./SD/utility/SdFat.h	/^  uint8_t clusterSizeShift_;    \/\/ shift to convert cluster count to block count$/;"	m	class:SdVolume
clusterSizeShift	./SD/utility/SdFat.h	/^  uint8_t clusterSizeShift(void) const {return clusterSizeShift_;}$/;"	f	class:SdVolume
clusterSizeShift	./SD/utility/SdFat.h	/^  uint8_t clusterSizeShift(void) const {return clusterSizeShift_;}$/;"	f	class:SdVolume
clusterStartBlock	./SD/utility/SdFat.h	/^  uint32_t clusterStartBlock(uint32_t cluster) const {$/;"	f	class:SdVolume
clusterStartBlock	./SD/utility/SdFat.h	/^  uint32_t clusterStartBlock(uint32_t cluster) const {$/;"	f	class:SdVolume
CMD0	./Robot_Control/SdCard.h	/^uint8_t const CMD0     = 0X00;$/;"	v
CMD0	./Robot_Control/SdCard.h	/^uint8_t const CMD0     = 0X00;$/;"	v
CMD0	./SD/utility/SdInfo.h	/^uint8_t const CMD0 = 0X00;$/;"	v
CMD0	./SD/utility/SdInfo.h	/^uint8_t const CMD0 = 0X00;$/;"	v
CMD10	./Robot_Control/SdCard.h	/^uint8_t const CMD10    = 0X0A;$/;"	v
CMD10	./Robot_Control/SdCard.h	/^uint8_t const CMD10    = 0X0A;$/;"	v
CMD10	./SD/utility/SdInfo.h	/^uint8_t const CMD10 = 0X0A;$/;"	v
CMD10	./SD/utility/SdInfo.h	/^uint8_t const CMD10 = 0X0A;$/;"	v
CMD13	./Robot_Control/SdCard.h	/^uint8_t const CMD13    = 0X0D;$/;"	v
CMD13	./Robot_Control/SdCard.h	/^uint8_t const CMD13    = 0X0D;$/;"	v
CMD13	./SD/utility/SdInfo.h	/^uint8_t const CMD13 = 0X0D;$/;"	v
CMD13	./SD/utility/SdInfo.h	/^uint8_t const CMD13 = 0X0D;$/;"	v
CMD17	./Robot_Control/SdCard.h	/^uint8_t const CMD17    = 0X11;$/;"	v
CMD17	./Robot_Control/SdCard.h	/^uint8_t const CMD17    = 0X11;$/;"	v
CMD17	./SD/utility/SdInfo.h	/^uint8_t const CMD17 = 0X11;$/;"	v
CMD17	./SD/utility/SdInfo.h	/^uint8_t const CMD17 = 0X11;$/;"	v
CMD24	./Robot_Control/SdCard.h	/^uint8_t const CMD24    = 0X18;$/;"	v
CMD24	./Robot_Control/SdCard.h	/^uint8_t const CMD24    = 0X18;$/;"	v
CMD24	./SD/utility/SdInfo.h	/^uint8_t const CMD24 = 0X18;$/;"	v
CMD24	./SD/utility/SdInfo.h	/^uint8_t const CMD24 = 0X18;$/;"	v
CMD25	./SD/utility/SdInfo.h	/^uint8_t const CMD25 = 0X19;$/;"	v
CMD25	./SD/utility/SdInfo.h	/^uint8_t const CMD25 = 0X19;$/;"	v
CMD32	./SD/utility/SdInfo.h	/^uint8_t const CMD32 = 0X20;$/;"	v
CMD32	./SD/utility/SdInfo.h	/^uint8_t const CMD32 = 0X20;$/;"	v
CMD33	./SD/utility/SdInfo.h	/^uint8_t const CMD33 = 0X21;$/;"	v
CMD33	./SD/utility/SdInfo.h	/^uint8_t const CMD33 = 0X21;$/;"	v
CMD38	./SD/utility/SdInfo.h	/^uint8_t const CMD38 = 0X26;$/;"	v
CMD38	./SD/utility/SdInfo.h	/^uint8_t const CMD38 = 0X26;$/;"	v
CMD55	./Robot_Control/SdCard.h	/^uint8_t const CMD55    = 0X37;$/;"	v
CMD55	./Robot_Control/SdCard.h	/^uint8_t const CMD55    = 0X37;$/;"	v
CMD55	./SD/utility/SdInfo.h	/^uint8_t const CMD55 = 0X37;$/;"	v
CMD55	./SD/utility/SdInfo.h	/^uint8_t const CMD55 = 0X37;$/;"	v
CMD58	./SD/utility/SdInfo.h	/^uint8_t const CMD58 = 0X3A;$/;"	v
CMD58	./SD/utility/SdInfo.h	/^uint8_t const CMD58 = 0X3A;$/;"	v
CMD8	./SD/utility/SdInfo.h	/^uint8_t const CMD8 = 0X08;$/;"	v
CMD8	./SD/utility/SdInfo.h	/^uint8_t const CMD8 = 0X08;$/;"	v
CMD9	./Robot_Control/SdCard.h	/^uint8_t const CMD9     = 0X09;$/;"	v
CMD9	./Robot_Control/SdCard.h	/^uint8_t const CMD9     = 0X09;$/;"	v
CMD9	./SD/utility/SdInfo.h	/^uint8_t const CMD9 = 0X09;$/;"	v
CMD9	./SD/utility/SdInfo.h	/^uint8_t const CMD9 = 0X09;$/;"	v
CMD_FLAG	./WiFi/utility/wifi_spi.h	6;"	d
CMD_FLAG	./WiFi/utility/wifi_spi.h	6;"	d
CMD_POS	./WiFi/utility/wifi_spi.h	21;"	d
CMD_POS	./WiFi/utility/wifi_spi.h	21;"	d
cmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	cmd;$/;"	m	struct:__anon7
cmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	cmd;$/;"	m	struct:__anon7
cmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	cmd;$/;"	m	struct:__anon8
cmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	cmd;$/;"	m	struct:__anon8
cmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	cmd;$/;"	m	struct:__anon9
cmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	cmd;$/;"	m	struct:__anon9
cmp	./Robot_Control/lcd.cpp	/^bool cmp(char* str1, char* str2, uint8_t len){$/;"	f
cmp	./Robot_Control/lcd.cpp	/^bool cmp(char* str1, char* str2, uint8_t len){$/;"	f
CN_IR	./Robot_Control/ArduinoRobot.h	65;"	d
CN_IR	./Robot_Control/ArduinoRobot.h	65;"	d
CN_IR	./Robot_Motor/ArduinoRobotMotorBoard.h	37;"	d
CN_IR	./Robot_Motor/ArduinoRobotMotorBoard.h	37;"	d
CN_LEFT_MOTOR	./Robot_Control/ArduinoRobot.h	63;"	d
CN_LEFT_MOTOR	./Robot_Control/ArduinoRobot.h	63;"	d
CN_LEFT_MOTOR	./Robot_Motor/ArduinoRobotMotorBoard.h	35;"	d
CN_LEFT_MOTOR	./Robot_Motor/ArduinoRobotMotorBoard.h	35;"	d
CN_RIGHT_MOTOR	./Robot_Control/ArduinoRobot.h	64;"	d
CN_RIGHT_MOTOR	./Robot_Control/ArduinoRobot.h	64;"	d
CN_RIGHT_MOTOR	./Robot_Motor/ArduinoRobotMotorBoard.h	36;"	d
CN_RIGHT_MOTOR	./Robot_Motor/ArduinoRobotMotorBoard.h	36;"	d
codeArea	./Robot_Control/FatStructs.h	/^  uint8_t  codeArea[440];$/;"	m	struct:masterBootRecord
codeArea	./Robot_Control/FatStructs.h	/^  uint8_t  codeArea[440];$/;"	m	struct:masterBootRecord
codeArea	./SD/utility/FatStructs.h	/^  uint8_t  codeArea[440];$/;"	m	struct:masterBootRecord
codeArea	./SD/utility/FatStructs.h	/^  uint8_t  codeArea[440];$/;"	m	struct:masterBootRecord
codenameToAPin	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^uint8_t RobotMotorBoard::codenameToAPin(uint8_t codename){$/;"	f	class:RobotMotorBoard
codenameToAPin	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^uint8_t RobotMotorBoard::codenameToAPin(uint8_t codename){$/;"	f	class:RobotMotorBoard
Color565	./Robot_Control/Arduino_LCD.cpp	/^uint16_t Arduino_LCD::Color565(uint8_t r, uint8_t g, uint8_t b) {$/;"	f	class:Arduino_LCD
Color565	./Robot_Control/Arduino_LCD.cpp	/^uint16_t Arduino_LCD::Color565(uint8_t r, uint8_t g, uint8_t b) {$/;"	f	class:Arduino_LCD
Color565	./TFT/utility/Adafruit_ST7735.h	/^  uint16_t Color565(uint8_t r, uint8_t g, uint8_t b) { return newColor(r, g, b);}$/;"	f	class:Adafruit_ST7735
Color565	./TFT/utility/Adafruit_ST7735.h	/^  uint16_t Color565(uint8_t r, uint8_t g, uint8_t b) { return newColor(r, g, b);}$/;"	f	class:Adafruit_ST7735
color	./Robot_Control/Adafruit_GFX.h	/^typedef uint16_t color;$/;"	t
color	./Robot_Control/Adafruit_GFX.h	/^typedef uint16_t color;$/;"	t
color	./TFT/utility/Adafruit_GFX.h	/^typedef uint16_t color;$/;"	t
color	./TFT/utility/Adafruit_GFX.h	/^typedef uint16_t color;$/;"	t
colstart	./Robot_Control/Arduino_LCD.h	/^           colstart, rowstart; \/\/ some displays need this changed$/;"	m	class:Arduino_LCD
colstart	./Robot_Control/Arduino_LCD.h	/^           colstart, rowstart; \/\/ some displays need this changed$/;"	m	class:Arduino_LCD
colstart	./TFT/utility/Adafruit_ST7735.h	/^           colstart, rowstart; \/\/ some displays need this changed$/;"	m	class:Adafruit_ST7735
colstart	./TFT/utility/Adafruit_ST7735.h	/^           colstart, rowstart; \/\/ some displays need this changed$/;"	m	class:Adafruit_ST7735
COMBINE	./TinyGPSPlus/TinyGPS++.cpp	153;"	d	file:
COMBINE	./TinyGPSPlus/TinyGPS++.cpp	153;"	d	file:
COMBINE	./TinyGPS/TinyGPS.cpp	162;"	d	file:
COMBINE	./TinyGPS/TinyGPS.cpp	162;"	d	file:
COMMAND_ACTION_DONE	./Robot_Control/ArduinoRobot.h	56;"	d
COMMAND_ACTION_DONE	./Robot_Control/ArduinoRobot.h	56;"	d
COMMAND_ACTION_DONE	./Robot_Motor/ArduinoRobotMotorBoard.h	27;"	d
COMMAND_ACTION_DONE	./Robot_Motor/ArduinoRobotMotorBoard.h	27;"	d
COMMAND_ANALOG_READ_RE	./Robot_Control/ArduinoRobot.h	51;"	d
COMMAND_ANALOG_READ_RE	./Robot_Control/ArduinoRobot.h	51;"	d
COMMAND_ANALOG_READ_RE	./Robot_Motor/ArduinoRobotMotorBoard.h	22;"	d
COMMAND_ANALOG_READ_RE	./Robot_Motor/ArduinoRobotMotorBoard.h	22;"	d
COMMAND_ANALOG_READ	./Robot_Control/ArduinoRobot.h	50;"	d
COMMAND_ANALOG_READ	./Robot_Control/ArduinoRobot.h	50;"	d
COMMAND_ANALOG_READ	./Robot_Motor/ArduinoRobotMotorBoard.h	21;"	d
COMMAND_ANALOG_READ	./Robot_Motor/ArduinoRobotMotorBoard.h	21;"	d
COMMAND_ANALOG_WRITE	./Robot_Control/ArduinoRobot.h	48;"	d
COMMAND_ANALOG_WRITE	./Robot_Control/ArduinoRobot.h	48;"	d
COMMAND_ANALOG_WRITE	./Robot_Motor/ArduinoRobotMotorBoard.h	19;"	d
COMMAND_ANALOG_WRITE	./Robot_Motor/ArduinoRobotMotorBoard.h	19;"	d
commandCounter	./GSM/GSM3ShieldV1ModemCore.h	/^		uint8_t commandCounter;$/;"	m	class:GSM3ShieldV1ModemCore
commandCounter	./GSM/GSM3ShieldV1ModemCore.h	/^		uint8_t commandCounter;$/;"	m	class:GSM3ShieldV1ModemCore
COMMAND_DIGITAL_READ_RE	./Robot_Control/ArduinoRobot.h	53;"	d
COMMAND_DIGITAL_READ_RE	./Robot_Control/ArduinoRobot.h	53;"	d
COMMAND_DIGITAL_READ_RE	./Robot_Motor/ArduinoRobotMotorBoard.h	24;"	d
COMMAND_DIGITAL_READ_RE	./Robot_Motor/ArduinoRobotMotorBoard.h	24;"	d
COMMAND_DIGITAL_READ	./Robot_Control/ArduinoRobot.h	52;"	d
COMMAND_DIGITAL_READ	./Robot_Control/ArduinoRobot.h	52;"	d
COMMAND_DIGITAL_READ	./Robot_Motor/ArduinoRobotMotorBoard.h	23;"	d
COMMAND_DIGITAL_READ	./Robot_Motor/ArduinoRobotMotorBoard.h	23;"	d
COMMAND_DIGITAL_WRITE	./Robot_Control/ArduinoRobot.h	49;"	d
COMMAND_DIGITAL_WRITE	./Robot_Control/ArduinoRobot.h	49;"	d
COMMAND_DIGITAL_WRITE	./Robot_Motor/ArduinoRobotMotorBoard.h	20;"	d
COMMAND_DIGITAL_WRITE	./Robot_Motor/ArduinoRobotMotorBoard.h	20;"	d
commandError	./GSM/GSM3ShieldV1ModemCore.h	/^		uint8_t commandError;$/;"	m	class:GSM3ShieldV1ModemCore
commandError	./GSM/GSM3ShieldV1ModemCore.h	/^		uint8_t commandError;$/;"	m	class:GSM3ShieldV1ModemCore
COMMAND_LINE_FOLLOW_CONFIG	./Robot_Control/ArduinoRobot.h	60;"	d
COMMAND_LINE_FOLLOW_CONFIG	./Robot_Control/ArduinoRobot.h	60;"	d
COMMAND_LINE_FOLLOW_CONFIG	./Robot_Motor/ArduinoRobotMotorBoard.h	31;"	d
COMMAND_LINE_FOLLOW_CONFIG	./Robot_Motor/ArduinoRobotMotorBoard.h	31;"	d
command	./LiquidCrystal/LiquidCrystal.cpp	/^inline void LiquidCrystal::command(uint8_t value) {$/;"	f	class:LiquidCrystal
command	./LiquidCrystal/LiquidCrystal.cpp	/^inline void LiquidCrystal::command(uint8_t value) {$/;"	f	class:LiquidCrystal
commandList	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::commandList(uint8_t *addr) {$/;"	f	class:Arduino_LCD
commandList	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::commandList(uint8_t *addr) {$/;"	f	class:Arduino_LCD
commandList	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::commandList(const uint8_t *addr) {$/;"	f	class:Adafruit_ST7735
commandList	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::commandList(const uint8_t *addr) {$/;"	f	class:Adafruit_ST7735
commandMillis	./GSM/GSM3ShieldV1.h	/^		long commandMillis;$/;"	m	class:GSM3ShieldV1
commandMillis	./GSM/GSM3ShieldV1.h	/^		long commandMillis;$/;"	m	class:GSM3ShieldV1
COMMAND_MOTORS_STOP	./Robot_Control/ArduinoRobot.h	47;"	d
COMMAND_MOTORS_STOP	./Robot_Control/ArduinoRobot.h	47;"	d
COMMAND_MOTORS_STOP	./Robot_Motor/ArduinoRobotMotorBoard.h	18;"	d
COMMAND_MOTORS_STOP	./Robot_Motor/ArduinoRobotMotorBoard.h	18;"	d
COMMAND_PAUSE_MODE	./Robot_Control/ArduinoRobot.h	59;"	d
COMMAND_PAUSE_MODE	./Robot_Control/ArduinoRobot.h	59;"	d
COMMAND_PAUSE_MODE	./Robot_Motor/ArduinoRobotMotorBoard.h	30;"	d
COMMAND_PAUSE_MODE	./Robot_Motor/ArduinoRobotMotorBoard.h	30;"	d
COMMAND_READ_IR_RE	./Robot_Control/ArduinoRobot.h	55;"	d
COMMAND_READ_IR_RE	./Robot_Control/ArduinoRobot.h	55;"	d
COMMAND_READ_IR_RE	./Robot_Motor/ArduinoRobotMotorBoard.h	26;"	d
COMMAND_READ_IR_RE	./Robot_Motor/ArduinoRobotMotorBoard.h	26;"	d
COMMAND_READ_IR	./Robot_Control/ArduinoRobot.h	54;"	d
COMMAND_READ_IR	./Robot_Control/ArduinoRobot.h	54;"	d
COMMAND_READ_IR	./Robot_Motor/ArduinoRobotMotorBoard.h	25;"	d
COMMAND_READ_IR	./Robot_Motor/ArduinoRobotMotorBoard.h	25;"	d
COMMAND_READ_TRIM_RE	./Robot_Control/ArduinoRobot.h	58;"	d
COMMAND_READ_TRIM_RE	./Robot_Control/ArduinoRobot.h	58;"	d
COMMAND_READ_TRIM_RE	./Robot_Motor/ArduinoRobotMotorBoard.h	29;"	d
COMMAND_READ_TRIM_RE	./Robot_Motor/ArduinoRobotMotorBoard.h	29;"	d
COMMAND_READ_TRIM	./Robot_Control/ArduinoRobot.h	57;"	d
COMMAND_READ_TRIM	./Robot_Control/ArduinoRobot.h	57;"	d
COMMAND_READ_TRIM	./Robot_Motor/ArduinoRobotMotorBoard.h	28;"	d
COMMAND_READ_TRIM	./Robot_Motor/ArduinoRobotMotorBoard.h	28;"	d
COMMAND_RUN	./Robot_Control/ArduinoRobot.h	46;"	d
COMMAND_RUN	./Robot_Control/ArduinoRobot.h	46;"	d
COMMAND_RUN	./Robot_Motor/ArduinoRobotMotorBoard.h	17;"	d
COMMAND_RUN	./Robot_Motor/ArduinoRobotMotorBoard.h	17;"	d
commandSent	./GSM/GSM3ShieldV1.h	/^		bool commandSent;$/;"	m	class:GSM3ShieldV1
commandSent	./GSM/GSM3ShieldV1.h	/^		bool commandSent;$/;"	m	class:GSM3ShieldV1
COMMAND_SWITCH_MODE	./Robot_Control/ArduinoRobot.h	45;"	d
COMMAND_SWITCH_MODE	./Robot_Control/ArduinoRobot.h	45;"	d
COMMAND_SWITCH_MODE	./Robot_Motor/ArduinoRobotMotorBoard.h	16;"	d
COMMAND_SWITCH_MODE	./Robot_Motor/ArduinoRobotMotorBoard.h	16;"	d
comm_buf	./GSM_Shield/GSM_Shield.h	/^    byte comm_buf[COMM_BUF_LEN+1];  \/\/ communication buffer +1 for 0x00 termination$/;"	m	class:GSM
comm_buf	./GSM_Shield/GSM_Shield.h	/^    byte comm_buf[COMM_BUF_LEN+1];  \/\/ communication buffer +1 for 0x00 termination$/;"	m	class:GSM
COMM_BUF_LEN	./GSM_Shield/GSM_Shield.h	43;"	d
COMM_BUF_LEN	./GSM_Shield/GSM_Shield.h	43;"	d
comm_buf_len	./GSM_Shield/GSM_Shield.h	/^    byte comm_buf_len;              \/\/ num. of characters in the buffer$/;"	m	class:GSM
comm_buf_len	./GSM_Shield/GSM_Shield.h	/^    byte comm_buf_len;              \/\/ num. of characters in the buffer$/;"	m	class:GSM
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSCustom::commit()$/;"	f	class:TinyGPSCustom
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSCustom::commit()$/;"	f	class:TinyGPSCustom
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSDate::commit()$/;"	f	class:TinyGPSDate
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSDate::commit()$/;"	f	class:TinyGPSDate
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSDecimal::commit()$/;"	f	class:TinyGPSDecimal
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSDecimal::commit()$/;"	f	class:TinyGPSDecimal
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSInteger::commit()$/;"	f	class:TinyGPSInteger
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSInteger::commit()$/;"	f	class:TinyGPSInteger
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSLocation::commit()$/;"	f	class:TinyGPSLocation
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSLocation::commit()$/;"	f	class:TinyGPSLocation
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSTime::commit()$/;"	f	class:TinyGPSTime
commit	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSTime::commit()$/;"	f	class:TinyGPSTime
comm_line_status_enum	./GSM_Shield/GSM_Shield.h	/^enum comm_line_status_enum $/;"	g
comm_line_status_enum	./GSM_Shield/GSM_Shield.h	/^enum comm_line_status_enum $/;"	g
comm_line_status	./GSM_Shield/GSM_Shield.h	/^    byte comm_line_status;$/;"	m	class:GSM
comm_line_status	./GSM_Shield/GSM_Shield.h	/^    byte comm_line_status;$/;"	m	class:GSM
commonInit	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::commonInit(uint8_t *cmdList) {$/;"	f	class:Arduino_LCD
commonInit	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::commonInit(uint8_t *cmdList) {$/;"	f	class:Arduino_LCD
commonInit	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::commonInit(const uint8_t *cmdList) {$/;"	f	class:Adafruit_ST7735
commonInit	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::commonInit(const uint8_t *cmdList) {$/;"	f	class:Adafruit_ST7735
ComparePhoneNumber	./GSM_Shield/GSM_Shield.cpp	/^char GSM::ComparePhoneNumber(byte position, char *phone_number)$/;"	f	class:GSM
ComparePhoneNumber	./GSM_Shield/GSM_Shield.cpp	/^char GSM::ComparePhoneNumber(byte position, char *phone_number)$/;"	f	class:GSM
COMPASS_BMP	./Robot_Control/ArduinoRobot.h	36;"	d
COMPASS_BMP	./Robot_Control/ArduinoRobot.h	36;"	d
Compass_h	./Robot_Control/Compass.h	2;"	d
Compass_h	./Robot_Control/Compass.h	2;"	d
compassRead	./Robot_Control/Sensors.cpp	/^uint16_t RobotControl::compassRead(){$/;"	f	class:RobotControl
compassRead	./Robot_Control/Sensors.cpp	/^uint16_t RobotControl::compassRead(){$/;"	f	class:RobotControl
Compass	./Robot_Control/Compass.h	/^class Compass{$/;"	c
Compass	./Robot_Control/Compass.h	/^class Compass{$/;"	c
CON	./Ethernet/utility/w5100.h	/^  static const uint8_t CON     = 0x01;$/;"	m	class:SnIR
CON	./Ethernet/utility/w5100.h	/^  static const uint8_t CON     = 0x01;$/;"	m	class:SnIR
config	./Robot_Motor/lineFollow.cpp	/^void LineFollow::config(uint8_t KP, uint8_t KD, uint8_t robotSpeed, uint8_t intergrationTime){$/;"	f	class:LineFollow
config	./Robot_Motor/lineFollow.cpp	/^void LineFollow::config(uint8_t KP, uint8_t KD, uint8_t robotSpeed, uint8_t intergrationTime){$/;"	f	class:LineFollow
config	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::config(uint8_t validParams, uint32_t local_ip, uint32_t gateway, uint32_t subnet)$/;"	f	class:WiFiDrv
config	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::config(uint8_t validParams, uint32_t local_ip, uint32_t gateway, uint32_t subnet)$/;"	f	class:WiFiDrv
config	./WiFi/WiFi.cpp	/^void WiFiClass::config(IPAddress local_ip)$/;"	f	class:WiFiClass
config	./WiFi/WiFi.cpp	/^void WiFiClass::config(IPAddress local_ip)$/;"	f	class:WiFiClass
config	./WiFi/WiFi.cpp	/^void WiFiClass::config(IPAddress local_ip, IPAddress dns_server)$/;"	f	class:WiFiClass
config	./WiFi/WiFi.cpp	/^void WiFiClass::config(IPAddress local_ip, IPAddress dns_server)$/;"	f	class:WiFiClass
config	./WiFi/WiFi.cpp	/^void WiFiClass::config(IPAddress local_ip, IPAddress dns_server, IPAddress gateway)$/;"	f	class:WiFiClass
config	./WiFi/WiFi.cpp	/^void WiFiClass::config(IPAddress local_ip, IPAddress dns_server, IPAddress gateway)$/;"	f	class:WiFiClass
config	./WiFi/WiFi.cpp	/^void WiFiClass::config(IPAddress local_ip, IPAddress dns_server, IPAddress gateway, IPAddress subnet)$/;"	f	class:WiFiClass
config	./WiFi/WiFi.cpp	/^void WiFiClass::config(IPAddress local_ip, IPAddress dns_server, IPAddress gateway, IPAddress subnet)$/;"	f	class:WiFiClass
connected	./Ethernet/EthernetClient.cpp	/^uint8_t EthernetClient::connected() {$/;"	f	class:EthernetClient
connected	./Ethernet/EthernetClient.cpp	/^uint8_t EthernetClient::connected() {$/;"	f	class:EthernetClient
connected	./GSM/GSM3MobileClientService.cpp	/^uint8_t GSM3MobileClientService::connected()$/;"	f	class:GSM3MobileClientService
connected	./GSM/GSM3MobileClientService.cpp	/^uint8_t GSM3MobileClientService::connected()$/;"	f	class:GSM3MobileClientService
connected	./WiFi/WiFiClient.cpp	/^uint8_t WiFiClient::connected() {$/;"	f	class:WiFiClient
connected	./WiFi/WiFiClient.cpp	/^uint8_t WiFiClient::connected() {$/;"	f	class:WiFiClient
connect	./Ethernet/EthernetClient.cpp	/^int EthernetClient::connect(const char* host, uint16_t port) {$/;"	f	class:EthernetClient
connect	./Ethernet/EthernetClient.cpp	/^int EthernetClient::connect(const char* host, uint16_t port) {$/;"	f	class:EthernetClient
connect	./Ethernet/EthernetClient.cpp	/^int EthernetClient::connect(IPAddress ip, uint16_t port) {$/;"	f	class:EthernetClient
connect	./Ethernet/EthernetClient.cpp	/^int EthernetClient::connect(IPAddress ip, uint16_t port) {$/;"	f	class:EthernetClient
connect	./Ethernet/utility/socket.cpp	/^uint8_t connect(SOCKET s, uint8_t * addr, uint16_t port)$/;"	f
connect	./Ethernet/utility/socket.cpp	/^uint8_t connect(SOCKET s, uint8_t * addr, uint16_t port)$/;"	f
connect	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::connect(const char *host, uint16_t port)$/;"	f	class:GSM3MobileClientService
connect	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::connect(const char *host, uint16_t port)$/;"	f	class:GSM3MobileClientService
connect	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::connect(IPAddress add, uint16_t port) $/;"	f	class:GSM3MobileClientService
connect	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::connect(IPAddress add, uint16_t port) $/;"	f	class:GSM3MobileClientService
connect	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::connect()$/;"	f	class:GSM3ShieldV1DirectModemProvider
connect	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::connect()$/;"	f	class:GSM3ShieldV1DirectModemProvider
CONNECTING	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
CONNECTING	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
CONNECTSERVER	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
CONNECTSERVER	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
connectTCPClientContinue	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::connectTCPClientContinue()$/;"	f	class:GSM3ShieldV1ClientProvider
connectTCPClientContinue	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::connectTCPClientContinue()$/;"	f	class:GSM3ShieldV1ClientProvider
connectTCPClientContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::connectTCPClientContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
connectTCPClientContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::connectTCPClientContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
connectTCPClient	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::connectTCPClient(const char* server, int port, int id_socket)$/;"	f	class:GSM3MobileMockupProvider
connectTCPClient	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::connectTCPClient(const char* server, int port, int id_socket)$/;"	f	class:GSM3MobileMockupProvider
CONNECTTCPCLIENT	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
CONNECTTCPCLIENT	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
connectTCPClient	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::connectTCPClient(const char* server, int port, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
connectTCPClient	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::connectTCPClient(const char* server, int port, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
connectTCPClient	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::connectTCPClient(IPAddress add, int port, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
connectTCPClient	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::connectTCPClient(IPAddress add, int port, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
connectTCPClient	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::connectTCPClient(const char* server, int port, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
connectTCPClient	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::connectTCPClient(const char* server, int port, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
connectTCPClient	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::connectTCPClient(IPAddress add, int port, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
connectTCPClient	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::connectTCPClient(IPAddress add, int port, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
connectTCPServerContinue	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^void GSM3ShieldV1MultiServerProvider::connectTCPServerContinue()$/;"	f	class:GSM3ShieldV1MultiServerProvider
connectTCPServerContinue	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^void GSM3ShieldV1MultiServerProvider::connectTCPServerContinue()$/;"	f	class:GSM3ShieldV1MultiServerProvider
connectTCPServerContinue	./GSM/GSM3ShieldV1ServerProvider.cpp	/^void GSM3ShieldV1ServerProvider::connectTCPServerContinue()$/;"	f	class:GSM3ShieldV1ServerProvider
connectTCPServerContinue	./GSM/GSM3ShieldV1ServerProvider.cpp	/^void GSM3ShieldV1ServerProvider::connectTCPServerContinue()$/;"	f	class:GSM3ShieldV1ServerProvider
connectTCPServer	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::connectTCPServer(int port, char* localIP, int* localIPlength)$/;"	f	class:GSM3MobileMockupProvider
connectTCPServer	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::connectTCPServer(int port, char* localIP, int* localIPlength)$/;"	f	class:GSM3MobileMockupProvider
connectTCPServer	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline int connectTCPServer(int port, char* localIP, int localIPlength){return 0;};$/;"	f	class:GSM3MobileNetworkProvider
connectTCPServer	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline int connectTCPServer(int port, char* localIP, int localIPlength){return 0;};$/;"	f	class:GSM3MobileNetworkProvider
connectTCPServer	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^int GSM3ShieldV1MultiServerProvider::connectTCPServer(int port)$/;"	f	class:GSM3ShieldV1MultiServerProvider
connectTCPServer	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^int GSM3ShieldV1MultiServerProvider::connectTCPServer(int port)$/;"	f	class:GSM3ShieldV1MultiServerProvider
connectTCPServer	./GSM/GSM3ShieldV1ServerProvider.cpp	/^int GSM3ShieldV1ServerProvider::connectTCPServer(int port)$/;"	f	class:GSM3ShieldV1ServerProvider
connectTCPServer	./GSM/GSM3ShieldV1ServerProvider.cpp	/^int GSM3ShieldV1ServerProvider::connectTCPServer(int port)$/;"	f	class:GSM3ShieldV1ServerProvider
connect	./WiFi/WiFiClient.cpp	/^int WiFiClient::connect(const char* host, uint16_t port) {$/;"	f	class:WiFiClient
connect	./WiFi/WiFiClient.cpp	/^int WiFiClient::connect(const char* host, uint16_t port) {$/;"	f	class:WiFiClient
connect	./WiFi/WiFiClient.cpp	/^int WiFiClient::connect(IPAddress ip, uint16_t port) {$/;"	f	class:WiFiClient
connect	./WiFi/WiFiClient.cpp	/^int WiFiClient::connect(IPAddress ip, uint16_t port) {$/;"	f	class:WiFiClient
constructor	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::constructor(int16_t w, int16_t h) {$/;"	f	class:Adafruit_GFX
constructor	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::constructor(int16_t w, int16_t h) {$/;"	f	class:Adafruit_GFX
constructor	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::constructor(int16_t w, int16_t h) {$/;"	f	class:Adafruit_GFX
constructor	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::constructor(int16_t w, int16_t h) {$/;"	f	class:Adafruit_GFX
contiguousRange	./SD/utility/SdFat.h	/^  uint8_t contiguousRange(uint32_t& bgnBlock, uint32_t& endBlock) {  \/\/ NOLINT$/;"	f	class:SdFile
contiguousRange	./SD/utility/SdFat.h	/^  uint8_t contiguousRange(uint32_t& bgnBlock, uint32_t& endBlock) {  \/\/ NOLINT$/;"	f	class:SdFile
contiguousRange	./SD/utility/SdFile.cpp	/^uint8_t SdFile::contiguousRange(uint32_t* bgnBlock, uint32_t* endBlock) {$/;"	f	class:SdFile
contiguousRange	./SD/utility/SdFile.cpp	/^uint8_t SdFile::contiguousRange(uint32_t* bgnBlock, uint32_t* endBlock) {$/;"	f	class:SdFile
CONTROL_BMP	./Robot_Control/ArduinoRobot.h	37;"	d
CONTROL_BMP	./Robot_Control/ArduinoRobot.h	37;"	d
copy	./Robot_Control/SdInfo.h	/^  unsigned copy : 1;$/;"	m	struct:CSD
copy	./Robot_Control/SdInfo.h	/^  unsigned copy : 1;$/;"	m	struct:CSD
copy	./SD/utility/SdInfo.h	/^  unsigned copy : 1;$/;"	m	struct:CSDV1
copy	./SD/utility/SdInfo.h	/^  unsigned copy : 1;$/;"	m	struct:CSDV1
copy	./SD/utility/SdInfo.h	/^  unsigned copy : 1;$/;"	m	struct:CSDV2
copy	./SD/utility/SdInfo.h	/^  unsigned copy : 1;$/;"	m	struct:CSDV2
countryCode	./GSM/GSM3ShieldV1CellManagement.h	/^		char *countryCode;$/;"	m	class:GSM3ShieldV1CellManagement
countryCode	./GSM/GSM3ShieldV1CellManagement.h	/^		char *countryCode;$/;"	m	class:GSM3ShieldV1CellManagement
countryNameRead	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::countryNameRead(char* container){$/;"	f	class:RobotControl
countryNameRead	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::countryNameRead(char* container){$/;"	f	class:RobotControl
COUNTRYNAME	./Robot_Control/utility/RobotTextManager.h	7;"	d
COUNTRYNAME	./Robot_Control/utility/RobotTextManager.h	7;"	d
countryNameWrite	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::countryNameWrite(char* text){$/;"	f	class:RobotControl
countryNameWrite	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::countryNameWrite(char* text){$/;"	f	class:RobotControl
course	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSCourse course;$/;"	m	class:TinyGPSPlus
course	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSCourse course;$/;"	m	class:TinyGPSPlus
course	./TinyGPS/TinyGPS.h	/^  inline unsigned long course() { return _course; }$/;"	f	class:TinyGPS
course	./TinyGPS/TinyGPS.h	/^  inline unsigned long course() { return _course; }$/;"	f	class:TinyGPS
_course	./TinyGPS/TinyGPS.h	/^  unsigned long  _course, _new_course;$/;"	m	class:TinyGPS
_course	./TinyGPS/TinyGPS.h	/^  unsigned long  _course, _new_course;$/;"	m	class:TinyGPS
courseTo	./TinyGPSPlus/TinyGPS++.cpp	/^double TinyGPSPlus::courseTo(double lat1, double long1, double lat2, double long2)$/;"	f	class:TinyGPSPlus
courseTo	./TinyGPSPlus/TinyGPS++.cpp	/^double TinyGPSPlus::courseTo(double lat1, double long1, double lat2, double long2)$/;"	f	class:TinyGPSPlus
course_to	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::course_to (float lat1, float long1, float lat2, float long2) $/;"	f	class:TinyGPS
course_to	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::course_to (float lat1, float long1, float lat2, float long2) $/;"	f	class:TinyGPS
crack_datetime	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::crack_datetime(int *year, byte *month, byte *day, $/;"	f	class:TinyGPS
crack_datetime	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::crack_datetime(int *year, byte *month, byte *day, $/;"	f	class:TinyGPS
crc	./Robot_Control/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CID
crc	./Robot_Control/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CID
crc	./Robot_Control/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CSD
crc	./Robot_Control/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CSD
crc	./SD/utility/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CID
crc	./SD/utility/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CID
crc	./SD/utility/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CSDV1
crc	./SD/utility/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CSDV1
crc	./SD/utility/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CSDV2
crc	./SD/utility/SdInfo.h	/^  unsigned crc : 7;$/;"	m	struct:CSDV2
createChar	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::createChar(uint8_t location, uint8_t charmap[]) {$/;"	f	class:LiquidCrystal
createChar	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::createChar(uint8_t location, uint8_t charmap[]) {$/;"	f	class:LiquidCrystal
createContiguous	./SD/utility/SdFat.h	/^  uint8_t createContiguous(SdFile& dirFile,  \/\/ NOLINT$/;"	f	class:SdFile
createContiguous	./SD/utility/SdFat.h	/^  uint8_t createContiguous(SdFile& dirFile,  \/\/ NOLINT$/;"	f	class:SdFile
createContiguous	./SD/utility/SdFile.cpp	/^uint8_t SdFile::createContiguous(SdFile* dirFile,$/;"	f	class:SdFile
createContiguous	./SD/utility/SdFile.cpp	/^uint8_t SdFile::createContiguous(SdFile* dirFile,$/;"	f	class:SdFile
creationDate	./Robot_Control/FatStructs.h	/^  uint16_t creationDate;$/;"	m	struct:directoryEntry
creationDate	./Robot_Control/FatStructs.h	/^  uint16_t creationDate;$/;"	m	struct:directoryEntry
creationDate	./SD/utility/FatStructs.h	/^  uint16_t creationDate;$/;"	m	struct:directoryEntry
creationDate	./SD/utility/FatStructs.h	/^  uint16_t creationDate;$/;"	m	struct:directoryEntry
creationTime	./Robot_Control/FatStructs.h	/^  uint16_t creationTime;$/;"	m	struct:directoryEntry
creationTime	./Robot_Control/FatStructs.h	/^  uint16_t creationTime;$/;"	m	struct:directoryEntry
creationTime	./SD/utility/FatStructs.h	/^  uint16_t creationTime;$/;"	m	struct:directoryEntry
creationTime	./SD/utility/FatStructs.h	/^  uint16_t creationTime;$/;"	m	struct:directoryEntry
creationTimeTenths	./Robot_Control/FatStructs.h	/^  uint8_t  creationTimeTenths;$/;"	m	struct:directoryEntry
creationTimeTenths	./Robot_Control/FatStructs.h	/^  uint8_t  creationTimeTenths;$/;"	m	struct:directoryEntry
creationTimeTenths	./SD/utility/FatStructs.h	/^  uint8_t  creationTimeTenths;$/;"	m	struct:directoryEntry
creationTimeTenths	./SD/utility/FatStructs.h	/^  uint8_t  creationTimeTenths;$/;"	m	struct:directoryEntry
csd1_t	./SD/utility/SdInfo.h	/^}csd1_t;$/;"	t	typeref:struct:CSDV1
csd1_t	./SD/utility/SdInfo.h	/^}csd1_t;$/;"	t	typeref:struct:CSDV1
csd2_t	./SD/utility/SdInfo.h	/^}csd2_t;$/;"	t	typeref:struct:CSDV2
csd2_t	./SD/utility/SdInfo.h	/^}csd2_t;$/;"	t	typeref:struct:CSDV2
CSD	./Robot_Control/SdInfo.h	/^typedef struct CSD {$/;"	s
CSD	./Robot_Control/SdInfo.h	/^typedef struct CSD {$/;"	s
csd_t	./Robot_Control/SdInfo.h	/^}csd_t;$/;"	t	typeref:struct:CSD
csd_t	./Robot_Control/SdInfo.h	/^}csd_t;$/;"	t	typeref:struct:CSD
csd_t	./SD/utility/SdInfo.h	/^union csd_t {$/;"	u
csd_t	./SD/utility/SdInfo.h	/^union csd_t {$/;"	u
CSDV1	./SD/utility/SdInfo.h	/^typedef struct CSDV1 {$/;"	s
CSDV1	./SD/utility/SdInfo.h	/^typedef struct CSDV1 {$/;"	s
CSDV2	./SD/utility/SdInfo.h	/^typedef struct CSDV2 {$/;"	s
CSDV2	./SD/utility/SdInfo.h	/^typedef struct CSDV2 {$/;"	s
csd_ver	./Robot_Control/SdInfo.h	/^  unsigned csd_ver : 2;$/;"	m	struct:CSD
csd_ver	./Robot_Control/SdInfo.h	/^  unsigned csd_ver : 2;$/;"	m	struct:CSD
csd_ver	./SD/utility/SdInfo.h	/^  unsigned csd_ver : 2;$/;"	m	struct:CSDV1
csd_ver	./SD/utility/SdInfo.h	/^  unsigned csd_ver : 2;$/;"	m	struct:CSDV1
csd_ver	./SD/utility/SdInfo.h	/^  unsigned csd_ver : 2;$/;"	m	struct:CSDV2
csd_ver	./SD/utility/SdInfo.h	/^  unsigned csd_ver : 2;$/;"	m	struct:CSDV2
c_size_high	./Robot_Control/SdInfo.h	/^  unsigned c_size_high : 2;$/;"	m	struct:CSD
c_size_high	./Robot_Control/SdInfo.h	/^  unsigned c_size_high : 2;$/;"	m	struct:CSD
c_size_high	./SD/utility/SdInfo.h	/^  unsigned c_size_high : 2;$/;"	m	struct:CSDV1
c_size_high	./SD/utility/SdInfo.h	/^  unsigned c_size_high : 2;$/;"	m	struct:CSDV1
c_size_high	./SD/utility/SdInfo.h	/^  unsigned c_size_high : 6;$/;"	m	struct:CSDV2
c_size_high	./SD/utility/SdInfo.h	/^  unsigned c_size_high : 6;$/;"	m	struct:CSDV2
c_size_low	./Robot_Control/SdInfo.h	/^  unsigned c_size_low :2;$/;"	m	struct:CSD
c_size_low	./Robot_Control/SdInfo.h	/^  unsigned c_size_low :2;$/;"	m	struct:CSD
c_size_low	./SD/utility/SdInfo.h	/^  uint8_t c_size_low;$/;"	m	struct:CSDV2
c_size_low	./SD/utility/SdInfo.h	/^  uint8_t c_size_low;$/;"	m	struct:CSDV2
c_size_low	./SD/utility/SdInfo.h	/^  unsigned c_size_low :2;$/;"	m	struct:CSDV1
c_size_low	./SD/utility/SdInfo.h	/^  unsigned c_size_low :2;$/;"	m	struct:CSDV1
c_size_mid	./Robot_Control/SdInfo.h	/^  uint8_t c_size_mid;$/;"	m	struct:CSD
c_size_mid	./Robot_Control/SdInfo.h	/^  uint8_t c_size_mid;$/;"	m	struct:CSD
c_size_mid	./SD/utility/SdInfo.h	/^  uint8_t c_size_mid;$/;"	m	struct:CSDV1
c_size_mid	./SD/utility/SdInfo.h	/^  uint8_t c_size_mid;$/;"	m	struct:CSDV1
c_size_mid	./SD/utility/SdInfo.h	/^  uint8_t c_size_mid;$/;"	m	struct:CSDV2
c_size_mid	./SD/utility/SdInfo.h	/^  uint8_t c_size_mid;$/;"	m	struct:CSDV2
c_size_mult_high	./Robot_Control/SdInfo.h	/^  unsigned c_size_mult_high : 2;$/;"	m	struct:CSD
c_size_mult_high	./Robot_Control/SdInfo.h	/^  unsigned c_size_mult_high : 2;$/;"	m	struct:CSD
c_size_mult_high	./SD/utility/SdInfo.h	/^  unsigned c_size_mult_high : 2;$/;"	m	struct:CSDV1
c_size_mult_high	./SD/utility/SdInfo.h	/^  unsigned c_size_mult_high : 2;$/;"	m	struct:CSDV1
c_size_mult_low	./Robot_Control/SdInfo.h	/^  unsigned c_size_mult_low : 1;$/;"	m	struct:CSD
c_size_mult_low	./Robot_Control/SdInfo.h	/^  unsigned c_size_mult_low : 1;$/;"	m	struct:CSD
c_size_mult_low	./SD/utility/SdInfo.h	/^  unsigned c_size_mult_low : 1;$/;"	m	struct:CSDV1
c_size_mult_low	./SD/utility/SdInfo.h	/^  unsigned c_size_mult_low : 1;$/;"	m	struct:CSDV1
cspinmask	./Robot_Control/Arduino_LCD.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Arduino_LCD
cspinmask	./Robot_Control/Arduino_LCD.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Arduino_LCD
cspinmask	./TFT/utility/Adafruit_ST7735.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Adafruit_ST7735
cspinmask	./TFT/utility/Adafruit_ST7735.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Adafruit_ST7735
csport	./Robot_Control/Arduino_LCD.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Arduino_LCD
csport	./Robot_Control/Arduino_LCD.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Arduino_LCD
csport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint32_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
csport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint32_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
csport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
csport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
_cs	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
_cs	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
_cs	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_cs	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_cs	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_cs	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
curCluster_	./Robot_Control/Fat16.h	/^  fat_t curCluster_;       \/\/ current cluster$/;"	m	class:Fat16
curCluster_	./Robot_Control/Fat16.h	/^  fat_t curCluster_;       \/\/ current cluster$/;"	m	class:Fat16
curCluster	./Robot_Control/Fat16.h	/^  fat_t curCluster(void) const {return curCluster_;}$/;"	f	class:Fat16
curCluster	./Robot_Control/Fat16.h	/^  fat_t curCluster(void) const {return curCluster_;}$/;"	f	class:Fat16
curCluster_	./SD/utility/SdFat.h	/^  uint32_t  curCluster_;    \/\/ cluster for current file position$/;"	m	class:SdFile
curCluster_	./SD/utility/SdFat.h	/^  uint32_t  curCluster_;    \/\/ cluster for current file position$/;"	m	class:SdFile
curCluster	./SD/utility/SdFat.h	/^  uint32_t curCluster(void) const {return curCluster_;}$/;"	f	class:SdFile
curCluster	./SD/utility/SdFat.h	/^  uint32_t curCluster(void) const {return curCluster_;}$/;"	f	class:SdFile
curPosition_	./Robot_Control/Fat16.h	/^  uint32_t curPosition_;   \/\/ current byte offset$/;"	m	class:Fat16
curPosition_	./Robot_Control/Fat16.h	/^  uint32_t curPosition_;   \/\/ current byte offset$/;"	m	class:Fat16
curPosition	./Robot_Control/Fat16.h	/^  uint32_t curPosition(void) const {return curPosition_;}$/;"	f	class:Fat16
curPosition	./Robot_Control/Fat16.h	/^  uint32_t curPosition(void) const {return curPosition_;}$/;"	f	class:Fat16
curPosition_	./SD/utility/SdFat.h	/^  uint32_t  curPosition_;   \/\/ current file position in bytes from beginning$/;"	m	class:SdFile
curPosition_	./SD/utility/SdFat.h	/^  uint32_t  curPosition_;   \/\/ current file position in bytes from beginning$/;"	m	class:SdFile
curPosition	./SD/utility/SdFat.h	/^  uint32_t curPosition(void) const {return curPosition_;}$/;"	f	class:SdFile
curPosition	./SD/utility/SdFat.h	/^  uint32_t curPosition(void) const {return curPosition_;}$/;"	f	class:SdFile
currentAnalogCallback	./Firmata/Firmata.h	/^    callbackFunction currentAnalogCallback;$/;"	m	class:FirmataClass
currentAnalogCallback	./Firmata/Firmata.h	/^    callbackFunction currentAnalogCallback;$/;"	m	class:FirmataClass
currentDigitalCallback	./Firmata/Firmata.h	/^    callbackFunction currentDigitalCallback;$/;"	m	class:FirmataClass
currentDigitalCallback	./Firmata/Firmata.h	/^    callbackFunction currentDigitalCallback;$/;"	m	class:FirmataClass
currentPinModeCallback	./Firmata/Firmata.h	/^    callbackFunction currentPinModeCallback;$/;"	m	class:FirmataClass
currentPinModeCallback	./Firmata/Firmata.h	/^    callbackFunction currentPinModeCallback;$/;"	m	class:FirmataClass
currentReportAnalogCallback	./Firmata/Firmata.h	/^    callbackFunction currentReportAnalogCallback;$/;"	m	class:FirmataClass
currentReportAnalogCallback	./Firmata/Firmata.h	/^    callbackFunction currentReportAnalogCallback;$/;"	m	class:FirmataClass
currentReportDigitalCallback	./Firmata/Firmata.h	/^    callbackFunction currentReportDigitalCallback;$/;"	m	class:FirmataClass
currentReportDigitalCallback	./Firmata/Firmata.h	/^    callbackFunction currentReportDigitalCallback;$/;"	m	class:FirmataClass
currentstep	./AFMotor/AFMotor.h	/^  uint8_t currentstep;$/;"	m	class:AF_Stepper
currentstep	./AFMotor/AFMotor.h	/^  uint8_t currentstep;$/;"	m	class:AF_Stepper
currentStringCallback	./Firmata/Firmata.h	/^    stringCallbackFunction currentStringCallback;$/;"	m	class:FirmataClass
currentStringCallback	./Firmata/Firmata.h	/^    stringCallbackFunction currentStringCallback;$/;"	m	class:FirmataClass
currentSysexCallback	./Firmata/Firmata.h	/^    sysexCallbackFunction currentSysexCallback;$/;"	m	class:FirmataClass
currentSysexCallback	./Firmata/Firmata.h	/^    sysexCallbackFunction currentSysexCallback;$/;"	m	class:FirmataClass
currentSystemResetCallback	./Firmata/Firmata.h	/^    systemResetCallbackFunction currentSystemResetCallback;$/;"	m	class:FirmataClass
currentSystemResetCallback	./Firmata/Firmata.h	/^    systemResetCallbackFunction currentSystemResetCallback;$/;"	m	class:FirmataClass
_currline	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _numlines,_currline;$/;"	m	class:LiquidCrystal
_currline	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _numlines,_currline;$/;"	m	class:LiquidCrystal
curSentenceType	./TinyGPSPlus/TinyGPS++.h	/^  uint8_t curSentenceType;$/;"	m	class:TinyGPSPlus
curSentenceType	./TinyGPSPlus/TinyGPS++.h	/^  uint8_t curSentenceType;$/;"	m	class:TinyGPSPlus
cursor	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::cursor() {$/;"	f	class:LiquidCrystal
cursor	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::cursor() {$/;"	f	class:LiquidCrystal
cursor_x	./Robot_Control/Adafruit_GFX.h	/^  int16_t  cursor_x, cursor_y;$/;"	m	class:Adafruit_GFX
cursor_x	./Robot_Control/Adafruit_GFX.h	/^  int16_t  cursor_x, cursor_y;$/;"	m	class:Adafruit_GFX
cursor_x	./TFT/utility/Adafruit_GFX.h	/^  int16_t  cursor_x, cursor_y;$/;"	m	class:Adafruit_GFX
cursor_x	./TFT/utility/Adafruit_GFX.h	/^  int16_t  cursor_x, cursor_y;$/;"	m	class:Adafruit_GFX
cursor_y	./Robot_Control/Adafruit_GFX.h	/^  int16_t  cursor_x, cursor_y;$/;"	m	class:Adafruit_GFX
cursor_y	./Robot_Control/Adafruit_GFX.h	/^  int16_t  cursor_x, cursor_y;$/;"	m	class:Adafruit_GFX
cursor_y	./TFT/utility/Adafruit_GFX.h	/^  int16_t  cursor_x, cursor_y;$/;"	m	class:Adafruit_GFX
cursor_y	./TFT/utility/Adafruit_GFX.h	/^  int16_t  cursor_x, cursor_y;$/;"	m	class:Adafruit_GFX
curTermNumber	./TinyGPSPlus/TinyGPS++.h	/^  uint8_t curTermNumber;$/;"	m	class:TinyGPSPlus
curTermNumber	./TinyGPSPlus/TinyGPS++.h	/^  uint8_t curTermNumber;$/;"	m	class:TinyGPSPlus
curTermOffset	./TinyGPSPlus/TinyGPS++.h	/^  uint8_t curTermOffset;$/;"	m	class:TinyGPSPlus
curTermOffset	./TinyGPSPlus/TinyGPS++.h	/^  uint8_t curTermOffset;$/;"	m	class:TinyGPSPlus
customCandidates	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSCustom *customCandidates;$/;"	m	class:TinyGPSPlus
customCandidates	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSCustom *customCandidates;$/;"	m	class:TinyGPSPlus
customElts	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSCustom *customElts;$/;"	m	class:TinyGPSPlus
customElts	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSCustom *customElts;$/;"	m	class:TinyGPSPlus
CYAN	./Robot_Control/ArduinoRobot.h	120;"	d
CYAN	./Robot_Control/ArduinoRobot.h	120;"	d
dataBlockLba	./Robot_Control/Fat16.h	/^  static uint32_t dataBlockLba(fat_t cluster, uint8_t blockOfCluster) {$/;"	f	class:Fat16
dataBlockLba	./Robot_Control/Fat16.h	/^  static uint32_t dataBlockLba(fat_t cluster, uint8_t blockOfCluster) {$/;"	f	class:Fat16
DATA_FLAG	./WiFi/utility/wifi_spi.h	8;"	d
DATA_FLAG	./WiFi/utility/wifi_spi.h	8;"	d
_dataInBufferFrom	./GSM/GSM3ShieldV1ModemCore.h	/^		byte _dataInBufferFrom;$/;"	m	class:GSM3ShieldV1ModemCore
_dataInBufferFrom	./GSM/GSM3ShieldV1ModemCore.h	/^		byte _dataInBufferFrom;$/;"	m	class:GSM3ShieldV1ModemCore
_dataInBufferTo	./GSM/GSM3ShieldV1ModemCore.h	/^		byte _dataInBufferTo;$/;"	m	class:GSM3ShieldV1ModemCore
_dataInBufferTo	./GSM/GSM3ShieldV1ModemCore.h	/^		byte _dataInBufferTo;$/;"	m	class:GSM3ShieldV1ModemCore
DATAIN	./WiFi/utility/spi_drv.cpp	11;"	d	file:
DATAIN	./WiFi/utility/spi_drv.cpp	11;"	d	file:
dataLen	./WiFi/utility/wifi_spi.h	/^	uint16_t     dataLen;$/;"	m	struct:__anon6
dataLen	./WiFi/utility/wifi_spi.h	/^	uint16_t     dataLen;$/;"	m	struct:__anon6
DATAOUT	./WiFi/utility/spi_drv.cpp	10;"	d	file:
DATAOUT	./WiFi/utility/spi_drv.cpp	10;"	d	file:
datapinmask	./Robot_Control/Arduino_LCD.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Arduino_LCD
datapinmask	./Robot_Control/Arduino_LCD.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Arduino_LCD
datapinmask	./TFT/utility/Adafruit_ST7735.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Adafruit_ST7735
datapinmask	./TFT/utility/Adafruit_ST7735.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Adafruit_ST7735
_data_pins	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _data_pins[8];$/;"	m	class:LiquidCrystal
_data_pins	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _data_pins[8];$/;"	m	class:LiquidCrystal
dataport	./Robot_Control/Arduino_LCD.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Arduino_LCD
dataport	./Robot_Control/Arduino_LCD.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Arduino_LCD
dataport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint32_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
dataport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint32_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
dataport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
dataport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
DATA_RES_ACCEPTED	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_RES_ACCEPTED    = 0X05;$/;"	v
DATA_RES_ACCEPTED	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_RES_ACCEPTED    = 0X05;$/;"	v
DATA_RES_ACCEPTED	./SD/utility/SdInfo.h	/^uint8_t const DATA_RES_ACCEPTED = 0X05;$/;"	v
DATA_RES_ACCEPTED	./SD/utility/SdInfo.h	/^uint8_t const DATA_RES_ACCEPTED = 0X05;$/;"	v
DATA_RES_CRC_ERROR	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_RES_CRC_ERROR   = 0X0B;$/;"	v
DATA_RES_CRC_ERROR	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_RES_CRC_ERROR   = 0X0B;$/;"	v
DATA_RES_MASK	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_RES_MASK        = 0X1F;$/;"	v
DATA_RES_MASK	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_RES_MASK        = 0X1F;$/;"	v
DATA_RES_MASK	./SD/utility/SdInfo.h	/^uint8_t const DATA_RES_MASK = 0X1F;$/;"	v
DATA_RES_MASK	./SD/utility/SdInfo.h	/^uint8_t const DATA_RES_MASK = 0X1F;$/;"	v
DATA_RES_WRITE_ERROR	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_RES_WRITE_ERROR = 0X0D;$/;"	v
DATA_RES_WRITE_ERROR	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_RES_WRITE_ERROR = 0X0D;$/;"	v
data	./Robot_Control/EasyTransfer2.h	/^uint8_t data[20];	\/\/data storage, for both read and send$/;"	m	class:EasyTransfer2
data	./Robot_Control/EasyTransfer2.h	/^uint8_t data[20];	\/\/data storage, for both read and send$/;"	m	class:EasyTransfer2
data	./Robot_Control/Fat16.h	/^  uint8_t data[512];$/;"	m	union:cache16_t
data	./Robot_Control/Fat16.h	/^  uint8_t data[512];$/;"	m	union:cache16_t
data	./Robot_Motor/EasyTransfer2.h	/^uint8_t data[20];	\/\/data storage, for both read and send$/;"	m	class:EasyTransfer2
data	./Robot_Motor/EasyTransfer2.h	/^uint8_t data[20];	\/\/data storage, for both read and send$/;"	m	class:EasyTransfer2
data	./SD/utility/SdFat.h	/^  uint8_t  data[512];$/;"	m	union:cache_t
data	./SD/utility/SdFat.h	/^  uint8_t  data[512];$/;"	m	union:cache_t
DATA_SENT_TCP_CMD	./WiFi/utility/wifi_spi.h	/^	DATA_SENT_TCP_CMD	= 0x2A,$/;"	e	enum:__anon4
DATA_SENT_TCP_CMD	./WiFi/utility/wifi_spi.h	/^	DATA_SENT_TCP_CMD	= 0x2A,$/;"	e	enum:__anon4
dataSocket	./GSM/GSM3ShieldV1.h	/^		char* dataSocket;			\/\/Data socket.$/;"	m	class:GSM3ShieldV1
dataSocket	./GSM/GSM3ShieldV1.h	/^		char* dataSocket;			\/\/Data socket.$/;"	m	class:GSM3ShieldV1
dataStartBlock_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::dataStartBlock_;         \/\/ start of data clusters$/;"	m	class:Fat16	file:
dataStartBlock_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::dataStartBlock_;         \/\/ start of data clusters$/;"	m	class:Fat16	file:
dataStartBlock_	./Robot_Control/Fat16.h	/^  static uint32_t dataStartBlock_;     \/\/ start of data clusters$/;"	m	class:Fat16
dataStartBlock_	./Robot_Control/Fat16.h	/^  static uint32_t dataStartBlock_;     \/\/ start of data clusters$/;"	m	class:Fat16
DATA_START_BLOCK	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_START_BLOCK = 0XFE;$/;"	v
DATA_START_BLOCK	./Robot_Control/SdCard.cpp	/^uint8_t const DATA_START_BLOCK = 0XFE;$/;"	v
dataStartBlock_	./SD/utility/SdFat.h	/^  uint32_t dataStartBlock_;     \/\/ first data block number$/;"	m	class:SdVolume
dataStartBlock_	./SD/utility/SdFat.h	/^  uint32_t dataStartBlock_;     \/\/ first data block number$/;"	m	class:SdVolume
dataStartBlock	./SD/utility/SdFat.h	/^  uint32_t dataStartBlock(void) const {return dataStartBlock_;}$/;"	f	class:SdVolume
dataStartBlock	./SD/utility/SdFat.h	/^  uint32_t dataStartBlock(void) const {return dataStartBlock_;}$/;"	f	class:SdVolume
DATA_START_BLOCK	./SD/utility/SdInfo.h	/^uint8_t const DATA_START_BLOCK = 0XFE;$/;"	v
DATA_START_BLOCK	./SD/utility/SdInfo.h	/^uint8_t const DATA_START_BLOCK = 0XFE;$/;"	v
data	./WiFi/utility/wifi_spi.h	/^	char*	     data;$/;"	m	struct:__anon6
data	./WiFi/utility/wifi_spi.h	/^	char*	     data;$/;"	m	struct:__anon6
dateTimeCallbackCancel	./Robot_Control/Fat16.h	/^  static void dateTimeCallbackCancel(void) {dateTime_ = NULL;}$/;"	f	class:Fat16
dateTimeCallbackCancel	./Robot_Control/Fat16.h	/^  static void dateTimeCallbackCancel(void) {dateTime_ = NULL;}$/;"	f	class:Fat16
dateTimeCallbackCancel	./SD/utility/SdFat.h	/^  static void dateTimeCallbackCancel(void) {$/;"	f	class:SdFile
dateTimeCallbackCancel	./SD/utility/SdFat.h	/^  static void dateTimeCallbackCancel(void) {$/;"	f	class:SdFile
dateTimeCallback	./Robot_Control/Fat16.h	/^  static void dateTimeCallback($/;"	f	class:Fat16
dateTimeCallback	./Robot_Control/Fat16.h	/^  static void dateTimeCallback($/;"	f	class:Fat16
dateTimeCallback	./SD/utility/SdFat.h	/^  static void dateTimeCallback($/;"	f	class:SdFile
dateTimeCallback	./SD/utility/SdFat.h	/^  static void dateTimeCallback($/;"	f	class:SdFile
dateTime_	./Robot_Control/Fat16.cpp	/^void (*Fat16::dateTime_)(uint16_t* date, uint16_t* time) = NULL;$/;"	v
dateTime_	./Robot_Control/Fat16.cpp	/^void (*Fat16::dateTime_)(uint16_t* date, uint16_t* time) = NULL;$/;"	v
dateTime_	./Robot_Control/Fat16.h	/^  static void (*dateTime_)(uint16_t* date, uint16_t* time);$/;"	m	class:Fat16
dateTime_	./Robot_Control/Fat16.h	/^  static void (*dateTime_)(uint16_t* date, uint16_t* time);$/;"	m	class:Fat16
dateTime_	./SD/utility/SdFat.h	/^  static void (*dateTime_)(uint16_t* date, uint16_t* time);$/;"	m	class:SdFile
dateTime_	./SD/utility/SdFat.h	/^  static void (*dateTime_)(uint16_t* date, uint16_t* time);$/;"	m	class:SdFile
dateTime_	./SD/utility/SdFile.cpp	/^void (*SdFile::dateTime_)(uint16_t* date, uint16_t* time) = NULL;$/;"	v
dateTime_	./SD/utility/SdFile.cpp	/^void (*SdFile::dateTime_)(uint16_t* date, uint16_t* time) = NULL;$/;"	v
date	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSDate date;$/;"	m	class:TinyGPSPlus
date	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSDate date;$/;"	m	class:TinyGPSPlus
date	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t date, newDate;$/;"	m	struct:TinyGPSDate
date	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t date, newDate;$/;"	m	struct:TinyGPSDate
_date	./TinyGPS/TinyGPS.h	/^  unsigned long _date, _new_date;$/;"	m	class:TinyGPS
_date	./TinyGPS/TinyGPS.h	/^  unsigned long _date, _new_date;$/;"	m	class:TinyGPS
day	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSDate::day()$/;"	f	class:TinyGPSDate
day	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSDate::day()$/;"	f	class:TinyGPSDate
dbgBufAdd	./Robot_Control/Fat16.h	/^  static cache16_t* dbgBufAdd(void) {return &cacheBuffer_;}$/;"	f	class:Fat16
dbgBufAdd	./Robot_Control/Fat16.h	/^  static cache16_t* dbgBufAdd(void) {return &cacheBuffer_;}$/;"	f	class:Fat16
dbgCacheBlock	./Robot_Control/Fat16.h	/^  static uint8_t* dbgCacheBlock(uint32_t blockNumber) {$/;"	f	class:Fat16
dbgCacheBlock	./Robot_Control/Fat16.h	/^  static uint8_t* dbgCacheBlock(uint32_t blockNumber) {$/;"	f	class:Fat16
dbgCacheDir	./Robot_Control/Fat16.h	/^  static dir_t* dbgCacheDir(uint16_t index) {$/;"	f	class:Fat16
dbgCacheDir	./Robot_Control/Fat16.h	/^  static dir_t* dbgCacheDir(uint16_t index) {$/;"	f	class:Fat16
DBG_PIN2	./WiFi/utility/debug.h	54;"	d
DBG_PIN2	./WiFi/utility/debug.h	54;"	d
DBG_PIN	./WiFi/utility/debug.h	55;"	d
DBG_PIN	./WiFi/utility/debug.h	55;"	d
dbgSetDev	./Robot_Control/Fat16.h	/^  static void dbgSetDev(SdCard* dev) {rawDev_ = dev;}$/;"	f	class:Fat16
dbgSetDev	./Robot_Control/Fat16.h	/^  static void dbgSetDev(SdCard* dev) {rawDev_ = dev;}$/;"	f	class:Fat16
DC_MOTOR_PWM_RATE	./AFMotor/AFMotor.h	52;"	d
DC_MOTOR_PWM_RATE	./AFMotor/AFMotor.h	52;"	d
DC_MOTOR_PWM_RATE	./AFMotor/AFMotor.h	89;"	d
DC_MOTOR_PWM_RATE	./AFMotor/AFMotor.h	89;"	d
DCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
DCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
ddr	./SD/utility/Sd2PinMap.h	/^  volatile uint8_t* ddr;$/;"	m	struct:pin_map_t
ddr	./SD/utility/Sd2PinMap.h	/^  volatile uint8_t* ddr;$/;"	m	struct:pin_map_t
debugBuffer	./GSM/GSM3CircularBuffer.cpp	/^void GSM3CircularBuffer::debugBuffer()$/;"	f	class:GSM3CircularBuffer
debugBuffer	./GSM/GSM3CircularBuffer.cpp	/^void GSM3CircularBuffer::debugBuffer()$/;"	f	class:GSM3CircularBuffer
_debug	./GSM/GSM3ShieldV1ModemCore.h	/^		bool _debug;$/;"	m	class:GSM3ShieldV1ModemCore
_debug	./GSM/GSM3ShieldV1ModemCore.h	/^		bool _debug;$/;"	m	class:GSM3ShieldV1ModemCore
Debug_H	./WiFi/utility/debug.h	11;"	d
Debug_H	./WiFi/utility/debug.h	11;"	d
DEBUG_LED	./GSM_Shield/GSM_Shield.cpp	/^  int DEBUG_LED = 25;                \/\/ LED connected to digital pin 25$/;"	v
DEBUG_LED	./GSM_Shield/GSM_Shield.cpp	/^  int DEBUG_LED = 25;                \/\/ LED connected to digital pin 25$/;"	v
_DEBUG_PIN1	./SoftwareSerial/SoftwareSerial.cpp	36;"	d	file:
_DEBUG_PIN1	./SoftwareSerial/SoftwareSerial.cpp	36;"	d	file:
_DEBUG_PIN2	./SoftwareSerial/SoftwareSerial.cpp	37;"	d	file:
_DEBUG_PIN2	./SoftwareSerial/SoftwareSerial.cpp	37;"	d	file:
DebugPrint	./GSM_Shield/GSM_Shield.cpp	/^void GSM::DebugPrint(const char *string_to_print, byte last_debug_print)$/;"	f	class:GSM
DebugPrint	./GSM_Shield/GSM_Shield.cpp	/^void GSM::DebugPrint(const char *string_to_print, byte last_debug_print)$/;"	f	class:GSM
DebugPrint	./GSM_Shield/GSM_Shield.cpp	/^void GSM::DebugPrint(int number_to_print, byte last_debug_print)$/;"	f	class:GSM
DebugPrint	./GSM_Shield/GSM_Shield.cpp	/^void GSM::DebugPrint(int number_to_print, byte last_debug_print)$/;"	f	class:GSM
debugPrint	./Robot_Control/lcd.cpp	/^void RobotControl::debugPrint(long value, uint8_t x, uint8_t y){$/;"	f	class:RobotControl
debugPrint	./Robot_Control/lcd.cpp	/^void RobotControl::debugPrint(long value, uint8_t x, uint8_t y){$/;"	f	class:RobotControl
DebugPulse	./SoftwareSerial/SoftwareSerial.cpp	/^inline void DebugPulse(uint8_t pin, uint8_t count)$/;"	f
DebugPulse	./SoftwareSerial/SoftwareSerial.cpp	/^inline void DebugPulse(uint8_t pin, uint8_t count)$/;"	f
_DEBUG	./SoftwareSerial/SoftwareSerial.cpp	35;"	d	file:
_DEBUG	./SoftwareSerial/SoftwareSerial.cpp	35;"	d	file:
_DEBUG_	./WiFi/utility/wifi_drv.cpp	9;"	d	file:
_DEBUG_	./WiFi/utility/wifi_drv.cpp	9;"	d	file:
decrunch_row	./Robot_Control/Squawk.cpp	/^static void decrunch_row() {$/;"	f	file:
decrunch_row	./Robot_Control/Squawk.cpp	/^static void decrunch_row() {$/;"	f	file:
DecSpeakerVolume	./GSM_Shield/GSM_Shield.cpp	/^char GSM::DecSpeakerVolume(void)$/;"	f	class:GSM
DecSpeakerVolume	./GSM_Shield/GSM_Shield.cpp	/^char GSM::DecSpeakerVolume(void)$/;"	f	class:GSM
DEFAULT_LEASE	./Ethernet/Dhcp.h	48;"	d
DEFAULT_LEASE	./Ethernet/Dhcp.h	48;"	d
DEFAULT_PULSE_WIDTH	./Servo/Servo.h	90;"	d
DEFAULT_PULSE_WIDTH	./Servo/Servo.h	90;"	d
DEGREES_C	./Esplora/Esplora.h	/^const byte DEGREES_C = 0;$/;"	v
DEGREES_C	./Esplora/Esplora.h	/^const byte DEGREES_C = 0;$/;"	v
DEGREES_F	./Esplora/Esplora.h	/^const byte DEGREES_F = 1;$/;"	v
DEGREES_F	./Esplora/Esplora.h	/^const byte DEGREES_F = 1;$/;"	v
deg	./TinyGPSPlus/TinyGPS++.h	/^   double deg()      { return value() \/ 100.0; }$/;"	f	struct:TinyGPSCourse
deg	./TinyGPSPlus/TinyGPS++.h	/^   double deg()      { return value() \/ 100.0; }$/;"	f	struct:TinyGPSCourse
deg	./TinyGPSPlus/TinyGPS++.h	/^   uint16_t deg;$/;"	m	struct:RawDegrees
deg	./TinyGPSPlus/TinyGPS++.h	/^   uint16_t deg;$/;"	m	struct:RawDegrees
DELAY_100NS	./WiFi/utility/spi_drv.cpp	17;"	d	file:
DELAY_100NS	./WiFi/utility/spi_drv.cpp	17;"	d	file:
delayInsideInterrupt2seg	./GSM/GSM3ShieldV1.cpp	/^void GSM3ShieldV1::delayInsideInterrupt2seg()$/;"	f	class:GSM3ShieldV1
delayInsideInterrupt2seg	./GSM/GSM3ShieldV1.cpp	/^void GSM3ShieldV1::delayInsideInterrupt2seg()$/;"	f	class:GSM3ShieldV1
delayInsideInterrupt	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::delayInsideInterrupt(unsigned long milliseconds)$/;"	f	class:GSM3ShieldV1ModemCore
delayInsideInterrupt	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::delayInsideInterrupt(unsigned long milliseconds)$/;"	f	class:GSM3ShieldV1ModemCore
DELAY	./Robot_Control/Arduino_LCD.cpp	104;"	d	file:
DELAY	./Robot_Control/Arduino_LCD.cpp	104;"	d	file:
DELAY_SPI	./WiFi/utility/spi_drv.cpp	18;"	d	file:
DELAY_SPI	./WiFi/utility/spi_drv.cpp	18;"	d	file:
delaySpi	./WiFi/utility/spi_drv.cpp	/^void delaySpi()$/;"	f
delaySpi	./WiFi/utility/spi_drv.cpp	/^void delaySpi()$/;"	f
DELAY_TABLE	./GSM/GSM3SoftSerial.cpp	/^} DELAY_TABLE;$/;"	t	typeref:struct:_DELAY_TABLE	file:
DELAY_TABLE	./GSM/GSM3SoftSerial.cpp	/^} DELAY_TABLE;$/;"	t	typeref:struct:_DELAY_TABLE	file:
_DELAY_TABLE	./GSM/GSM3SoftSerial.cpp	/^typedef struct _DELAY_TABLE$/;"	s	file:
_DELAY_TABLE	./GSM/GSM3SoftSerial.cpp	/^typedef struct _DELAY_TABLE$/;"	s	file:
DELAY_TABLE	./SoftwareSerial/SoftwareSerial.cpp	/^} DELAY_TABLE;$/;"	t	typeref:struct:_DELAY_TABLE	file:
DELAY_TABLE	./SoftwareSerial/SoftwareSerial.cpp	/^} DELAY_TABLE;$/;"	t	typeref:struct:_DELAY_TABLE	file:
_DELAY_TABLE	./SoftwareSerial/SoftwareSerial.cpp	/^typedef struct _DELAY_TABLE$/;"	s	file:
_DELAY_TABLE	./SoftwareSerial/SoftwareSerial.cpp	/^typedef struct _DELAY_TABLE$/;"	s	file:
DELAY	./TFT/utility/Adafruit_ST7735.cpp	99;"	d	file:
DELAY	./TFT/utility/Adafruit_ST7735.cpp	99;"	d	file:
DELAY_TRANSFER	./WiFi/utility/spi_drv.cpp	19;"	d	file:
DELAY_TRANSFER	./WiFi/utility/spi_drv.cpp	19;"	d	file:
DeleteSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::DeleteSMS(byte position) $/;"	f	class:GSM
DeleteSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::DeleteSMS(byte position) $/;"	f	class:GSM
deleteToTheEnd	./GSM/GSM3CircularBuffer.h	/^		inline void deleteToTheEnd(byte from){tail=from;};$/;"	f	class:GSM3CircularBuffer
deleteToTheEnd	./GSM/GSM3CircularBuffer.h	/^		inline void deleteToTheEnd(byte from){tail=from;};$/;"	f	class:GSM3CircularBuffer
DelPhoneNumber	./GSM_Shield/GSM_Shield.cpp	/^char GSM::DelPhoneNumber(byte position)$/;"	f	class:GSM
DelPhoneNumber	./GSM_Shield/GSM_Shield.cpp	/^char GSM::DelPhoneNumber(byte position)$/;"	f	class:GSM
detach	./Firmata/Firmata.cpp	/^void FirmataClass::detach(byte command)$/;"	f	class:FirmataClass
detach	./Firmata/Firmata.cpp	/^void FirmataClass::detach(byte command)$/;"	f	class:FirmataClass
detachGPRSContinue	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^void GSM3ShieldV1DataNetworkProvider::detachGPRSContinue()$/;"	f	class:GSM3ShieldV1DataNetworkProvider
detachGPRSContinue	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^void GSM3ShieldV1DataNetworkProvider::detachGPRSContinue()$/;"	f	class:GSM3ShieldV1DataNetworkProvider
DETACHGPRS	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
DETACHGPRS	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
detachGPRS	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1DataNetworkProvider::detachGPRS(bool synchronous)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
detachGPRS	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^GSM3_NetworkStatus_t GSM3ShieldV1DataNetworkProvider::detachGPRS(bool synchronous)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
detachInterrupt	./Robot_Control/SPI.h	/^void SPIClass::detachInterrupt() {$/;"	f	class:SPIClass
detachInterrupt	./Robot_Control/SPI.h	/^void SPIClass::detachInterrupt() {$/;"	f	class:SPIClass
detachInterrupt	./SPI/SPI.h	/^void SPIClass::detachInterrupt() {$/;"	f	class:SPIClass
detachInterrupt	./SPI/SPI.h	/^void SPIClass::detachInterrupt() {$/;"	f	class:SPIClass
detach	./Servo/Servo.cpp	/^void Servo::detach()  $/;"	f	class:Servo
detach	./Servo/Servo.cpp	/^void Servo::detach()  $/;"	f	class:Servo
detach	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::detach()$/;"	f	class:SoftwareServo
detach	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::detach()$/;"	f	class:SoftwareServo
details	./Robot_Control/EasyTransfer2.h	29;"	d
details	./Robot_Control/EasyTransfer2.h	29;"	d
details	./Robot_Motor/EasyTransfer2.h	29;"	d
details	./Robot_Motor/EasyTransfer2.h	29;"	d
DEVICEADDRESS	./Robot_Control/EEPROM_I2C.h	11;"	d
DEVICEADDRESS	./Robot_Control/EEPROM_I2C.h	11;"	d
DHCP_ACK	./Ethernet/Dhcp.h	32;"	d
DHCP_ACK	./Ethernet/Dhcp.h	32;"	d
DHCP_BOOTREPLY	./Ethernet/Dhcp.h	25;"	d
DHCP_BOOTREPLY	./Ethernet/Dhcp.h	25;"	d
DHCP_BOOTREQUEST	./Ethernet/Dhcp.h	24;"	d
DHCP_BOOTREQUEST	./Ethernet/Dhcp.h	24;"	d
DHCP_CHECK_NONE	./Ethernet/Dhcp.h	50;"	d
DHCP_CHECK_NONE	./Ethernet/Dhcp.h	50;"	d
DHCP_CHECK_REBIND_FAIL	./Ethernet/Dhcp.h	53;"	d
DHCP_CHECK_REBIND_FAIL	./Ethernet/Dhcp.h	53;"	d
DHCP_CHECK_REBIND_OK	./Ethernet/Dhcp.h	54;"	d
DHCP_CHECK_REBIND_OK	./Ethernet/Dhcp.h	54;"	d
DHCP_CHECK_RENEW_FAIL	./Ethernet/Dhcp.h	51;"	d
DHCP_CHECK_RENEW_FAIL	./Ethernet/Dhcp.h	51;"	d
DHCP_CHECK_RENEW_OK	./Ethernet/Dhcp.h	52;"	d
DHCP_CHECK_RENEW_OK	./Ethernet/Dhcp.h	52;"	d
DhcpClass	./Ethernet/Dhcp.h	/^class DhcpClass {$/;"	c
DhcpClass	./Ethernet/Dhcp.h	/^class DhcpClass {$/;"	c
dhcpClientIdentifier	./Ethernet/Dhcp.h	/^	dhcpClientIdentifier	=	61,$/;"	e	enum:__anon14
dhcpClientIdentifier	./Ethernet/Dhcp.h	/^	dhcpClientIdentifier	=	61,$/;"	e	enum:__anon14
DHCP_CLIENT_PORT	./Ethernet/Dhcp.h	21;"	d
DHCP_CLIENT_PORT	./Ethernet/Dhcp.h	21;"	d
DHCP_DECLINE	./Ethernet/Dhcp.h	31;"	d
DHCP_DECLINE	./Ethernet/Dhcp.h	31;"	d
_dhcpDhcpServerIp	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpDhcpServerIp[4];$/;"	m	class:DhcpClass
_dhcpDhcpServerIp	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpDhcpServerIp[4];$/;"	m	class:DhcpClass
DHCP_DISCOVER	./Ethernet/Dhcp.h	28;"	d
DHCP_DISCOVER	./Ethernet/Dhcp.h	28;"	d
_dhcpDnsServerIp	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpDnsServerIp[4];$/;"	m	class:DhcpClass
_dhcpDnsServerIp	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpDnsServerIp[4];$/;"	m	class:DhcpClass
_dhcp	./Ethernet/Ethernet.h	/^  DhcpClass* _dhcp;$/;"	m	class:EthernetClass
_dhcp	./Ethernet/Ethernet.h	/^  DhcpClass* _dhcp;$/;"	m	class:EthernetClass
DHCP_FLAGSBROADCAST	./Ethernet/Dhcp.h	17;"	d
DHCP_FLAGSBROADCAST	./Ethernet/Dhcp.h	17;"	d
_dhcpGatewayIp	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpGatewayIp[4];$/;"	m	class:DhcpClass
_dhcpGatewayIp	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpGatewayIp[4];$/;"	m	class:DhcpClass
Dhcp_h	./Ethernet/Dhcp.h	5;"	d
Dhcp_h	./Ethernet/Dhcp.h	5;"	d
DHCP_HLENETHERNET	./Ethernet/Dhcp.h	40;"	d
DHCP_HLENETHERNET	./Ethernet/Dhcp.h	40;"	d
DHCP_HOPS	./Ethernet/Dhcp.h	41;"	d
DHCP_HOPS	./Ethernet/Dhcp.h	41;"	d
DHCP_HTYPE100MB	./Ethernet/Dhcp.h	38;"	d
DHCP_HTYPE100MB	./Ethernet/Dhcp.h	38;"	d
DHCP_HTYPE10MB	./Ethernet/Dhcp.h	37;"	d
DHCP_HTYPE10MB	./Ethernet/Dhcp.h	37;"	d
DHCP_INFORM	./Ethernet/Dhcp.h	35;"	d
DHCP_INFORM	./Ethernet/Dhcp.h	35;"	d
_dhcpInitialTransactionId	./Ethernet/Dhcp.h	/^  uint32_t _dhcpInitialTransactionId;$/;"	m	class:DhcpClass
_dhcpInitialTransactionId	./Ethernet/Dhcp.h	/^  uint32_t _dhcpInitialTransactionId;$/;"	m	class:DhcpClass
dhcpIPaddrLeaseTime	./Ethernet/Dhcp.h	/^	dhcpIPaddrLeaseTime	=	51,$/;"	e	enum:__anon14
dhcpIPaddrLeaseTime	./Ethernet/Dhcp.h	/^	dhcpIPaddrLeaseTime	=	51,$/;"	e	enum:__anon14
_dhcpLeaseTime	./Ethernet/Dhcp.h	/^  uint32_t _dhcpLeaseTime;$/;"	m	class:DhcpClass
_dhcpLeaseTime	./Ethernet/Dhcp.h	/^  uint32_t _dhcpLeaseTime;$/;"	m	class:DhcpClass
_dhcpLocalIp	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpLocalIp[4];$/;"	m	class:DhcpClass
_dhcpLocalIp	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpLocalIp[4];$/;"	m	class:DhcpClass
_dhcpMacAddr	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpMacAddr[6];$/;"	m	class:DhcpClass
_dhcpMacAddr	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpMacAddr[6];$/;"	m	class:DhcpClass
dhcpMessageType	./Ethernet/Dhcp.h	/^	dhcpMessageType		=	53,$/;"	e	enum:__anon14
dhcpMessageType	./Ethernet/Dhcp.h	/^	dhcpMessageType		=	53,$/;"	e	enum:__anon14
DHCP_NAK	./Ethernet/Dhcp.h	33;"	d
DHCP_NAK	./Ethernet/Dhcp.h	33;"	d
DHCP_OFFER	./Ethernet/Dhcp.h	29;"	d
DHCP_OFFER	./Ethernet/Dhcp.h	29;"	d
dhcpParamRequest	./Ethernet/Dhcp.h	/^	dhcpParamRequest	=	55,$/;"	e	enum:__anon14
dhcpParamRequest	./Ethernet/Dhcp.h	/^	dhcpParamRequest	=	55,$/;"	e	enum:__anon14
DHCP_RELEASE	./Ethernet/Dhcp.h	34;"	d
DHCP_RELEASE	./Ethernet/Dhcp.h	34;"	d
dhcpRequestedIPaddr	./Ethernet/Dhcp.h	/^	dhcpRequestedIPaddr	=	50,$/;"	e	enum:__anon14
dhcpRequestedIPaddr	./Ethernet/Dhcp.h	/^	dhcpRequestedIPaddr	=	50,$/;"	e	enum:__anon14
DHCP_REQUEST	./Ethernet/Dhcp.h	30;"	d
DHCP_REQUEST	./Ethernet/Dhcp.h	30;"	d
DHCP_SECS	./Ethernet/Dhcp.h	42;"	d
DHCP_SECS	./Ethernet/Dhcp.h	42;"	d
dhcpServerIdentifier	./Ethernet/Dhcp.h	/^	dhcpServerIdentifier	=	54,$/;"	e	enum:__anon14
dhcpServerIdentifier	./Ethernet/Dhcp.h	/^	dhcpServerIdentifier	=	54,$/;"	e	enum:__anon14
DHCP_SERVER_PORT	./Ethernet/Dhcp.h	20;"	d
DHCP_SERVER_PORT	./Ethernet/Dhcp.h	20;"	d
_dhcp_state	./Ethernet/Dhcp.h	/^  uint8_t _dhcp_state;$/;"	m	class:DhcpClass
_dhcp_state	./Ethernet/Dhcp.h	/^  uint8_t _dhcp_state;$/;"	m	class:DhcpClass
_dhcpSubnetMask	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpSubnetMask[4];$/;"	m	class:DhcpClass
_dhcpSubnetMask	./Ethernet/Dhcp.h	/^  uint8_t  _dhcpSubnetMask[4];$/;"	m	class:DhcpClass
_dhcpT1	./Ethernet/Dhcp.h	/^  uint32_t _dhcpT1, _dhcpT2;$/;"	m	class:DhcpClass
_dhcpT1	./Ethernet/Dhcp.h	/^  uint32_t _dhcpT1, _dhcpT2;$/;"	m	class:DhcpClass
dhcpT1value	./Ethernet/Dhcp.h	/^	dhcpT1value		=	58,$/;"	e	enum:__anon14
dhcpT1value	./Ethernet/Dhcp.h	/^	dhcpT1value		=	58,$/;"	e	enum:__anon14
_dhcpT2	./Ethernet/Dhcp.h	/^  uint32_t _dhcpT1, _dhcpT2;$/;"	m	class:DhcpClass
_dhcpT2	./Ethernet/Dhcp.h	/^  uint32_t _dhcpT1, _dhcpT2;$/;"	m	class:DhcpClass
dhcpT2value	./Ethernet/Dhcp.h	/^	dhcpT2value		=	59,$/;"	e	enum:__anon14
dhcpT2value	./Ethernet/Dhcp.h	/^	dhcpT2value		=	59,$/;"	e	enum:__anon14
_dhcpTransactionId	./Ethernet/Dhcp.h	/^  uint32_t _dhcpTransactionId;$/;"	m	class:DhcpClass
_dhcpTransactionId	./Ethernet/Dhcp.h	/^  uint32_t _dhcpTransactionId;$/;"	m	class:DhcpClass
_dhcpUdpSocket	./Ethernet/Dhcp.h	/^  EthernetUDP _dhcpUdpSocket;$/;"	m	class:DhcpClass
_dhcpUdpSocket	./Ethernet/Dhcp.h	/^  EthernetUDP _dhcpUdpSocket;$/;"	m	class:DhcpClass
DIGITAL_MESSAGE	./Firmata/Firmata.h	29;"	d
DIGITAL_MESSAGE	./Firmata/Firmata.h	29;"	d
digitalPinCount	./SD/utility/Sd2PinMap.h	/^static const uint8_t digitalPinCount = sizeof(digitalPinMap)\/sizeof(pin_map_t);$/;"	v
digitalPinCount	./SD/utility/Sd2PinMap.h	/^static const uint8_t digitalPinCount = sizeof(digitalPinMap)\/sizeof(pin_map_t);$/;"	v
digitalPinHasPWM	./Firmata/Boards.h	128;"	d
digitalPinHasPWM	./Firmata/Boards.h	128;"	d
digitalPinMap	./SD/utility/Sd2PinMap.h	/^static const pin_map_t digitalPinMap[] = {$/;"	v
digitalPinMap	./SD/utility/Sd2PinMap.h	/^static const pin_map_t digitalPinMap[] = {$/;"	v
digitalRead	./Robot_Control/Sensors.cpp	/^bool RobotControl::digitalRead(uint8_t port){$/;"	f	class:RobotControl
digitalRead	./Robot_Control/Sensors.cpp	/^bool RobotControl::digitalRead(uint8_t port){$/;"	f	class:RobotControl
_digitalRead	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_digitalRead(uint8_t codename){$/;"	f	class:RobotMotorBoard
_digitalRead	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_digitalRead(uint8_t codename){$/;"	f	class:RobotMotorBoard
_digitalReadTopMux	./Robot_Control/Sensors.cpp	/^bool RobotControl::_digitalReadTopMux(uint8_t port){$/;"	f	class:RobotControl
_digitalReadTopMux	./Robot_Control/Sensors.cpp	/^bool RobotControl::_digitalReadTopMux(uint8_t port){$/;"	f	class:RobotControl
_digitalReadTopPin	./Robot_Control/Sensors.cpp	/^bool RobotControl::_digitalReadTopPin(uint8_t port){$/;"	f	class:RobotControl
_digitalReadTopPin	./Robot_Control/Sensors.cpp	/^bool RobotControl::_digitalReadTopPin(uint8_t port){$/;"	f	class:RobotControl
digitalWrite	./Robot_Control/Sensors.cpp	/^void RobotControl::digitalWrite(uint8_t port, bool value){$/;"	f	class:RobotControl
digitalWrite	./Robot_Control/Sensors.cpp	/^void RobotControl::digitalWrite(uint8_t port, bool value){$/;"	f	class:RobotControl
_digitalWrite	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_digitalWrite(uint8_t codename,bool value){$/;"	f	class:RobotMotorBoard
_digitalWrite	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_digitalWrite(uint8_t codename,bool value){$/;"	f	class:RobotMotorBoard
_digitalWriteTopPin	./Robot_Control/Sensors.cpp	/^void RobotControl::_digitalWriteTopPin(uint8_t port, bool value){$/;"	f	class:RobotControl
_digitalWriteTopPin	./Robot_Control/Sensors.cpp	/^void RobotControl::_digitalWriteTopPin(uint8_t port, bool value){$/;"	f	class:RobotControl
DIR_ATT_ARCHIVE	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_ARCHIVE = 0X20;$/;"	v
DIR_ATT_ARCHIVE	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_ARCHIVE = 0X20;$/;"	v
DIR_ATT_ARCHIVE	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_ARCHIVE = 0X20;$/;"	v
DIR_ATT_ARCHIVE	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_ARCHIVE = 0X20;$/;"	v
DIR_ATT_DEFINED_BITS	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_DEFINED_BITS = 0X3F;$/;"	v
DIR_ATT_DEFINED_BITS	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_DEFINED_BITS = 0X3F;$/;"	v
DIR_ATT_DEFINED_BITS	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_DEFINED_BITS = 0X3F;$/;"	v
DIR_ATT_DEFINED_BITS	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_DEFINED_BITS = 0X3F;$/;"	v
DIR_ATT_DIRECTORY	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_DIRECTORY = 0X10;$/;"	v
DIR_ATT_DIRECTORY	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_DIRECTORY = 0X10;$/;"	v
DIR_ATT_DIRECTORY	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_DIRECTORY = 0X10;$/;"	v
DIR_ATT_DIRECTORY	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_DIRECTORY = 0X10;$/;"	v
DIR_ATT_FILE_TYPE_MASK	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_FILE_TYPE_MASK = (DIR_ATT_VOLUME_ID | DIR_ATT_DIRECTORY);$/;"	v
DIR_ATT_FILE_TYPE_MASK	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_FILE_TYPE_MASK = (DIR_ATT_VOLUME_ID | DIR_ATT_DIRECTORY);$/;"	v
DIR_ATT_FILE_TYPE_MASK	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_FILE_TYPE_MASK = (DIR_ATT_VOLUME_ID | DIR_ATT_DIRECTORY);$/;"	v
DIR_ATT_FILE_TYPE_MASK	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_FILE_TYPE_MASK = (DIR_ATT_VOLUME_ID | DIR_ATT_DIRECTORY);$/;"	v
DIR_ATT_HIDDEN	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_HIDDEN = 0X02;$/;"	v
DIR_ATT_HIDDEN	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_HIDDEN = 0X02;$/;"	v
DIR_ATT_HIDDEN	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_HIDDEN = 0X02;$/;"	v
DIR_ATT_HIDDEN	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_HIDDEN = 0X02;$/;"	v
DIR_ATT_LONG_NAME_MASK	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME_MASK = 0X3F;$/;"	v
DIR_ATT_LONG_NAME_MASK	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME_MASK = 0X3F;$/;"	v
DIR_ATT_LONG_NAME_MASK	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME_MASK = 0X3F;$/;"	v
DIR_ATT_LONG_NAME_MASK	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME_MASK = 0X3F;$/;"	v
DIR_ATT_LONG_NAME	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME = 0X0F;$/;"	v
DIR_ATT_LONG_NAME	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME = 0X0F;$/;"	v
DIR_ATT_LONG_NAME	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME = 0X0F;$/;"	v
DIR_ATT_LONG_NAME	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_LONG_NAME = 0X0F;$/;"	v
DIR_ATT_READ_ONLY	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_READ_ONLY = 0X01;$/;"	v
DIR_ATT_READ_ONLY	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_READ_ONLY = 0X01;$/;"	v
DIR_ATT_READ_ONLY	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_READ_ONLY = 0X01;$/;"	v
DIR_ATT_READ_ONLY	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_READ_ONLY = 0X01;$/;"	v
DIR_ATT_SYSTEM	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_SYSTEM = 0X04;$/;"	v
DIR_ATT_SYSTEM	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_SYSTEM = 0X04;$/;"	v
DIR_ATT_SYSTEM	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_SYSTEM = 0X04;$/;"	v
DIR_ATT_SYSTEM	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_SYSTEM = 0X04;$/;"	v
DIR_ATT_VOLUME_ID	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_VOLUME_ID = 0X08;$/;"	v
DIR_ATT_VOLUME_ID	./Robot_Control/FatStructs.h	/^uint8_t const DIR_ATT_VOLUME_ID = 0X08;$/;"	v
DIR_ATT_VOLUME_ID	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_VOLUME_ID = 0X08;$/;"	v
DIR_ATT_VOLUME_ID	./SD/utility/FatStructs.h	/^uint8_t const DIR_ATT_VOLUME_ID = 0X08;$/;"	v
dirBlock_	./SD/utility/SdFat.h	/^  uint32_t  dirBlock_;      \/\/ SD block that contains directory entry for file$/;"	m	class:SdFile
dirBlock_	./SD/utility/SdFat.h	/^  uint32_t  dirBlock_;      \/\/ SD block that contains directory entry for file$/;"	m	class:SdFile
dirBlock	./SD/utility/SdFat.h	/^  uint32_t dirBlock(void) const {return dirBlock_;}$/;"	f	class:SdFile
dirBlock	./SD/utility/SdFat.h	/^  uint32_t dirBlock(void) const {return dirBlock_;}$/;"	f	class:SdFile
direction	./Stepper/Stepper.h	/^    int direction;        \/\/ Direction of rotation$/;"	m	class:Stepper
direction	./Stepper/Stepper.h	/^    int direction;        \/\/ Direction of rotation$/;"	m	class:Stepper
directoryEntry	./Robot_Control/FatStructs.h	/^struct directoryEntry {$/;"	s
directoryEntry	./Robot_Control/FatStructs.h	/^struct directoryEntry {$/;"	s
directoryEntry	./SD/utility/FatStructs.h	/^struct directoryEntry {$/;"	s
directoryEntry	./SD/utility/FatStructs.h	/^struct directoryEntry {$/;"	s
dirEntryIndex_	./Robot_Control/Fat16.h	/^  int16_t dirEntryIndex_;  \/\/ index of directory entry for open file$/;"	m	class:Fat16
dirEntryIndex_	./Robot_Control/Fat16.h	/^  int16_t dirEntryIndex_;  \/\/ index of directory entry for open file$/;"	m	class:Fat16
dirEntry	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::dirEntry(dir_t* dir) {$/;"	f	class:Fat16
dirEntry	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::dirEntry(dir_t* dir) {$/;"	f	class:Fat16
dirEntry	./Robot_Control/Fat16.h	/^  uint8_t dirEntry(dir_t& dir) {  \/\/ NOLINT$/;"	f	class:Fat16
dirEntry	./Robot_Control/Fat16.h	/^  uint8_t dirEntry(dir_t& dir) {  \/\/ NOLINT$/;"	f	class:Fat16
dirEntry	./SD/utility/SdFat.h	/^  uint8_t dirEntry(dir_t& dir) {return dirEntry(&dir);}  \/\/ NOLINT$/;"	f	class:SdFile
dirEntry	./SD/utility/SdFat.h	/^  uint8_t dirEntry(dir_t& dir) {return dirEntry(&dir);}  \/\/ NOLINT$/;"	f	class:SdFile
dirEntry	./SD/utility/SdFile.cpp	/^uint8_t SdFile::dirEntry(dir_t* dir) {$/;"	f	class:SdFile
dirEntry	./SD/utility/SdFile.cpp	/^uint8_t SdFile::dirEntry(dir_t* dir) {$/;"	f	class:SdFile
dirIndex_	./SD/utility/SdFat.h	/^  uint8_t   dirIndex_;      \/\/ index of entry in dirBlock 0 <= dirIndex_ <= 0XF$/;"	m	class:SdFile
dirIndex_	./SD/utility/SdFat.h	/^  uint8_t   dirIndex_;      \/\/ index of entry in dirBlock 0 <= dirIndex_ <= 0XF$/;"	m	class:SdFile
dirIndex	./SD/utility/SdFat.h	/^  uint8_t dirIndex(void) const {return dirIndex_;}$/;"	f	class:SdFile
dirIndex	./SD/utility/SdFat.h	/^  uint8_t dirIndex(void) const {return dirIndex_;}$/;"	f	class:SdFile
DIR_IS_FILE_OR_SUBDIR	./Robot_Control/FatStructs.h	/^static inline uint8_t DIR_IS_FILE_OR_SUBDIR(const dir_t* dir) {$/;"	f
DIR_IS_FILE_OR_SUBDIR	./Robot_Control/FatStructs.h	/^static inline uint8_t DIR_IS_FILE_OR_SUBDIR(const dir_t* dir) {$/;"	f
DIR_IS_FILE_OR_SUBDIR	./SD/utility/FatStructs.h	/^static inline uint8_t DIR_IS_FILE_OR_SUBDIR(const dir_t* dir) {$/;"	f
DIR_IS_FILE_OR_SUBDIR	./SD/utility/FatStructs.h	/^static inline uint8_t DIR_IS_FILE_OR_SUBDIR(const dir_t* dir) {$/;"	f
DIR_IS_FILE	./Robot_Control/FatStructs.h	/^static inline uint8_t DIR_IS_FILE(const dir_t* dir) {$/;"	f
DIR_IS_FILE	./Robot_Control/FatStructs.h	/^static inline uint8_t DIR_IS_FILE(const dir_t* dir) {$/;"	f
DIR_IS_FILE	./SD/utility/FatStructs.h	/^static inline uint8_t DIR_IS_FILE(const dir_t* dir) {$/;"	f
DIR_IS_FILE	./SD/utility/FatStructs.h	/^static inline uint8_t DIR_IS_FILE(const dir_t* dir) {$/;"	f
DIR_IS_LONG_NAME	./Robot_Control/FatStructs.h	/^static inline uint8_t DIR_IS_LONG_NAME(const dir_t* dir) {$/;"	f
DIR_IS_LONG_NAME	./Robot_Control/FatStructs.h	/^static inline uint8_t DIR_IS_LONG_NAME(const dir_t* dir) {$/;"	f
DIR_IS_LONG_NAME	./SD/utility/FatStructs.h	/^static inline uint8_t DIR_IS_LONG_NAME(const dir_t* dir) {$/;"	f
DIR_IS_LONG_NAME	./SD/utility/FatStructs.h	/^static inline uint8_t DIR_IS_LONG_NAME(const dir_t* dir) {$/;"	f
DIR_IS_SUBDIR	./Robot_Control/FatStructs.h	/^static inline uint8_t DIR_IS_SUBDIR(const dir_t* dir) {$/;"	f
DIR_IS_SUBDIR	./Robot_Control/FatStructs.h	/^static inline uint8_t DIR_IS_SUBDIR(const dir_t* dir) {$/;"	f
DIR_IS_SUBDIR	./SD/utility/FatStructs.h	/^static inline uint8_t DIR_IS_SUBDIR(const dir_t* dir) {$/;"	f
DIR_IS_SUBDIR	./SD/utility/FatStructs.h	/^static inline uint8_t DIR_IS_SUBDIR(const dir_t* dir) {$/;"	f
DIR_NAME_0XE5	./Robot_Control/FatStructs.h	/^uint8_t const DIR_NAME_0XE5 = 0X05;$/;"	v
DIR_NAME_0XE5	./Robot_Control/FatStructs.h	/^uint8_t const DIR_NAME_0XE5 = 0X05;$/;"	v
DIR_NAME_0XE5	./SD/utility/FatStructs.h	/^uint8_t const DIR_NAME_0XE5 = 0X05;$/;"	v
DIR_NAME_0XE5	./SD/utility/FatStructs.h	/^uint8_t const DIR_NAME_0XE5 = 0X05;$/;"	v
DIR_NAME_DELETED	./Robot_Control/FatStructs.h	/^uint8_t const DIR_NAME_DELETED = 0XE5;$/;"	v
DIR_NAME_DELETED	./Robot_Control/FatStructs.h	/^uint8_t const DIR_NAME_DELETED = 0XE5;$/;"	v
DIR_NAME_DELETED	./SD/utility/FatStructs.h	/^uint8_t const DIR_NAME_DELETED = 0XE5;$/;"	v
DIR_NAME_DELETED	./SD/utility/FatStructs.h	/^uint8_t const DIR_NAME_DELETED = 0XE5;$/;"	v
DIR_NAME_FREE	./Robot_Control/FatStructs.h	/^uint8_t const DIR_NAME_FREE = 0X00;$/;"	v
DIR_NAME_FREE	./Robot_Control/FatStructs.h	/^uint8_t const DIR_NAME_FREE = 0X00;$/;"	v
DIR_NAME_FREE	./SD/utility/FatStructs.h	/^uint8_t const DIR_NAME_FREE = 0X00;$/;"	v
DIR_NAME_FREE	./SD/utility/FatStructs.h	/^uint8_t const DIR_NAME_FREE = 0X00;$/;"	v
dirName	./SD/utility/SdFile.cpp	/^void SdFile::dirName(const dir_t& dir, char* name) {$/;"	f	class:SdFile
dirName	./SD/utility/SdFile.cpp	/^void SdFile::dirName(const dir_t& dir, char* name) {$/;"	f	class:SdFile
dir	./Robot_Control/Fat16.h	/^  dir_t   dir[16];$/;"	m	union:cache16_t
dir	./Robot_Control/Fat16.h	/^  dir_t   dir[16];$/;"	m	union:cache16_t
dir	./SD/utility/SdFat.h	/^  dir_t    dir[16];$/;"	m	union:cache_t
dir	./SD/utility/SdFat.h	/^  dir_t    dir[16];$/;"	m	union:cache_t
dir_t	./Robot_Control/FatStructs.h	/^typedef struct directoryEntry dir_t;$/;"	t	typeref:struct:directoryEntry
dir_t	./Robot_Control/FatStructs.h	/^typedef struct directoryEntry dir_t;$/;"	t	typeref:struct:directoryEntry
dir_t	./SD/utility/FatStructs.h	/^typedef struct directoryEntry dir_t;$/;"	t	typeref:struct:directoryEntry
dir_t	./SD/utility/FatStructs.h	/^typedef struct directoryEntry dir_t;$/;"	t	typeref:struct:directoryEntry
DisableUserButton	./GSM_Shield/GSM_Shield.h	/^    inline void DisableUserButton(void) {module_status &= ~STATUS_USER_BUTTON_ENABLE;};$/;"	f	class:GSM
DisableUserButton	./GSM_Shield/GSM_Shield.h	/^    inline void DisableUserButton(void) {module_status &= ~STATUS_USER_BUTTON_ENABLE;};$/;"	f	class:GSM
DISCON	./Ethernet/utility/w5100.h	/^  static const uint8_t DISCON  = 0x02;$/;"	m	class:SnIR
DISCON	./Ethernet/utility/w5100.h	/^  static const uint8_t DISCON  = 0x02;$/;"	m	class:SnIR
DISCONNECT_CMD	./WiFi/utility/wifi_spi.h	/^    DISCONNECT_CMD		= 0x30,$/;"	e	enum:__anon4
DISCONNECT_CMD	./WiFi/utility/wifi_spi.h	/^    DISCONNECT_CMD		= 0x30,$/;"	e	enum:__anon4
disconnect	./Ethernet/utility/socket.cpp	/^void disconnect(SOCKET s)$/;"	f
disconnect	./Ethernet/utility/socket.cpp	/^void disconnect(SOCKET s)$/;"	f
disconnect	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::disconnect()$/;"	f	class:GSM3ShieldV1DirectModemProvider
disconnect	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::disconnect()$/;"	f	class:GSM3ShieldV1DirectModemProvider
disconnectTCPContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::disconnectTCPContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
disconnectTCPContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::disconnectTCPContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
disconnectTCP	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::disconnectTCP(int idsocket)$/;"	f	class:GSM3MobileMockupProvider
disconnectTCP	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::disconnectTCP(int idsocket)$/;"	f	class:GSM3MobileMockupProvider
disconnectTCP	./GSM/GSM3MobileNetworkProvider.h	/^		int disconnectTCP(bool client1Server0, int idsocket){return 1;};$/;"	f	class:GSM3MobileNetworkProvider
disconnectTCP	./GSM/GSM3MobileNetworkProvider.h	/^		int disconnectTCP(bool client1Server0, int idsocket){return 1;};$/;"	f	class:GSM3MobileNetworkProvider
DISCONNECTTCP	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
DISCONNECTTCP	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
disconnectTCP	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::disconnectTCP(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
disconnectTCP	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::disconnectTCP(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1ClientProvider
disconnectTCP	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::disconnectTCP(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
disconnectTCP	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::disconnectTCP(bool client1Server0, int id_socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
disconnect	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::disconnect()$/;"	f	class:WiFiDrv
disconnect	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::disconnect()$/;"	f	class:WiFiDrv
disconnect	./WiFi/WiFi.cpp	/^int WiFiClass::disconnect()$/;"	f	class:WiFiClass
disconnect	./WiFi/WiFi.cpp	/^int WiFiClass::disconnect()$/;"	f	class:WiFiClass
diskSignature	./Robot_Control/FatStructs.h	/^  uint32_t diskSignature;$/;"	m	struct:masterBootRecord
diskSignature	./Robot_Control/FatStructs.h	/^  uint32_t diskSignature;$/;"	m	struct:masterBootRecord
diskSignature	./SD/utility/FatStructs.h	/^  uint32_t diskSignature;$/;"	m	struct:masterBootRecord
diskSignature	./SD/utility/FatStructs.h	/^  uint32_t diskSignature;$/;"	m	struct:masterBootRecord
_displaycontrol	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _displaycontrol;$/;"	m	class:LiquidCrystal
_displaycontrol	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _displaycontrol;$/;"	m	class:LiquidCrystal
_displayfunction	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _displayfunction;$/;"	m	class:LiquidCrystal
_displayfunction	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _displayfunction;$/;"	m	class:LiquidCrystal
display	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::display() {$/;"	f	class:LiquidCrystal
display	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::display() {$/;"	f	class:LiquidCrystal
displayLogos	./Robot_Control/helper.cpp	/^void RobotControl::displayLogos(){$/;"	f	class:RobotControl
displayLogos	./Robot_Control/helper.cpp	/^void RobotControl::displayLogos(){$/;"	f	class:RobotControl
_displaymode	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _displaymode;$/;"	m	class:LiquidCrystal
_displaymode	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _displaymode;$/;"	m	class:LiquidCrystal
display	./Robot_Control/utility/VirtualKeyboard.cpp	/^void VirtualKeyboard::display(uint8_t top, uint16_t showColor, uint16_t hideColor){$/;"	f	class:VirtualKeyboard
display	./Robot_Control/utility/VirtualKeyboard.cpp	/^void VirtualKeyboard::display(uint8_t top, uint16_t showColor, uint16_t hideColor){$/;"	f	class:VirtualKeyboard
distanceBetween	./TinyGPSPlus/TinyGPS++.cpp	/^double TinyGPSPlus::distanceBetween(double lat1, double long1, double lat2, double long2)$/;"	f	class:TinyGPSPlus
distanceBetween	./TinyGPSPlus/TinyGPS++.cpp	/^double TinyGPSPlus::distanceBetween(double lat1, double long1, double lat2, double long2)$/;"	f	class:TinyGPSPlus
distance_between	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::distance_between (float lat1, float long1, float lat2, float long2) $/;"	f	class:TinyGPS
distance_between	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::distance_between (float lat1, float long1, float lat2, float long2) $/;"	f	class:TinyGPS
DNSClient	./Ethernet/Dns.h	/^class DNSClient$/;"	c
DNSClient	./Ethernet/Dns.h	/^class DNSClient$/;"	c
DNSClient_h	./Ethernet/Dns.h	6;"	d
DNSClient_h	./Ethernet/Dns.h	6;"	d
dns	./Ethernet/Dhcp.h	/^	dns			=	6,$/;"	e	enum:__anon14
dns	./Ethernet/Dhcp.h	/^	dns			=	6,$/;"	e	enum:__anon14
DNS_HEADER_SIZE	./Ethernet/Dns.cpp	18;"	d	file:
DNS_HEADER_SIZE	./Ethernet/Dns.cpp	18;"	d	file:
DNS_PORT	./Ethernet/Dns.cpp	42;"	d	file:
DNS_PORT	./Ethernet/Dns.cpp	42;"	d	file:
_dnsServerAddress	./Ethernet/Ethernet.h	/^  IPAddress _dnsServerAddress;$/;"	m	class:EthernetClass
_dnsServerAddress	./Ethernet/Ethernet.h	/^  IPAddress _dnsServerAddress;$/;"	m	class:EthernetClass
dnsServerIP	./Ethernet/Ethernet.cpp	/^IPAddress EthernetClass::dnsServerIP()$/;"	f	class:EthernetClass
dnsServerIP	./Ethernet/Ethernet.cpp	/^IPAddress EthernetClass::dnsServerIP()$/;"	f	class:EthernetClass
doCalibration	./Robot_Motor/lineFollow.cpp	/^void LineFollow::doCalibration(int speedPct, int time){$/;"	f	class:LineFollow
doCalibration	./Robot_Motor/lineFollow.cpp	/^void LineFollow::doCalibration(int speedPct, int time){$/;"	f	class:LineFollow
domainName	./Ethernet/Dhcp.h	/^	domainName		=	15,$/;"	e	enum:__anon14
domainName	./Ethernet/Dhcp.h	/^	domainName		=	15,$/;"	e	enum:__anon14
do_osc	./Robot_Control/Squawk.cpp	/^static int8_t do_osc(pto_t *p_osc) {$/;"	f	file:
do_osc	./Robot_Control/Squawk.cpp	/^static int8_t do_osc(pto_t *p_osc) {$/;"	f	file:
DOUBLE	./AFMotor/AFMotor.h	115;"	d
DOUBLE	./AFMotor/AFMotor.h	115;"	d
drawBase	./Robot_Control/helper.cpp	/^void RobotControl::drawBase(){$/;"	f	class:RobotControl
drawBase	./Robot_Control/helper.cpp	/^void RobotControl::drawBase(){$/;"	f	class:RobotControl
drawBitmap	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawBitmap(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawBitmap	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawBitmap(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawBitmap	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawBitmap(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawBitmap	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawBitmap(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
_drawBMP_EEPROM	./Robot_Control/lcd.cpp	/^void RobotControl::_drawBMP_EEPROM(uint16_t address, uint8_t width, uint8_t height){$/;"	f	class:RobotControl
_drawBMP_EEPROM	./Robot_Control/lcd.cpp	/^void RobotControl::_drawBMP_EEPROM(uint16_t address, uint8_t width, uint8_t height){$/;"	f	class:RobotControl
_drawBMP	./Robot_Control/lcd.cpp	/^void RobotControl::_drawBMP(char* filename, uint8_t posX, uint8_t posY){$/;"	f	class:RobotControl
_drawBMP	./Robot_Control/lcd.cpp	/^void RobotControl::_drawBMP(char* filename, uint8_t posX, uint8_t posY){$/;"	f	class:RobotControl
drawBMP	./Robot_Control/lcd.cpp	/^void RobotControl::drawBMP(char* filename, uint8_t x, uint8_t y){$/;"	f	class:RobotControl
drawBMP	./Robot_Control/lcd.cpp	/^void RobotControl::drawBMP(char* filename, uint8_t x, uint8_t y){$/;"	f	class:RobotControl
_drawBMP	./Robot_Control/lcd.cpp	/^void RobotControl::_drawBMP(uint32_t iconOffset, uint8_t x, uint8_t y, uint8_t width, uint8_t height){$/;"	f	class:RobotControl
_drawBMP	./Robot_Control/lcd.cpp	/^void RobotControl::_drawBMP(uint32_t iconOffset, uint8_t x, uint8_t y, uint8_t width, uint8_t height){$/;"	f	class:RobotControl
drawChar	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawChar(int16_t x, int16_t y, unsigned char c,$/;"	f	class:Adafruit_GFX
drawChar	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawChar(int16_t x, int16_t y, unsigned char c,$/;"	f	class:Adafruit_GFX
drawChar	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawChar(int16_t x, int16_t y, unsigned char c,$/;"	f	class:Adafruit_GFX
drawChar	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawChar(int16_t x, int16_t y, unsigned char c,$/;"	f	class:Adafruit_GFX
drawCircleHelper	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawCircleHelper( int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
drawCircleHelper	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawCircleHelper( int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
drawCircleHelper	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawCircleHelper( int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
drawCircleHelper	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawCircleHelper( int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
drawCircle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawCircle(int16_t x0, int16_t y0, int16_t r, $/;"	f	class:Adafruit_GFX
drawCircle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawCircle(int16_t x0, int16_t y0, int16_t r, $/;"	f	class:Adafruit_GFX
drawCircle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawCircle(int16_t x0, int16_t y0, int16_t r, $/;"	f	class:Adafruit_GFX
drawCircle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawCircle(int16_t x0, int16_t y0, int16_t r, $/;"	f	class:Adafruit_GFX
drawCompass	./Robot_Control/helper.cpp	/^void RobotControl::drawCompass(uint16_t value){$/;"	f	class:RobotControl
drawCompass	./Robot_Control/helper.cpp	/^void RobotControl::drawCompass(uint16_t value){$/;"	f	class:RobotControl
drawDire	./Robot_Control/helper.cpp	/^void RobotControl::drawDire(int16_t dire){$/;"	f	class:RobotControl
drawDire	./Robot_Control/helper.cpp	/^void RobotControl::drawDire(int16_t dire){$/;"	f	class:RobotControl
drawFastHLine	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawFastHLine(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawFastHLine	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawFastHLine(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawFastHLine	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::drawFastHLine(int16_t x, int16_t y, int16_t w,$/;"	f	class:Arduino_LCD
drawFastHLine	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::drawFastHLine(int16_t x, int16_t y, int16_t w,$/;"	f	class:Arduino_LCD
drawFastHLine	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawFastHLine(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawFastHLine	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawFastHLine(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawFastHLine	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::drawFastHLine(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_ST7735
drawFastHLine	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::drawFastHLine(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_ST7735
drawFastVLine	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawFastVLine(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawFastVLine	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawFastVLine(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawFastVLine	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::drawFastVLine(int16_t x, int16_t y, int16_t h,$/;"	f	class:Arduino_LCD
drawFastVLine	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::drawFastVLine(int16_t x, int16_t y, int16_t h,$/;"	f	class:Arduino_LCD
drawFastVLine	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawFastVLine(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawFastVLine	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawFastVLine(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawFastVLine	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::drawFastVLine(int16_t x, int16_t y, int16_t h,$/;"	f	class:Adafruit_ST7735
drawFastVLine	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::drawFastVLine(int16_t x, int16_t y, int16_t h,$/;"	f	class:Adafruit_ST7735
drawInput	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::drawInput(bool onOff){$/;"	f	class:TextManager
drawInput	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::drawInput(bool onOff){$/;"	f	class:TextManager
drawLine	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawLine(int16_t x0, int16_t y0, $/;"	f	class:Adafruit_GFX
drawLine	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawLine(int16_t x0, int16_t y0, $/;"	f	class:Adafruit_GFX
drawLine	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawLine(int16_t x0, int16_t y0, $/;"	f	class:Adafruit_GFX
drawLine	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawLine(int16_t x0, int16_t y0, $/;"	f	class:Adafruit_GFX
drawPixel	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::drawPixel(int16_t x, int16_t y, uint16_t color) {$/;"	f	class:Arduino_LCD
drawPixel	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::drawPixel(int16_t x, int16_t y, uint16_t color) {$/;"	f	class:Arduino_LCD
drawPixel	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::drawPixel(int16_t x, int16_t y, uint16_t color) {$/;"	f	class:Adafruit_ST7735
drawPixel	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::drawPixel(int16_t x, int16_t y, uint16_t color) {$/;"	f	class:Adafruit_ST7735
drawRect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawRect(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawRect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawRect(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawRect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawRect(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawRect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawRect(int16_t x, int16_t y, $/;"	f	class:Adafruit_GFX
drawRoundRect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawRoundRect(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_GFX
drawRoundRect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawRoundRect(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_GFX
drawRoundRect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawRoundRect(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_GFX
drawRoundRect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawRoundRect(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_GFX
drawTriangle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawTriangle(int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
drawTriangle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawTriangle(int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
drawTriangle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawTriangle(int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
drawTriangle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::drawTriangle(int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
driveNumber	./Robot_Control/FatStructs.h	/^  uint8_t  driveNumber;$/;"	m	struct:fat32BootSector
driveNumber	./Robot_Control/FatStructs.h	/^  uint8_t  driveNumber;$/;"	m	struct:fat32BootSector
driveNumber	./SD/utility/FatStructs.h	/^  uint8_t  driveNumber;$/;"	m	struct:fat32BootSector
driveNumber	./SD/utility/FatStructs.h	/^  uint8_t  driveNumber;$/;"	m	struct:fat32BootSector
dsr_imp	./Robot_Control/SdInfo.h	/^  unsigned dsr_imp : 1;$/;"	m	struct:CSD
dsr_imp	./Robot_Control/SdInfo.h	/^  unsigned dsr_imp : 1;$/;"	m	struct:CSD
dsr_imp	./SD/utility/SdInfo.h	/^  unsigned dsr_imp : 1;$/;"	m	struct:CSDV1
dsr_imp	./SD/utility/SdInfo.h	/^  unsigned dsr_imp : 1;$/;"	m	struct:CSDV1
dsr_imp	./SD/utility/SdInfo.h	/^  unsigned dsr_imp : 1;$/;"	m	struct:CSDV2
dsr_imp	./SD/utility/SdInfo.h	/^  unsigned dsr_imp : 1;$/;"	m	struct:CSDV2
DTMF_DATA0	./GSM_Shield/GSM_Shield.h	37;"	d
DTMF_DATA0	./GSM_Shield/GSM_Shield.h	37;"	d
DTMF_DATA1	./GSM_Shield/GSM_Shield.h	38;"	d
DTMF_DATA1	./GSM_Shield/GSM_Shield.h	38;"	d
DTMF_DATA2	./GSM_Shield/GSM_Shield.h	39;"	d
DTMF_DATA2	./GSM_Shield/GSM_Shield.h	39;"	d
DTMF_DATA3	./GSM_Shield/GSM_Shield.h	40;"	d
DTMF_DATA3	./GSM_Shield/GSM_Shield.h	40;"	d
DTMF_DATA_VALID	./GSM_Shield/GSM_Shield.h	36;"	d
DTMF_DATA_VALID	./GSM_Shield/GSM_Shield.h	36;"	d
DUMMY_DATA	./WiFi/utility/spi_drv.h	12;"	d
DUMMY_DATA	./WiFi/utility/spi_drv.h	12;"	d
EasyTransfer2_h	./Robot_Control/EasyTransfer2.h	25;"	d
EasyTransfer2_h	./Robot_Control/EasyTransfer2.h	25;"	d
EasyTransfer2_h	./Robot_Motor/EasyTransfer2.h	25;"	d
EasyTransfer2_h	./Robot_Motor/EasyTransfer2.h	25;"	d
EasyTransfer2	./Robot_Control/EasyTransfer2.h	/^class EasyTransfer2 {$/;"	c
EasyTransfer2	./Robot_Control/EasyTransfer2.h	/^class EasyTransfer2 {$/;"	c
EasyTransfer2	./Robot_Motor/EasyTransfer2.h	/^class EasyTransfer2 {$/;"	c
EasyTransfer2	./Robot_Motor/EasyTransfer2.h	/^class EasyTransfer2 {$/;"	c
Echo	./GSM_Shield/GSM_Shield.cpp	/^void GSM::Echo(byte state)$/;"	f	class:GSM
Echo	./GSM_Shield/GSM_Shield.cpp	/^void GSM::Echo(byte state)$/;"	f	class:GSM
EE24LC512MAXBYTES	./Robot_Control/EEPROM_I2C.h	10;"	d
EE24LC512MAXBYTES	./Robot_Control/EEPROM_I2C.h	10;"	d
_eeprom_bmp	./Robot_Control/ArduinoRobot.h	/^		EEPROM_BMP * _eeprom_bmp;$/;"	m	class:RobotControl
_eeprom_bmp	./Robot_Control/ArduinoRobot.h	/^		EEPROM_BMP * _eeprom_bmp;$/;"	m	class:RobotControl
EEPROM_BMP	./Robot_Control/ArduinoRobot.h	/^struct EEPROM_BMP{$/;"	s
EEPROM_BMP	./Robot_Control/ArduinoRobot.h	/^struct EEPROM_BMP{$/;"	s
EEPROMClass	./EEPROM/EEPROM.h	/^class EEPROMClass$/;"	c
EEPROMClass	./EEPROM/EEPROM.h	/^class EEPROMClass$/;"	c
EEPROM	./EEPROM/EEPROM.cpp	/^EEPROMClass EEPROM;$/;"	v
EEPROM	./EEPROM/EEPROM.cpp	/^EEPROMClass EEPROM;$/;"	v
EEPROM_h	./EEPROM/EEPROM.h	21;"	d
EEPROM_h	./EEPROM/EEPROM.h	21;"	d
EEPROM_I2C_h	./Robot_Control/EEPROM_I2C.h	2;"	d
EEPROM_I2C_h	./Robot_Control/EEPROM_I2C.h	2;"	d
EEPROM_I2C	./Robot_Control/EEPROM_I2C.h	/^class EEPROM_I2C{$/;"	c
EEPROM_I2C	./Robot_Control/EEPROM_I2C.h	/^class EEPROM_I2C{$/;"	c
EGSM_DCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
EGSM_DCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
EGSM_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
EGSM_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
EMPTY	./Robot_Control/utility/RobotTextManager.h	8;"	d
EMPTY	./Robot_Control/utility/RobotTextManager.h	8;"	d
enable	./AFMotor/AFMotor.cpp	/^void AFMotorController::enable(void) {$/;"	f	class:AFMotorController
enable	./AFMotor/AFMotor.cpp	/^void AFMotorController::enable(void) {$/;"	f	class:AFMotorController
_enableLCD	./Robot_Control/lcd.cpp	/^void RobotControl::_enableLCD(){$/;"	f	class:RobotControl
_enableLCD	./Robot_Control/lcd.cpp	/^void RobotControl::_enableLCD(){$/;"	f	class:RobotControl
_enable_pin	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _enable_pin; \/\/ activated by a HIGH pulse.$/;"	m	class:LiquidCrystal
_enable_pin	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _enable_pin; \/\/ activated by a HIGH pulse.$/;"	m	class:LiquidCrystal
_enableSD	./Robot_Control/RobotSdCard.cpp	/^void RobotControl::_enableSD(){$/;"	f	class:RobotControl
_enableSD	./Robot_Control/RobotSdCard.cpp	/^void RobotControl::_enableSD(){$/;"	f	class:RobotControl
EnableUserButton	./GSM_Shield/GSM_Shield.h	/^    inline void EnableUserButton(void) {module_status |= STATUS_USER_BUTTON_ENABLE;};$/;"	f	class:GSM
EnableUserButton	./GSM_Shield/GSM_Shield.h	/^    inline void EnableUserButton(void) {module_status |= STATUS_USER_BUTTON_ENABLE;};$/;"	f	class:GSM
_encoded_characters	./TinyGPS/TinyGPS.h	/^  unsigned long _encoded_characters;$/;"	m	class:TinyGPS
_encoded_characters	./TinyGPS/TinyGPS.h	/^  unsigned long _encoded_characters;$/;"	m	class:TinyGPS
encodedCharCount	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t encodedCharCount;$/;"	m	class:TinyGPSPlus
encodedCharCount	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t encodedCharCount;$/;"	m	class:TinyGPSPlus
encode	./TinyGPSPlus/TinyGPS++.cpp	/^bool TinyGPSPlus::encode(char c)$/;"	f	class:TinyGPSPlus
encode	./TinyGPSPlus/TinyGPS++.cpp	/^bool TinyGPSPlus::encode(char c)$/;"	f	class:TinyGPSPlus
encode	./TinyGPS/TinyGPS.cpp	/^bool TinyGPS::encode(char c)$/;"	f	class:TinyGPS
encode	./TinyGPS/TinyGPS.cpp	/^bool TinyGPS::encode(char c)$/;"	f	class:TinyGPS
encryptionType	./WiFi/WiFi.cpp	/^uint8_t WiFiClass::encryptionType()$/;"	f	class:WiFiClass
encryptionType	./WiFi/WiFi.cpp	/^uint8_t WiFiClass::encryptionType()$/;"	f	class:WiFiClass
encryptionType	./WiFi/WiFi.cpp	/^uint8_t WiFiClass::encryptionType(uint8_t networkItem)$/;"	f	class:WiFiClass
encryptionType	./WiFi/WiFi.cpp	/^uint8_t WiFiClass::encryptionType(uint8_t networkItem)$/;"	f	class:WiFiClass
ENC_TYPE_AUTO	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_AUTO = 8$/;"	e	enum:wl_enc_type
ENC_TYPE_AUTO	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_AUTO = 8$/;"	e	enum:wl_enc_type
ENC_TYPE_CCMP	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_CCMP = 4,$/;"	e	enum:wl_enc_type
ENC_TYPE_CCMP	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_CCMP = 4,$/;"	e	enum:wl_enc_type
ENC_TYPE_NONE	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_NONE = 7,$/;"	e	enum:wl_enc_type
ENC_TYPE_NONE	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_NONE = 7,$/;"	e	enum:wl_enc_type
ENC_TYPE_TKIP	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_TKIP = 2,$/;"	e	enum:wl_enc_type
ENC_TYPE_TKIP	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_TKIP = 2,$/;"	e	enum:wl_enc_type
ENC_TYPE_WEP	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_WEP  = 5,$/;"	e	enum:wl_enc_type
ENC_TYPE_WEP	./WiFi/utility/wl_definitions.h	/^        ENC_TYPE_WEP  = 5,$/;"	e	enum:wl_enc_type
endBMPFromEEPROM	./Robot_Control/lcd.cpp	/^void RobotControl::endBMPFromEEPROM(){$/;"	f	class:RobotControl
endBMPFromEEPROM	./Robot_Control/lcd.cpp	/^void RobotControl::endBMPFromEEPROM(){$/;"	f	class:RobotControl
END_CMD	./WiFi/utility/wifi_spi.h	19;"	d
END_CMD	./WiFi/utility/wifi_spi.h	19;"	d
endCylinderHigh	./Robot_Control/FatStructs.h	/^  unsigned endCylinderHigh : 2;$/;"	m	struct:partitionTable
endCylinderHigh	./Robot_Control/FatStructs.h	/^  unsigned endCylinderHigh : 2;$/;"	m	struct:partitionTable
endCylinderHigh	./SD/utility/FatStructs.h	/^  unsigned endCylinderHigh : 2;$/;"	m	struct:partitionTable
endCylinderHigh	./SD/utility/FatStructs.h	/^  unsigned endCylinderHigh : 2;$/;"	m	struct:partitionTable
endCylinderLow	./Robot_Control/FatStructs.h	/^  uint8_t  endCylinderLow;$/;"	m	struct:partitionTable
endCylinderLow	./Robot_Control/FatStructs.h	/^  uint8_t  endCylinderLow;$/;"	m	struct:partitionTable
endCylinderLow	./SD/utility/FatStructs.h	/^  uint8_t  endCylinderLow;$/;"	m	struct:partitionTable
endCylinderLow	./SD/utility/FatStructs.h	/^  uint8_t  endCylinderLow;$/;"	m	struct:partitionTable
endHead	./Robot_Control/FatStructs.h	/^  uint8_t  endHead;$/;"	m	struct:partitionTable
endHead	./Robot_Control/FatStructs.h	/^  uint8_t  endHead;$/;"	m	struct:partitionTable
endHead	./SD/utility/FatStructs.h	/^  uint8_t  endHead;$/;"	m	struct:partitionTable
endHead	./SD/utility/FatStructs.h	/^  uint8_t  endHead;$/;"	m	struct:partitionTable
endOfTermHandler	./TinyGPSPlus/TinyGPS++.cpp	/^bool TinyGPSPlus::endOfTermHandler()$/;"	f	class:TinyGPSPlus
endOfTermHandler	./TinyGPSPlus/TinyGPS++.cpp	/^bool TinyGPSPlus::endOfTermHandler()$/;"	f	class:TinyGPSPlus
endOption	./Ethernet/Dhcp.h	/^	endOption		=	255$/;"	e	enum:__anon14
endOption	./Ethernet/Dhcp.h	/^	endOption		=	255$/;"	e	enum:__anon14
endPacket	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::endPacket()$/;"	f	class:EthernetUDP
endPacket	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::endPacket()$/;"	f	class:EthernetUDP
endPacket	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::endPacket()$/;"	f	class:WiFiUDP
endPacket	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::endPacket()$/;"	f	class:WiFiUDP
end	./Robot_Control/SPI.cpp	/^void SPIClass::end() {$/;"	f	class:SPIClass
end	./Robot_Control/SPI.cpp	/^void SPIClass::end() {$/;"	f	class:SPIClass
endSector	./Robot_Control/FatStructs.h	/^  unsigned endSector : 6;$/;"	m	struct:partitionTable
endSector	./Robot_Control/FatStructs.h	/^  unsigned endSector : 6;$/;"	m	struct:partitionTable
endSector	./SD/utility/FatStructs.h	/^  unsigned endSector : 6;$/;"	m	struct:partitionTable
endSector	./SD/utility/FatStructs.h	/^  unsigned endSector : 6;$/;"	m	struct:partitionTable
endSMSContinue	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::endSMSContinue()$/;"	f	class:GSM3ShieldV1SMSProvider
endSMSContinue	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::endSMSContinue()$/;"	f	class:GSM3ShieldV1SMSProvider
endSMS	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::endSMS()$/;"	f	class:GSM3MobileMockupProvider
endSMS	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::endSMS()$/;"	f	class:GSM3MobileMockupProvider
endSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int endSMS(){return 0;};$/;"	f	class:GSM3MobileSMSProvider
endSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int endSMS(){return 0;};$/;"	f	class:GSM3MobileSMSProvider
ENDSMS	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
ENDSMS	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
endSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::endSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
endSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::endSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
endSMS	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::endSMS()$/;"	f	class:GSM3SMSService
endSMS	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::endSMS()$/;"	f	class:GSM3SMSService
end	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::end()$/;"	f	class:SoftwareSerial
end	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::end()$/;"	f	class:SoftwareSerial
end	./SPI/SPI.cpp	/^void SPIClass::end() {$/;"	f	class:SPIClass
end	./SPI/SPI.cpp	/^void SPIClass::end() {$/;"	f	class:SPIClass
endSysex	./Firmata/Firmata.cpp	/^void FirmataClass::endSysex(void)$/;"	f	class:FirmataClass
endSysex	./Firmata/Firmata.cpp	/^void FirmataClass::endSysex(void)$/;"	f	class:FirmataClass
END_SYSEX	./Firmata/Firmata.h	40;"	d
END_SYSEX	./Firmata/Firmata.h	40;"	d
_endTransmission	./Robot_Control/Compass.cpp	/^void Compass::_endTransmission(){$/;"	f	class:Compass
_endTransmission	./Robot_Control/Compass.cpp	/^void Compass::_endTransmission(){$/;"	f	class:Compass
_endTransmission	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::_endTransmission(){$/;"	f	class:EEPROM_I2C
_endTransmission	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::_endTransmission(){$/;"	f	class:EEPROM_I2C
endTransmission	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::endTransmission(uint8_t sendStop)$/;"	f	class:TwoWire
endTransmission	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::endTransmission(uint8_t sendStop)$/;"	f	class:TwoWire
endTransmission	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::endTransmission(void)$/;"	f	class:TwoWire
endTransmission	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::endTransmission(void)$/;"	f	class:TwoWire
endTransmission	./Wire/Wire.cpp	/^uint8_t TwoWire::endTransmission(uint8_t sendStop)$/;"	f	class:TwoWire
endTransmission	./Wire/Wire.cpp	/^uint8_t TwoWire::endTransmission(uint8_t sendStop)$/;"	f	class:TwoWire
endTransmission	./Wire/Wire.cpp	/^uint8_t TwoWire::endTransmission(void)$/;"	f	class:TwoWire
endTransmission	./Wire/Wire.cpp	/^uint8_t TwoWire::endTransmission(void)$/;"	f	class:TwoWire
END	./WiFi/utility/debug.h	58;"	d
END	./WiFi/utility/debug.h	58;"	d
END	./WiFi/utility/debug.h	70;"	d
END	./WiFi/utility/debug.h	70;"	d
end	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::end() {$/;"	f	class:SpiDrv
end	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::end() {$/;"	f	class:SpiDrv
endWrite	./GSM/GSM3MobileClientService.cpp	/^void GSM3MobileClientService::endWrite(bool sync)$/;"	f	class:GSM3MobileClientService
endWrite	./GSM/GSM3MobileClientService.cpp	/^void GSM3MobileClientService::endWrite(bool sync)$/;"	f	class:GSM3MobileClientService
endWrite	./GSM/GSM3MobileServerService.cpp	/^void GSM3MobileServerService::endWrite()$/;"	f	class:GSM3MobileServerService
endWrite	./GSM/GSM3MobileServerService.cpp	/^void GSM3MobileServerService::endWrite()$/;"	f	class:GSM3MobileServerService
endWriteSocketContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::endWriteSocketContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
endWriteSocketContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::endWriteSocketContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
ENDWRITESOCKET	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
ENDWRITESOCKET	./GSM/GSM3ShieldV1BaseProvider.h	/^	ATTACHGPRS, DETACHGPRS, CONNECTTCPCLIENT, DISCONNECTTCP, BEGINWRITESOCKET, ENDWRITESOCKET, $/;"	e	enum:GSM3_commandType_e
endWriteSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::endWriteSocket()$/;"	f	class:GSM3ShieldV1ClientProvider
endWriteSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::endWriteSocket()$/;"	f	class:GSM3ShieldV1ClientProvider
endWriteSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::endWriteSocket()$/;"	f	class:GSM3ShieldV1MultiClientProvider
endWriteSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::endWriteSocket()$/;"	f	class:GSM3ShieldV1MultiClientProvider
eProtMode	./WiFi/utility/server_drv.h	/^typedef enum eProtMode {TCP_MODE, UDP_MODE}tProtMode;$/;"	g
eProtMode	./WiFi/utility/server_drv.h	/^typedef enum eProtMode {TCP_MODE, UDP_MODE}tProtMode;$/;"	g
erase_blk_en	./Robot_Control/SdInfo.h	/^  unsigned erase_blk_en : 1;$/;"	m	struct:CSD
erase_blk_en	./Robot_Control/SdInfo.h	/^  unsigned erase_blk_en : 1;$/;"	m	struct:CSD
erase_blk_en	./SD/utility/SdInfo.h	/^  unsigned erase_blk_en : 1;$/;"	m	struct:CSDV1
erase_blk_en	./SD/utility/SdInfo.h	/^  unsigned erase_blk_en : 1;$/;"	m	struct:CSDV1
erase_blk_en	./SD/utility/SdInfo.h	/^  unsigned erase_blk_en : 1;$/;"	m	struct:CSDV2
erase_blk_en	./SD/utility/SdInfo.h	/^  unsigned erase_blk_en : 1;$/;"	m	struct:CSDV2
erase	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::erase(uint32_t firstBlock, uint32_t lastBlock) {$/;"	f	class:Sd2Card
erase	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::erase(uint32_t firstBlock, uint32_t lastBlock) {$/;"	f	class:Sd2Card
eraseSingleBlockEnable	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::eraseSingleBlockEnable(void) {$/;"	f	class:Sd2Card
eraseSingleBlockEnable	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::eraseSingleBlockEnable(void) {$/;"	f	class:Sd2Card
ERR_CMD	./WiFi/utility/wifi_spi.h	20;"	d
ERR_CMD	./WiFi/utility/wifi_spi.h	20;"	d
errorCode	./Robot_Control/SdCard.h	/^  uint8_t errorCode;$/;"	m	class:SdCard
errorCode	./Robot_Control/SdCard.h	/^  uint8_t errorCode;$/;"	m	class:SdCard
errorCode_	./SD/utility/Sd2Card.h	/^  uint8_t errorCode_;$/;"	m	class:Sd2Card
errorCode_	./SD/utility/Sd2Card.h	/^  uint8_t errorCode_;$/;"	m	class:Sd2Card
errorCode	./SD/utility/Sd2Card.h	/^  uint8_t errorCode(void) const {return errorCode_;}$/;"	f	class:Sd2Card
errorCode	./SD/utility/Sd2Card.h	/^  uint8_t errorCode(void) const {return errorCode_;}$/;"	f	class:Sd2Card
errorData	./Robot_Control/SdCard.h	/^  uint8_t errorData;$/;"	m	class:SdCard
errorData	./Robot_Control/SdCard.h	/^  uint8_t errorData;$/;"	m	class:SdCard
errorData	./SD/utility/Sd2Card.h	/^  uint8_t errorData(void) const {return status_;}$/;"	f	class:Sd2Card
errorData	./SD/utility/Sd2Card.h	/^  uint8_t errorData(void) const {return status_;}$/;"	f	class:Sd2Card
ERROR	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
ERROR	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
error	./Robot_Control/SdCard.cpp	/^void SdCard::error(uint8_t code) {$/;"	f	class:SdCard
error	./Robot_Control/SdCard.cpp	/^void SdCard::error(uint8_t code) {$/;"	f	class:SdCard
error	./Robot_Control/SdCard.cpp	/^void SdCard::error(uint8_t code, uint8_t data) {$/;"	f	class:SdCard
error	./Robot_Control/SdCard.cpp	/^void SdCard::error(uint8_t code, uint8_t data) {$/;"	f	class:SdCard
error	./SD/utility/Sd2Card.h	/^  void error(uint8_t code) {errorCode_ = code;}$/;"	f	class:Sd2Card
error	./SD/utility/Sd2Card.h	/^  void error(uint8_t code) {errorCode_ = code;}$/;"	f	class:Sd2Card
_Esplora	./Esplora/Esplora.cpp	/^_Esplora::_Esplora() {$/;"	f	class:_Esplora
_Esplora	./Esplora/Esplora.cpp	/^_Esplora::_Esplora() {$/;"	f	class:_Esplora
Esplora	./Esplora/Esplora.cpp	/^_Esplora Esplora;$/;"	v
Esplora	./Esplora/Esplora.cpp	/^_Esplora Esplora;$/;"	v
_Esplora	./Esplora/Esplora.h	/^class _Esplora {$/;"	c
_Esplora	./Esplora/Esplora.h	/^class _Esplora {$/;"	c
ESPLORA_H_	./Esplora/Esplora.h	22;"	d
ESPLORA_H_	./Esplora/Esplora.h	22;"	d
ESTABLISHED	./Ethernet/utility/w5100.h	/^  static const uint8_t ESTABLISHED = 0x17;$/;"	m	class:SnSR
ESTABLISHED	./Ethernet/utility/w5100.h	/^  static const uint8_t ESTABLISHED = 0x17;$/;"	m	class:SnSR
ESTABLISHED	./WiFi/utility/wifi_spi.h	/^  ESTABLISHED = 4,$/;"	e	enum:wl_tcp_state
ESTABLISHED	./WiFi/utility/wifi_spi.h	/^  ESTABLISHED = 4,$/;"	e	enum:wl_tcp_state
EthernetClass	./Ethernet/Ethernet.h	/^class EthernetClass {$/;"	c
EthernetClass	./Ethernet/Ethernet.h	/^class EthernetClass {$/;"	c
EthernetClient	./Ethernet/EthernetClient.cpp	/^EthernetClient::EthernetClient() : _sock(MAX_SOCK_NUM) {$/;"	f	class:EthernetClient
EthernetClient	./Ethernet/EthernetClient.cpp	/^EthernetClient::EthernetClient() : _sock(MAX_SOCK_NUM) {$/;"	f	class:EthernetClient
EthernetClient	./Ethernet/EthernetClient.cpp	/^EthernetClient::EthernetClient(uint8_t sock) : _sock(sock) {$/;"	f	class:EthernetClient
EthernetClient	./Ethernet/EthernetClient.cpp	/^EthernetClient::EthernetClient(uint8_t sock) : _sock(sock) {$/;"	f	class:EthernetClient
EthernetClient	./Ethernet/EthernetClient.h	/^class EthernetClient : public Client {$/;"	c
EthernetClient	./Ethernet/EthernetClient.h	/^class EthernetClient : public Client {$/;"	c
ethernetclient_h	./Ethernet/EthernetClient.h	2;"	d
ethernetclient_h	./Ethernet/EthernetClient.h	2;"	d
Ethernet	./Ethernet/Ethernet.cpp	/^EthernetClass Ethernet;$/;"	v
Ethernet	./Ethernet/Ethernet.cpp	/^EthernetClass Ethernet;$/;"	v
ethernet_h	./Ethernet/Ethernet.h	2;"	d
ethernet_h	./Ethernet/Ethernet.h	2;"	d
EthernetServer	./Ethernet/EthernetServer.cpp	/^EthernetServer::EthernetServer(uint16_t port)$/;"	f	class:EthernetServer
EthernetServer	./Ethernet/EthernetServer.cpp	/^EthernetServer::EthernetServer(uint16_t port)$/;"	f	class:EthernetServer
EthernetServer	./Ethernet/EthernetServer.h	/^class EthernetServer : $/;"	c
EthernetServer	./Ethernet/EthernetServer.h	/^class EthernetServer : $/;"	c
ethernetserver_h	./Ethernet/EthernetServer.h	2;"	d
ethernetserver_h	./Ethernet/EthernetServer.h	2;"	d
EthernetUDP	./Ethernet/EthernetUdp.cpp	/^EthernetUDP::EthernetUDP() : _sock(MAX_SOCK_NUM) {}$/;"	f	class:EthernetUDP
EthernetUDP	./Ethernet/EthernetUdp.cpp	/^EthernetUDP::EthernetUDP() : _sock(MAX_SOCK_NUM) {}$/;"	f	class:EthernetUDP
EthernetUDP	./Ethernet/EthernetUdp.h	/^class EthernetUDP : public UDP {$/;"	c
EthernetUDP	./Ethernet/EthernetUdp.h	/^class EthernetUDP : public UDP {$/;"	c
ethernetudp_h	./Ethernet/EthernetUdp.h	38;"	d
ethernetudp_h	./Ethernet/EthernetUdp.h	38;"	d
execCmdSn	./Ethernet/utility/w5100.cpp	/^void W5100Class::execCmdSn(SOCKET s, SockCMD _cmd) {$/;"	f	class:W5100Class
execCmdSn	./Ethernet/utility/w5100.cpp	/^void W5100Class::execCmdSn(SOCKET s, SockCMD _cmd) {$/;"	f	class:W5100Class
executeMultiByteCommand	./Firmata/Firmata.h	/^    byte executeMultiByteCommand; \/\/ execute this after getting multi-byte data$/;"	m	class:FirmataClass
executeMultiByteCommand	./Firmata/Firmata.h	/^    byte executeMultiByteCommand; \/\/ execute this after getting multi-byte data$/;"	m	class:FirmataClass
exists	./SD/SD.cpp	/^boolean SDClass::exists(char *filepath) {$/;"	f	class:SDClass
exists	./SD/SD.cpp	/^boolean SDClass::exists(char *filepath) {$/;"	f	class:SDClass
EXTENDED_ANALOG	./Firmata/Firmata.h	50;"	d
EXTENDED_ANALOG	./Firmata/Firmata.h	50;"	d
extractSubstring	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::extractSubstring(const char* from, const char* to, char* buffer, int bufsize)$/;"	f	class:GSM3CircularBuffer
extractSubstring	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::extractSubstring(const char* from, const char* to, char* buffer, int bufsize)$/;"	f	class:GSM3CircularBuffer
failedChecksumCount	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t failedChecksumCount;$/;"	m	class:TinyGPSPlus
failedChecksumCount	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t failedChecksumCount;$/;"	m	class:TinyGPSPlus
failedChecksum	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t failedChecksum()   const { return failedChecksumCount; }$/;"	f	class:TinyGPSPlus
failedChecksum	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t failedChecksum()   const { return failedChecksumCount; }$/;"	f	class:TinyGPSPlus
_failed_checksum	./TinyGPS/TinyGPS.h	/^  unsigned short _failed_checksum;$/;"	m	class:TinyGPS
_failed_checksum	./TinyGPS/TinyGPS.h	/^  unsigned short _failed_checksum;$/;"	m	class:TinyGPS
f_altitude	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_altitude()    $/;"	f	class:TinyGPS
f_altitude	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_altitude()    $/;"	f	class:TinyGPS
fastDigitalRead	./SD/utility/Sd2PinMap.h	/^  uint8_t fastDigitalRead(uint8_t pin) {$/;"	f
fastDigitalRead	./SD/utility/Sd2PinMap.h	/^  uint8_t fastDigitalRead(uint8_t pin) {$/;"	f
fastDigitalWrite	./SD/utility/Sd2PinMap.h	/^  void fastDigitalWrite(uint8_t pin, uint8_t value) {$/;"	f
fastDigitalWrite	./SD/utility/Sd2PinMap.h	/^  void fastDigitalWrite(uint8_t pin, uint8_t value) {$/;"	f
Fat16Config_h	./Robot_Control/Fat16Config.h	25;"	d
Fat16Config_h	./Robot_Control/Fat16Config.h	25;"	d
FAT16_DEBUG_SUPPORT	./Robot_Control/Fat16Config.h	37;"	d
FAT16_DEBUG_SUPPORT	./Robot_Control/Fat16Config.h	37;"	d
FAT16EOC_MIN	./Robot_Control/FatStructs.h	/^uint16_t const FAT16EOC_MIN = 0XFFF8;$/;"	v
FAT16EOC_MIN	./Robot_Control/FatStructs.h	/^uint16_t const FAT16EOC_MIN = 0XFFF8;$/;"	v
FAT16EOC_MIN	./SD/utility/FatStructs.h	/^uint16_t const FAT16EOC_MIN = 0XFFF8;$/;"	v
FAT16EOC_MIN	./SD/utility/FatStructs.h	/^uint16_t const FAT16EOC_MIN = 0XFFF8;$/;"	v
FAT16EOC	./Robot_Control/FatStructs.h	/^uint16_t const FAT16EOC = 0XFFFF;$/;"	v
FAT16EOC	./Robot_Control/FatStructs.h	/^uint16_t const FAT16EOC = 0XFFFF;$/;"	v
FAT16EOC	./SD/utility/FatStructs.h	/^uint16_t const FAT16EOC = 0XFFFF;$/;"	v
FAT16EOC	./SD/utility/FatStructs.h	/^uint16_t const FAT16EOC = 0XFFFF;$/;"	v
Fat16_h	./Robot_Control/Fat16.h	21;"	d
Fat16_h	./Robot_Control/Fat16.h	21;"	d
Fat16	./Robot_Control/Fat16.h	/^class Fat16 : public Print {$/;"	c
Fat16	./Robot_Control/Fat16.h	/^class Fat16 : public Print {$/;"	c
Fat16	./Robot_Control/Fat16.h	/^  Fat16(void) : flags_(0) {}$/;"	f	class:Fat16
Fat16	./Robot_Control/Fat16.h	/^  Fat16(void) : flags_(0) {}$/;"	f	class:Fat16
fat16	./SD/utility/SdFat.h	/^  uint16_t fat16[256];$/;"	m	union:cache_t
fat16	./SD/utility/SdFat.h	/^  uint16_t fat16[256];$/;"	m	union:cache_t
Fat16util_h	./Robot_Control/Fat16util.h	2;"	d
Fat16util_h	./Robot_Control/Fat16util.h	2;"	d
FAT16_VERSION	./Robot_Control/Fat16.h	34;"	d
FAT16_VERSION	./Robot_Control/Fat16.h	34;"	d
fat32BackBootBlock	./Robot_Control/FatStructs.h	/^  uint16_t fat32BackBootBlock;$/;"	m	struct:biosParmBlock
fat32BackBootBlock	./Robot_Control/FatStructs.h	/^  uint16_t fat32BackBootBlock;$/;"	m	struct:biosParmBlock
fat32BackBootBlock	./SD/utility/FatStructs.h	/^  uint16_t fat32BackBootBlock;$/;"	m	struct:biosParmBlock
fat32BackBootBlock	./SD/utility/FatStructs.h	/^  uint16_t fat32BackBootBlock;$/;"	m	struct:biosParmBlock
fat32BootSector	./Robot_Control/FatStructs.h	/^struct fat32BootSector {$/;"	s
fat32BootSector	./Robot_Control/FatStructs.h	/^struct fat32BootSector {$/;"	s
fat32BootSector	./SD/utility/FatStructs.h	/^struct fat32BootSector {$/;"	s
fat32BootSector	./SD/utility/FatStructs.h	/^struct fat32BootSector {$/;"	s
FAT32EOC_MIN	./Robot_Control/FatStructs.h	/^uint32_t const FAT32EOC_MIN = 0X0FFFFFF8;$/;"	v
FAT32EOC_MIN	./Robot_Control/FatStructs.h	/^uint32_t const FAT32EOC_MIN = 0X0FFFFFF8;$/;"	v
FAT32EOC_MIN	./SD/utility/FatStructs.h	/^uint32_t const FAT32EOC_MIN = 0X0FFFFFF8;$/;"	v
FAT32EOC_MIN	./SD/utility/FatStructs.h	/^uint32_t const FAT32EOC_MIN = 0X0FFFFFF8;$/;"	v
FAT32EOC	./Robot_Control/FatStructs.h	/^uint32_t const FAT32EOC = 0X0FFFFFFF;$/;"	v
FAT32EOC	./Robot_Control/FatStructs.h	/^uint32_t const FAT32EOC = 0X0FFFFFFF;$/;"	v
FAT32EOC	./SD/utility/FatStructs.h	/^uint32_t const FAT32EOC = 0X0FFFFFFF;$/;"	v
FAT32EOC	./SD/utility/FatStructs.h	/^uint32_t const FAT32EOC = 0X0FFFFFFF;$/;"	v
fat32Flags	./Robot_Control/FatStructs.h	/^  uint16_t fat32Flags;$/;"	m	struct:biosParmBlock
fat32Flags	./Robot_Control/FatStructs.h	/^  uint16_t fat32Flags;$/;"	m	struct:biosParmBlock
fat32Flags	./SD/utility/FatStructs.h	/^  uint16_t fat32Flags;$/;"	m	struct:biosParmBlock
fat32Flags	./SD/utility/FatStructs.h	/^  uint16_t fat32Flags;$/;"	m	struct:biosParmBlock
fat32FSInfo	./Robot_Control/FatStructs.h	/^  uint16_t fat32FSInfo;$/;"	m	struct:biosParmBlock
fat32FSInfo	./Robot_Control/FatStructs.h	/^  uint16_t fat32FSInfo;$/;"	m	struct:biosParmBlock
fat32FSInfo	./SD/utility/FatStructs.h	/^  uint16_t fat32FSInfo;$/;"	m	struct:biosParmBlock
fat32FSInfo	./SD/utility/FatStructs.h	/^  uint16_t fat32FSInfo;$/;"	m	struct:biosParmBlock
FAT32MASK	./Robot_Control/FatStructs.h	/^uint32_t const FAT32MASK = 0X0FFFFFFF;$/;"	v
FAT32MASK	./Robot_Control/FatStructs.h	/^uint32_t const FAT32MASK = 0X0FFFFFFF;$/;"	v
FAT32MASK	./SD/utility/FatStructs.h	/^uint32_t const FAT32MASK = 0X0FFFFFFF;$/;"	v
FAT32MASK	./SD/utility/FatStructs.h	/^uint32_t const FAT32MASK = 0X0FFFFFFF;$/;"	v
fat32Reserved	./Robot_Control/FatStructs.h	/^  uint8_t  fat32Reserved[12];$/;"	m	struct:biosParmBlock
fat32Reserved	./Robot_Control/FatStructs.h	/^  uint8_t  fat32Reserved[12];$/;"	m	struct:biosParmBlock
fat32Reserved	./SD/utility/FatStructs.h	/^  uint8_t  fat32Reserved[12];$/;"	m	struct:biosParmBlock
fat32Reserved	./SD/utility/FatStructs.h	/^  uint8_t  fat32Reserved[12];$/;"	m	struct:biosParmBlock
fat32RootCluster	./Robot_Control/FatStructs.h	/^  uint32_t fat32RootCluster;$/;"	m	struct:biosParmBlock
fat32RootCluster	./Robot_Control/FatStructs.h	/^  uint32_t fat32RootCluster;$/;"	m	struct:biosParmBlock
fat32RootCluster	./SD/utility/FatStructs.h	/^  uint32_t fat32RootCluster;$/;"	m	struct:biosParmBlock
fat32RootCluster	./SD/utility/FatStructs.h	/^  uint32_t fat32RootCluster;$/;"	m	struct:biosParmBlock
fat32	./SD/utility/SdFat.h	/^  uint32_t fat32[128];$/;"	m	union:cache_t
fat32	./SD/utility/SdFat.h	/^  uint32_t fat32[128];$/;"	m	union:cache_t
fat32Version	./Robot_Control/FatStructs.h	/^  uint16_t fat32Version;$/;"	m	struct:biosParmBlock
fat32Version	./Robot_Control/FatStructs.h	/^  uint16_t fat32Version;$/;"	m	struct:biosParmBlock
fat32Version	./SD/utility/FatStructs.h	/^  uint16_t fat32Version;$/;"	m	struct:biosParmBlock
fat32Version	./SD/utility/FatStructs.h	/^  uint16_t fat32Version;$/;"	m	struct:biosParmBlock
fatCount_	./Robot_Control/Fat16.cpp	/^uint8_t  Fat16::fatCount_;               \/\/ number of file allocation tables$/;"	m	class:Fat16	file:
fatCount_	./Robot_Control/Fat16.cpp	/^uint8_t  Fat16::fatCount_;               \/\/ number of file allocation tables$/;"	m	class:Fat16	file:
fatCount_	./Robot_Control/Fat16.h	/^  static uint8_t  fatCount_;           \/\/ number of FATs$/;"	m	class:Fat16
fatCount_	./Robot_Control/Fat16.h	/^  static uint8_t  fatCount_;           \/\/ number of FATs$/;"	m	class:Fat16
fatCount	./Robot_Control/FatStructs.h	/^  uint8_t  fatCount;$/;"	m	struct:biosParmBlock
fatCount	./Robot_Control/FatStructs.h	/^  uint8_t  fatCount;$/;"	m	struct:biosParmBlock
fatCount	./SD/utility/FatStructs.h	/^  uint8_t  fatCount;$/;"	m	struct:biosParmBlock
fatCount	./SD/utility/FatStructs.h	/^  uint8_t  fatCount;$/;"	m	struct:biosParmBlock
fatCount_	./SD/utility/SdFat.h	/^  uint8_t fatCount_;            \/\/ number of FATs on volume$/;"	m	class:SdVolume
fatCount_	./SD/utility/SdFat.h	/^  uint8_t fatCount_;            \/\/ number of FATs on volume$/;"	m	class:SdVolume
fatCount	./SD/utility/SdFat.h	/^  uint8_t fatCount(void) const {return fatCount_;}$/;"	f	class:SdVolume
fatCount	./SD/utility/SdFat.h	/^  uint8_t fatCount(void) const {return fatCount_;}$/;"	f	class:SdVolume
FAT_DATE	./Robot_Control/Fat16.h	/^static inline uint16_t FAT_DATE(uint16_t year, uint8_t month, uint8_t day) {$/;"	f
FAT_DATE	./Robot_Control/Fat16.h	/^static inline uint16_t FAT_DATE(uint16_t year, uint8_t month, uint8_t day) {$/;"	f
FAT_DATE	./SD/utility/SdFat.h	/^static inline uint16_t FAT_DATE(uint16_t year, uint8_t month, uint8_t day) {$/;"	f
FAT_DATE	./SD/utility/SdFat.h	/^static inline uint16_t FAT_DATE(uint16_t year, uint8_t month, uint8_t day) {$/;"	f
FAT_DAY	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_DAY(uint16_t fatDate) {$/;"	f
FAT_DAY	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_DAY(uint16_t fatDate) {$/;"	f
FAT_DAY	./SD/utility/SdFat.h	/^static inline uint8_t FAT_DAY(uint16_t fatDate) {$/;"	f
FAT_DAY	./SD/utility/SdFat.h	/^static inline uint8_t FAT_DAY(uint16_t fatDate) {$/;"	f
FAT_DEFAULT_DATE	./Robot_Control/Fat16.h	/^uint16_t const FAT_DEFAULT_DATE = ((2000 - 1980) << 9) | (1 << 5) | 1;$/;"	v
FAT_DEFAULT_DATE	./Robot_Control/Fat16.h	/^uint16_t const FAT_DEFAULT_DATE = ((2000 - 1980) << 9) | (1 << 5) | 1;$/;"	v
FAT_DEFAULT_DATE	./SD/utility/SdFat.h	/^uint16_t const FAT_DEFAULT_DATE = ((2000 - 1980) << 9) | (1 << 5) | 1;$/;"	v
FAT_DEFAULT_DATE	./SD/utility/SdFat.h	/^uint16_t const FAT_DEFAULT_DATE = ((2000 - 1980) << 9) | (1 << 5) | 1;$/;"	v
FAT_DEFAULT_TIME	./Robot_Control/Fat16.h	/^uint16_t const FAT_DEFAULT_TIME = (1 << 11);$/;"	v
FAT_DEFAULT_TIME	./Robot_Control/Fat16.h	/^uint16_t const FAT_DEFAULT_TIME = (1 << 11);$/;"	v
FAT_DEFAULT_TIME	./SD/utility/SdFat.h	/^uint16_t const FAT_DEFAULT_TIME = (1 << 11);$/;"	v
FAT_DEFAULT_TIME	./SD/utility/SdFat.h	/^uint16_t const FAT_DEFAULT_TIME = (1 << 11);$/;"	v
FAT_FILE_TYPE_CLOSED	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_CLOSED = 0;$/;"	v
FAT_FILE_TYPE_CLOSED	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_CLOSED = 0;$/;"	v
FAT_FILE_TYPE_MIN_DIR	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_MIN_DIR = FAT_FILE_TYPE_ROOT16;$/;"	v
FAT_FILE_TYPE_MIN_DIR	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_MIN_DIR = FAT_FILE_TYPE_ROOT16;$/;"	v
FAT_FILE_TYPE_NORMAL	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_NORMAL = 1;$/;"	v
FAT_FILE_TYPE_NORMAL	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_NORMAL = 1;$/;"	v
FAT_FILE_TYPE_ROOT16	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_ROOT16 = 2;$/;"	v
FAT_FILE_TYPE_ROOT16	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_ROOT16 = 2;$/;"	v
FAT_FILE_TYPE_ROOT32	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_ROOT32 = 3;$/;"	v
FAT_FILE_TYPE_ROOT32	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_ROOT32 = 3;$/;"	v
FAT_FILE_TYPE_SUBDIR	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_SUBDIR = 4;$/;"	v
FAT_FILE_TYPE_SUBDIR	./SD/utility/SdFat.h	/^uint8_t const FAT_FILE_TYPE_SUBDIR = 4;$/;"	v
fatGet	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::fatGet(fat_t cluster, fat_t* value) {$/;"	f	class:Fat16
fatGet	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::fatGet(fat_t cluster, fat_t* value) {$/;"	f	class:Fat16
fatGet	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::fatGet(uint32_t cluster, uint32_t* value) const {$/;"	f	class:SdVolume
fatGet	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::fatGet(uint32_t cluster, uint32_t* value) const {$/;"	f	class:SdVolume
FAT_HOUR	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_HOUR(uint16_t fatTime) {$/;"	f
FAT_HOUR	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_HOUR(uint16_t fatTime) {$/;"	f
FAT_HOUR	./SD/utility/SdFat.h	/^static inline uint8_t FAT_HOUR(uint16_t fatTime) {$/;"	f
FAT_HOUR	./SD/utility/SdFat.h	/^static inline uint8_t FAT_HOUR(uint16_t fatTime) {$/;"	f
FAT_MINUTE	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_MINUTE(uint16_t fatTime) {$/;"	f
FAT_MINUTE	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_MINUTE(uint16_t fatTime) {$/;"	f
FAT_MINUTE	./SD/utility/SdFat.h	/^static inline uint8_t FAT_MINUTE(uint16_t fatTime) {$/;"	f
FAT_MINUTE	./SD/utility/SdFat.h	/^static inline uint8_t FAT_MINUTE(uint16_t fatTime) {$/;"	f
FAT_MONTH	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_MONTH(uint16_t fatDate) {$/;"	f
FAT_MONTH	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_MONTH(uint16_t fatDate) {$/;"	f
FAT_MONTH	./SD/utility/SdFat.h	/^static inline uint8_t FAT_MONTH(uint16_t fatDate) {$/;"	f
FAT_MONTH	./SD/utility/SdFat.h	/^static inline uint8_t FAT_MONTH(uint16_t fatDate) {$/;"	f
fatPutEOC	./SD/utility/SdFat.h	/^  uint8_t fatPutEOC(uint32_t cluster) {$/;"	f	class:SdVolume
fatPutEOC	./SD/utility/SdFat.h	/^  uint8_t fatPutEOC(uint32_t cluster) {$/;"	f	class:SdVolume
fatPut	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::fatPut(fat_t cluster, fat_t value) {$/;"	f	class:Fat16
fatPut	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::fatPut(fat_t cluster, fat_t value) {$/;"	f	class:Fat16
fatPut	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::fatPut(uint32_t cluster, uint32_t value) {$/;"	f	class:SdVolume
fatPut	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::fatPut(uint32_t cluster, uint32_t value) {$/;"	f	class:SdVolume
fat	./Robot_Control/Fat16.h	/^  fat_t   fat[256];$/;"	m	union:cache16_t
fat	./Robot_Control/Fat16.h	/^  fat_t   fat[256];$/;"	m	union:cache16_t
FAT_SECOND	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_SECOND(uint16_t fatTime) {$/;"	f
FAT_SECOND	./Robot_Control/Fat16.h	/^static inline uint8_t FAT_SECOND(uint16_t fatTime) {$/;"	f
FAT_SECOND	./SD/utility/SdFat.h	/^static inline uint8_t FAT_SECOND(uint16_t fatTime) {$/;"	f
FAT_SECOND	./SD/utility/SdFat.h	/^static inline uint8_t FAT_SECOND(uint16_t fatTime) {$/;"	f
fatStartBlock_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::fatStartBlock_;          \/\/ start of first FAT$/;"	m	class:Fat16	file:
fatStartBlock_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::fatStartBlock_;          \/\/ start of first FAT$/;"	m	class:Fat16	file:
fatStartBlock_	./Robot_Control/Fat16.h	/^  static uint32_t fatStartBlock_;      \/\/ start of first FAT$/;"	m	class:Fat16
fatStartBlock_	./Robot_Control/Fat16.h	/^  static uint32_t fatStartBlock_;      \/\/ start of first FAT$/;"	m	class:Fat16
fatStartBlock_	./SD/utility/SdFat.h	/^  uint32_t fatStartBlock_;      \/\/ start block for first FAT$/;"	m	class:SdVolume
fatStartBlock_	./SD/utility/SdFat.h	/^  uint32_t fatStartBlock_;      \/\/ start block for first FAT$/;"	m	class:SdVolume
fatStartBlock	./SD/utility/SdFat.h	/^  uint32_t fatStartBlock(void) const {return fatStartBlock_;}$/;"	f	class:SdVolume
fatStartBlock	./SD/utility/SdFat.h	/^  uint32_t fatStartBlock(void) const {return fatStartBlock_;}$/;"	f	class:SdVolume
FatStructs_h	./Robot_Control/FatStructs.h	21;"	d
FatStructs_h	./Robot_Control/FatStructs.h	21;"	d
FatStructs_h	./SD/utility/FatStructs.h	21;"	d
FatStructs_h	./SD/utility/FatStructs.h	21;"	d
FAT_TIME	./Robot_Control/Fat16.h	/^static inline uint16_t FAT_TIME(uint8_t hour, uint8_t minute, uint8_t second) {$/;"	f
FAT_TIME	./Robot_Control/Fat16.h	/^static inline uint16_t FAT_TIME(uint8_t hour, uint8_t minute, uint8_t second) {$/;"	f
FAT_TIME	./SD/utility/SdFat.h	/^static inline uint16_t FAT_TIME(uint8_t hour, uint8_t minute, uint8_t second) {$/;"	f
FAT_TIME	./SD/utility/SdFat.h	/^static inline uint16_t FAT_TIME(uint8_t hour, uint8_t minute, uint8_t second) {$/;"	f
fat_t	./Robot_Control/Fat16.h	/^typedef uint16_t fat_t;$/;"	t
fat_t	./Robot_Control/Fat16.h	/^typedef uint16_t fat_t;$/;"	t
fatType	./SD/utility/SdFat.h	/^  uint8_t fatType(void) const {return fatType_;}$/;"	f	class:SdVolume
fatType	./SD/utility/SdFat.h	/^  uint8_t fatType(void) const {return fatType_;}$/;"	f	class:SdVolume
fatType_	./SD/utility/SdFat.h	/^  uint8_t fatType_;             \/\/ volume type (12, 16, OR 32)$/;"	m	class:SdVolume
fatType_	./SD/utility/SdFat.h	/^  uint8_t fatType_;             \/\/ volume type (12, 16, OR 32)$/;"	m	class:SdVolume
FAT_YEAR	./Robot_Control/Fat16.h	/^static inline uint16_t FAT_YEAR(uint16_t fatDate) {$/;"	f
FAT_YEAR	./Robot_Control/Fat16.h	/^static inline uint16_t FAT_YEAR(uint16_t fatDate) {$/;"	f
FAT_YEAR	./SD/utility/SdFat.h	/^static inline uint16_t FAT_YEAR(uint16_t fatDate) {$/;"	f
FAT_YEAR	./SD/utility/SdFat.h	/^static inline uint16_t FAT_YEAR(uint16_t fatDate) {$/;"	f
fbs	./Robot_Control/Fat16.h	/^  fbs_t   fbs;$/;"	m	union:cache16_t
fbs	./Robot_Control/Fat16.h	/^  fbs_t   fbs;$/;"	m	union:cache16_t
fbs	./SD/utility/SdFat.h	/^  fbs_t    fbs;$/;"	m	union:cache_t
fbs	./SD/utility/SdFat.h	/^  fbs_t    fbs;$/;"	m	union:cache_t
fbs_t	./Robot_Control/FatStructs.h	/^typedef struct fat32BootSector fbs_t;$/;"	t	typeref:struct:fat32BootSector
fbs_t	./Robot_Control/FatStructs.h	/^typedef struct fat32BootSector fbs_t;$/;"	t	typeref:struct:fat32BootSector
fbs_t	./SD/utility/FatStructs.h	/^typedef struct fat32BootSector fbs_t;$/;"	t	typeref:struct:fat32BootSector
fbs_t	./SD/utility/FatStructs.h	/^typedef struct fat32BootSector fbs_t;$/;"	t	typeref:struct:fat32BootSector
f_course	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_course()$/;"	f	class:TinyGPS
f_course	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_course()$/;"	f	class:TinyGPS
feet	./TinyGPSPlus/TinyGPS++.h	/^   double feet()         { return _GPS_FEET_PER_METER * value() \/ 100.0; }$/;"	f	struct:TinyGPSAltitude
feet	./TinyGPSPlus/TinyGPS++.h	/^   double feet()         { return _GPS_FEET_PER_METER * value() \/ 100.0; }$/;"	f	struct:TinyGPSAltitude
F_FILE_DIR_DIRTY	./Robot_Control/Fat16.h	/^  static uint8_t const F_FILE_DIR_DIRTY = 0X80;  \/\/ require sync directory entry$/;"	m	class:Fat16
F_FILE_DIR_DIRTY	./Robot_Control/Fat16.h	/^  static uint8_t const F_FILE_DIR_DIRTY = 0X80;  \/\/ require sync directory entry$/;"	m	class:Fat16
F_FILE_DIR_DIRTY	./SD/utility/SdFat.h	/^  static uint8_t const F_FILE_DIR_DIRTY = 0X80;$/;"	m	class:SdFile
F_FILE_DIR_DIRTY	./SD/utility/SdFat.h	/^  static uint8_t const F_FILE_DIR_DIRTY = 0X80;$/;"	m	class:SdFile
F_FILE_UNBUFFERED_READ	./SD/utility/SdFat.h	/^  static uint8_t const F_FILE_UNBUFFERED_READ = 0X40;$/;"	m	class:SdFile
F_FILE_UNBUFFERED_READ	./SD/utility/SdFat.h	/^  static uint8_t const F_FILE_UNBUFFERED_READ = 0X40;$/;"	m	class:SdFile
f_get_position	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::f_get_position(float *latitude, float *longitude, unsigned long *fix_age)$/;"	f	class:TinyGPS
f_get_position	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::f_get_position(float *latitude, float *longitude, unsigned long *fix_age)$/;"	f	class:TinyGPS
file_format_grp	./Robot_Control/SdInfo.h	/^  unsigned file_format_grp : 1;$/;"	m	struct:CSD
file_format_grp	./Robot_Control/SdInfo.h	/^  unsigned file_format_grp : 1;$/;"	m	struct:CSD
file_format_grp	./SD/utility/SdInfo.h	/^  unsigned file_format_grp : 1;$/;"	m	struct:CSDV1
file_format_grp	./SD/utility/SdInfo.h	/^  unsigned file_format_grp : 1;$/;"	m	struct:CSDV1
file_format_grp	./SD/utility/SdInfo.h	/^  unsigned file_format_grp : 1;$/;"	m	struct:CSDV2
file_format_grp	./SD/utility/SdInfo.h	/^  unsigned file_format_grp : 1;$/;"	m	struct:CSDV2
file_format	./Robot_Control/SdInfo.h	/^  unsigned file_format : 2;$/;"	m	struct:CSD
file_format	./Robot_Control/SdInfo.h	/^  unsigned file_format : 2;$/;"	m	struct:CSD
file_format	./SD/utility/SdInfo.h	/^  unsigned file_format : 2;$/;"	m	struct:CSDV1
file_format	./SD/utility/SdInfo.h	/^  unsigned file_format : 2;$/;"	m	struct:CSDV1
file_format	./SD/utility/SdInfo.h	/^  unsigned file_format : 2;$/;"	m	struct:CSDV2
file_format	./SD/utility/SdInfo.h	/^  unsigned file_format : 2;$/;"	m	struct:CSDV2
fileOpenMode	./SD/SD.h	/^  int fileOpenMode;$/;"	m	class:SDClass
fileOpenMode	./SD/SD.h	/^  int fileOpenMode;$/;"	m	class:SDClass
FILE_READ	./SD/SD.h	23;"	d
FILE_READ	./SD/SD.h	23;"	d
file	./Robot_Control/ArduinoRobot.h	/^		Fat16 file;$/;"	m	class:RobotControl
file	./Robot_Control/ArduinoRobot.h	/^		Fat16 file;$/;"	m	class:RobotControl
file	./Robot_Control/SquawkSD.cpp	/^static StreamFile file;$/;"	v	file:
file	./Robot_Control/SquawkSD.cpp	/^static StreamFile file;$/;"	v	file:
File	./SD/File.cpp	/^File::File(SdFile f, const char *n) {$/;"	f	class:File
File	./SD/File.cpp	/^File::File(SdFile f, const char *n) {$/;"	f	class:File
~File	./SD/File.cpp	/^File::~File(void) {$/;"	f	class:File
~File	./SD/File.cpp	/^File::~File(void) {$/;"	f	class:File
File	./SD/File.cpp	/^File::File(void) {$/;"	f	class:File
File	./SD/File.cpp	/^File::File(void) {$/;"	f	class:File
File	./SD/SD.h	/^class File : public Stream {$/;"	c
File	./SD/SD.h	/^class File : public Stream {$/;"	c
_file	./SD/SD.h	/^  SdFile *_file;  \/\/ underlying file pointer$/;"	m	class:File
_file	./SD/SD.h	/^  SdFile *_file;  \/\/ underlying file pointer$/;"	m	class:File
fileSize_	./Robot_Control/Fat16.h	/^  uint32_t fileSize_;      \/\/ fileSize$/;"	m	class:Fat16
fileSize_	./Robot_Control/Fat16.h	/^  uint32_t fileSize_;      \/\/ fileSize$/;"	m	class:Fat16
fileSize	./Robot_Control/Fat16.h	/^  uint32_t fileSize(void) const {return fileSize_;}$/;"	f	class:Fat16
fileSize	./Robot_Control/Fat16.h	/^  uint32_t fileSize(void) const {return fileSize_;}$/;"	f	class:Fat16
fileSize	./Robot_Control/FatStructs.h	/^  uint32_t fileSize;$/;"	m	struct:directoryEntry
fileSize	./Robot_Control/FatStructs.h	/^  uint32_t fileSize;$/;"	m	struct:directoryEntry
fileSize	./SD/utility/FatStructs.h	/^  uint32_t fileSize;$/;"	m	struct:directoryEntry
fileSize	./SD/utility/FatStructs.h	/^  uint32_t fileSize;$/;"	m	struct:directoryEntry
fileSize_	./SD/utility/SdFat.h	/^  uint32_t  fileSize_;      \/\/ file size in bytes$/;"	m	class:SdFile
fileSize_	./SD/utility/SdFat.h	/^  uint32_t  fileSize_;      \/\/ file size in bytes$/;"	m	class:SdFile
fileSize	./SD/utility/SdFat.h	/^  uint32_t fileSize(void) const {return fileSize_;}$/;"	f	class:SdFile
fileSize	./SD/utility/SdFat.h	/^  uint32_t fileSize(void) const {return fileSize_;}$/;"	f	class:SdFile
fileSystemType	./Robot_Control/FatStructs.h	/^  char     fileSystemType[8];$/;"	m	struct:fat32BootSector
fileSystemType	./Robot_Control/FatStructs.h	/^  char     fileSystemType[8];$/;"	m	struct:fat32BootSector
fileSystemType	./SD/utility/FatStructs.h	/^  char     fileSystemType[8];$/;"	m	struct:fat32BootSector
fileSystemType	./SD/utility/FatStructs.h	/^  char     fileSystemType[8];$/;"	m	struct:fat32BootSector
FILE_WRITE	./SD/SD.h	24;"	d
FILE_WRITE	./SD/SD.h	24;"	d
fillCircleHelper	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillCircleHelper(int16_t x0, int16_t y0, int16_t r,$/;"	f	class:Adafruit_GFX
fillCircleHelper	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillCircleHelper(int16_t x0, int16_t y0, int16_t r,$/;"	f	class:Adafruit_GFX
fillCircleHelper	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillCircleHelper(int16_t x0, int16_t y0, int16_t r,$/;"	f	class:Adafruit_GFX
fillCircleHelper	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillCircleHelper(int16_t x0, int16_t y0, int16_t r,$/;"	f	class:Adafruit_GFX
fillCircle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillCircle(int16_t x0, int16_t y0, int16_t r, $/;"	f	class:Adafruit_GFX
fillCircle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillCircle(int16_t x0, int16_t y0, int16_t r, $/;"	f	class:Adafruit_GFX
fillCircle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillCircle(int16_t x0, int16_t y0, int16_t r, $/;"	f	class:Adafruit_GFX
fillCircle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillCircle(int16_t x0, int16_t y0, int16_t r, $/;"	f	class:Adafruit_GFX
fillColor	./Robot_Control/Adafruit_GFX.h	/^  color fillColor;$/;"	m	class:Adafruit_GFX
fillColor	./Robot_Control/Adafruit_GFX.h	/^  color fillColor;$/;"	m	class:Adafruit_GFX
fillColor	./TFT/utility/Adafruit_GFX.h	/^  color fillColor;$/;"	m	class:Adafruit_GFX
fillColor	./TFT/utility/Adafruit_GFX.h	/^  color fillColor;$/;"	m	class:Adafruit_GFX
fillRect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillRect(int16_t x, int16_t y, int16_t w, int16_t h, $/;"	f	class:Adafruit_GFX
fillRect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillRect(int16_t x, int16_t y, int16_t w, int16_t h, $/;"	f	class:Adafruit_GFX
fillRect	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::fillRect(int16_t x, int16_t y, int16_t w, int16_t h,$/;"	f	class:Arduino_LCD
fillRect	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::fillRect(int16_t x, int16_t y, int16_t w, int16_t h,$/;"	f	class:Arduino_LCD
fillRect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillRect(int16_t x, int16_t y, int16_t w, int16_t h, $/;"	f	class:Adafruit_GFX
fillRect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillRect(int16_t x, int16_t y, int16_t w, int16_t h, $/;"	f	class:Adafruit_GFX
fillRect	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::fillRect(int16_t x, int16_t y, int16_t w, int16_t h,$/;"	f	class:Adafruit_ST7735
fillRect	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::fillRect(int16_t x, int16_t y, int16_t w, int16_t h,$/;"	f	class:Adafruit_ST7735
fill	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fill(color c) {$/;"	f	class:Adafruit_GFX
fill	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fill(color c) {$/;"	f	class:Adafruit_GFX
fill	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fill(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
fill	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fill(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
fillRoundRect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillRoundRect(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_GFX
fillRoundRect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillRoundRect(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_GFX
fillRoundRect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillRoundRect(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_GFX
fillRoundRect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillRoundRect(int16_t x, int16_t y, int16_t w,$/;"	f	class:Adafruit_GFX
fillScreen	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillScreen(uint16_t color) {$/;"	f	class:Adafruit_GFX
fillScreen	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillScreen(uint16_t color) {$/;"	f	class:Adafruit_GFX
fillScreen	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::fillScreen(uint16_t color) {$/;"	f	class:Arduino_LCD
fillScreen	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::fillScreen(uint16_t color) {$/;"	f	class:Arduino_LCD
fillScreen	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillScreen(uint16_t color) {$/;"	f	class:Adafruit_GFX
fillScreen	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillScreen(uint16_t color) {$/;"	f	class:Adafruit_GFX
fillScreen	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::fillScreen(uint16_t color) {$/;"	f	class:Adafruit_ST7735
fillScreen	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::fillScreen(uint16_t color) {$/;"	f	class:Adafruit_ST7735
fill	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fill(color c) {$/;"	f	class:Adafruit_GFX
fill	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fill(color c) {$/;"	f	class:Adafruit_GFX
fill	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fill(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
fill	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fill(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
fillTriangle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillTriangle ( int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
fillTriangle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillTriangle ( int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
fillTriangle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillTriangle ( int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
fillTriangle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::fillTriangle ( int16_t x0, int16_t y0,$/;"	f	class:Adafruit_GFX
finalWrite	./GSM/GSM3SoftSerial.cpp	/^size_t GSM3SoftSerial::finalWrite(uint8_t c)$/;"	f	class:GSM3SoftSerial
finalWrite	./GSM/GSM3SoftSerial.cpp	/^size_t GSM3SoftSerial::finalWrite(uint8_t c)$/;"	f	class:GSM3SoftSerial
finISR	./Servo/Servo.cpp	/^static void finISR(timer16_Sequence_t timer)$/;"	f	file:
finISR	./Servo/Servo.cpp	/^static void finISR(timer16_Sequence_t timer)$/;"	f	file:
FIN_WAIT_1	./WiFi/utility/wifi_spi.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:wl_tcp_state
FIN_WAIT_1	./WiFi/utility/wifi_spi.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:wl_tcp_state
FIN_WAIT_2	./WiFi/utility/wifi_spi.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:wl_tcp_state
FIN_WAIT_2	./WiFi/utility/wifi_spi.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:wl_tcp_state
FIN_WAIT	./Ethernet/utility/w5100.h	/^  static const uint8_t FIN_WAIT    = 0x18;$/;"	m	class:SnSR
FIN_WAIT	./Ethernet/utility/w5100.h	/^  static const uint8_t FIN_WAIT    = 0x18;$/;"	m	class:SnSR
Firmata_Boards_h	./Firmata/Boards.h	4;"	d
Firmata_Boards_h	./Firmata/Boards.h	4;"	d
FIRMATA_BUGFIX_VERSION	./Firmata/Firmata.h	24;"	d
FIRMATA_BUGFIX_VERSION	./Firmata/Firmata.h	24;"	d
FirmataClass	./Firmata/Firmata.cpp	/^FirmataClass::FirmataClass(Stream &s) : FirmataSerial(s)$/;"	f	class:FirmataClass
FirmataClass	./Firmata/Firmata.cpp	/^FirmataClass::FirmataClass(Stream &s) : FirmataSerial(s)$/;"	f	class:FirmataClass
FirmataClass	./Firmata/Firmata.h	/^class FirmataClass$/;"	c
FirmataClass	./Firmata/Firmata.h	/^class FirmataClass$/;"	c
Firmata_h	./Firmata/Firmata.h	14;"	d
Firmata_h	./Firmata/Firmata.h	14;"	d
FIRMATA_MAJOR_VERSION	./Firmata/Firmata.h	22;"	d
FIRMATA_MAJOR_VERSION	./Firmata/Firmata.h	22;"	d
FIRMATA_MINOR_VERSION	./Firmata/Firmata.h	23;"	d
FIRMATA_MINOR_VERSION	./Firmata/Firmata.h	23;"	d
FirmataSerial	./Firmata/Firmata.h	/^    Stream &FirmataSerial;$/;"	m	class:FirmataClass
FirmataSerial	./Firmata/Firmata.h	/^    Stream &FirmataSerial;$/;"	m	class:FirmataClass
FIRMATA_STRING	./Firmata/Firmata.h	62;"	d
FIRMATA_STRING	./Firmata/Firmata.h	62;"	d
firmwareVersionCount	./Firmata/Firmata.h	/^    byte firmwareVersionCount;$/;"	m	class:FirmataClass
firmwareVersionCount	./Firmata/Firmata.h	/^    byte firmwareVersionCount;$/;"	m	class:FirmataClass
firmwareVersionVector	./Firmata/Firmata.h	/^    byte *firmwareVersionVector;$/;"	m	class:FirmataClass
firmwareVersionVector	./Firmata/Firmata.h	/^    byte *firmwareVersionVector;$/;"	m	class:FirmataClass
firmwareVersion	./WiFi/WiFi.cpp	/^char* WiFiClass::firmwareVersion()$/;"	f	class:WiFiClass
firmwareVersion	./WiFi/WiFi.cpp	/^char* WiFiClass::firmwareVersion()$/;"	f	class:WiFiClass
firstClusterHigh	./Robot_Control/FatStructs.h	/^  uint16_t firstClusterHigh;$/;"	m	struct:directoryEntry
firstClusterHigh	./Robot_Control/FatStructs.h	/^  uint16_t firstClusterHigh;$/;"	m	struct:directoryEntry
firstClusterHigh	./SD/utility/FatStructs.h	/^  uint16_t firstClusterHigh;$/;"	m	struct:directoryEntry
firstClusterHigh	./SD/utility/FatStructs.h	/^  uint16_t firstClusterHigh;$/;"	m	struct:directoryEntry
firstClusterLow	./Robot_Control/FatStructs.h	/^  uint16_t firstClusterLow;$/;"	m	struct:directoryEntry
firstClusterLow	./Robot_Control/FatStructs.h	/^  uint16_t firstClusterLow;$/;"	m	struct:directoryEntry
firstClusterLow	./SD/utility/FatStructs.h	/^  uint16_t firstClusterLow;$/;"	m	struct:directoryEntry
firstClusterLow	./SD/utility/FatStructs.h	/^  uint16_t firstClusterLow;$/;"	m	struct:directoryEntry
firstCluster_	./Robot_Control/Fat16.h	/^  fat_t firstCluster_;     \/\/ first cluster of file$/;"	m	class:Fat16
firstCluster_	./Robot_Control/Fat16.h	/^  fat_t firstCluster_;     \/\/ first cluster of file$/;"	m	class:Fat16
firstCluster_	./SD/utility/SdFat.h	/^  uint32_t  firstCluster_;  \/\/ first cluster of file$/;"	m	class:SdFile
firstCluster_	./SD/utility/SdFat.h	/^  uint32_t  firstCluster_;  \/\/ first cluster of file$/;"	m	class:SdFile
firstCluster	./SD/utility/SdFat.h	/^  uint32_t firstCluster(void) const {return firstCluster_;}$/;"	f	class:SdFile
firstCluster	./SD/utility/SdFat.h	/^  uint32_t firstCluster(void) const {return firstCluster_;}$/;"	f	class:SdFile
firstSector	./Robot_Control/FatStructs.h	/^  uint32_t firstSector;$/;"	m	struct:partitionTable
firstSector	./Robot_Control/FatStructs.h	/^  uint32_t firstSector;$/;"	m	struct:partitionTable
firstSector	./SD/utility/FatStructs.h	/^  uint32_t firstSector;$/;"	m	struct:partitionTable
firstSector	./SD/utility/FatStructs.h	/^  uint32_t firstSector;$/;"	m	struct:partitionTable
first	./SoftwareServo/SoftwareServo.cpp	/^SoftwareServo *SoftwareServo::first;$/;"	m	class:SoftwareServo	file:
first	./SoftwareServo/SoftwareServo.cpp	/^SoftwareServo *SoftwareServo::first;$/;"	m	class:SoftwareServo	file:
first	./SoftwareServo/SoftwareServo.h	/^    static SoftwareServo* first;$/;"	m	class:SoftwareServo
first	./SoftwareServo/SoftwareServo.h	/^    static SoftwareServo* first;$/;"	m	class:SoftwareServo
firstString	./GSM/GSM3CircularBuffer.h	/^		inline char* firstString(){return (char*)theBuffer+head;};$/;"	f	class:GSM3CircularBuffer
firstString	./GSM/GSM3CircularBuffer.h	/^		inline char* firstString(){return (char*)theBuffer+head;};$/;"	f	class:GSM3CircularBuffer
flagReadingSMS	./GSM/GSM3ShieldV1SMSProvider.h	/^		bool flagReadingSMS; \/\/ To detect first SMS char if not yet reading.$/;"	m	class:GSM3ShieldV1SMSProvider
flagReadingSMS	./GSM/GSM3ShieldV1SMSProvider.h	/^		bool flagReadingSMS; \/\/ To detect first SMS char if not yet reading.$/;"	m	class:GSM3ShieldV1SMSProvider
flagReadingSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		bool flagReadingSocket; \/\/In case socket data being read, update fullBufferSocket in the next buffer.$/;"	m	class:GSM3ShieldV1MultiClientProvider
flagReadingSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		bool flagReadingSocket; \/\/In case socket data being read, update fullBufferSocket in the next buffer.$/;"	m	class:GSM3ShieldV1MultiClientProvider
flags	./Ethernet/Dhcp.h	/^	uint16_t flags;$/;"	m	struct:_RIP_MSG_FIXED
flags	./Ethernet/Dhcp.h	/^	uint16_t flags;$/;"	m	struct:_RIP_MSG_FIXED
flags	./GSM/GSM3MobileClientService.h	/^		uint8_t flags;$/;"	m	class:GSM3MobileClientService
flags	./GSM/GSM3MobileClientService.h	/^		uint8_t flags;$/;"	m	class:GSM3MobileClientService
flags	./GSM/GSM3MobileServerService.h	/^		uint8_t flags;$/;"	m	class:GSM3MobileServerService
flags	./GSM/GSM3MobileServerService.h	/^		uint8_t flags;$/;"	m	class:GSM3MobileServerService
flags	./GSM/GSM3SMSService.h	/^		uint8_t flags;$/;"	m	class:GSM3SMSService
flags	./GSM/GSM3SMSService.h	/^		uint8_t flags;$/;"	m	class:GSM3SMSService
_flags	./GSM/GSM3SoftSerial.h	/^		uint8_t _flags;$/;"	m	class:GSM3SoftSerial
_flags	./GSM/GSM3SoftSerial.h	/^		uint8_t _flags;$/;"	m	class:GSM3SoftSerial
flags	./GSM/GSM3VoiceCallService.h	/^		uint8_t flags;$/;"	m	class:GSM3VoiceCallService
flags	./GSM/GSM3VoiceCallService.h	/^		uint8_t flags;$/;"	m	class:GSM3VoiceCallService
flags_	./Robot_Control/Fat16.h	/^  uint8_t flags_;          \/\/ see above for bit definitions$/;"	m	class:Fat16
flags_	./Robot_Control/Fat16.h	/^  uint8_t flags_;          \/\/ see above for bit definitions$/;"	m	class:Fat16
flags_	./SD/utility/SdFat.h	/^  uint8_t   flags_;         \/\/ See above for definition of flags_ bits$/;"	m	class:SdFile
flags_	./SD/utility/SdFat.h	/^  uint8_t   flags_;         \/\/ See above for definition of flags_ bits$/;"	m	class:SdFile
_flip	./TFT/utility/PImage.h	/^  bool     _flip; $/;"	m	class:PImage
_flip	./TFT/utility/PImage.h	/^  bool     _flip; $/;"	m	class:PImage
float	./SoftwareSerial/SoftwareSerial.h	108;"	d
float	./SoftwareSerial/SoftwareSerial.h	108;"	d
float	./TinyGPS/TinyGPS.h	152;"	d
float	./TinyGPS/TinyGPS.h	152;"	d
flush	./Ethernet/EthernetClient.cpp	/^void EthernetClient::flush() {$/;"	f	class:EthernetClient
flush	./Ethernet/EthernetClient.cpp	/^void EthernetClient::flush() {$/;"	f	class:EthernetClient
flush	./Ethernet/EthernetUdp.cpp	/^void EthernetUDP::flush()$/;"	f	class:EthernetUDP
flush	./Ethernet/EthernetUdp.cpp	/^void EthernetUDP::flush()$/;"	f	class:EthernetUDP
flush	./GSM/GSM3CircularBuffer.cpp	/^void GSM3CircularBuffer::flush()$/;"	f	class:GSM3CircularBuffer
flush	./GSM/GSM3CircularBuffer.cpp	/^void GSM3CircularBuffer::flush()$/;"	f	class:GSM3CircularBuffer
flush	./GSM/GSM3MobileClientService.cpp	/^void GSM3MobileClientService::flush()$/;"	f	class:GSM3MobileClientService
flush	./GSM/GSM3MobileClientService.cpp	/^void GSM3MobileClientService::flush()$/;"	f	class:GSM3MobileClientService
flush	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::flush()$/;"	f	class:GSM3ShieldV1DirectModemProvider
flush	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::flush()$/;"	f	class:GSM3ShieldV1DirectModemProvider
flush	./GSM/GSM3SMSService.cpp	/^void GSM3SMSService::flush()$/;"	f	class:GSM3SMSService
flush	./GSM/GSM3SMSService.cpp	/^void GSM3SMSService::flush()$/;"	f	class:GSM3SMSService
flush	./Robot_Control/Wire.cpp	/^void TwoWire::flush(void)$/;"	f	class:TwoWire
flush	./Robot_Control/Wire.cpp	/^void TwoWire::flush(void)$/;"	f	class:TwoWire
flush	./SD/File.cpp	/^void File::flush() {$/;"	f	class:File
flush	./SD/File.cpp	/^void File::flush() {$/;"	f	class:File
flushSMSContinue	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::flushSMSContinue()$/;"	f	class:GSM3ShieldV1SMSProvider
flushSMSContinue	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::flushSMSContinue()$/;"	f	class:GSM3ShieldV1SMSProvider
flushSMS	./GSM/GSM3MobileMockupProvider.cpp	/^void GSM3MobileMockupProvider::flushSMS()$/;"	f	class:GSM3MobileMockupProvider
flushSMS	./GSM/GSM3MobileMockupProvider.cpp	/^void GSM3MobileMockupProvider::flushSMS()$/;"	f	class:GSM3MobileMockupProvider
flushSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline void flushSMS(){return;};$/;"	f	class:GSM3MobileSMSProvider
flushSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline void flushSMS(){return;};$/;"	f	class:GSM3MobileSMSProvider
FLUSHSMS	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
FLUSHSMS	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
flushSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::flushSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
flushSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::flushSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
flushSocketContinue	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::flushSocketContinue()$/;"	f	class:GSM3ShieldV1ClientProvider
flushSocketContinue	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::flushSocketContinue()$/;"	f	class:GSM3ShieldV1ClientProvider
flushSocketContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::flushSocketContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
flushSocketContinue	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::flushSocketContinue()$/;"	f	class:GSM3ShieldV1MultiClientProvider
flushSocket	./GSM/GSM3MobileMockupProvider.cpp	/^void GSM3MobileMockupProvider::flushSocket(int idsocket)$/;"	f	class:GSM3MobileMockupProvider
flushSocket	./GSM/GSM3MobileMockupProvider.cpp	/^void GSM3MobileMockupProvider::flushSocket(int idsocket)$/;"	f	class:GSM3MobileMockupProvider
FLUSHSOCKET	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
FLUSHSOCKET	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
flushSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::flushSocket()$/;"	f	class:GSM3ShieldV1ClientProvider
flushSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::flushSocket()$/;"	f	class:GSM3ShieldV1ClientProvider
flushSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::flushSocket()$/;"	f	class:GSM3ShieldV1MultiClientProvider
flushSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::flushSocket()$/;"	f	class:GSM3ShieldV1MultiClientProvider
flush	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::flush()$/;"	f	class:SoftwareSerial
flush	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::flush()$/;"	f	class:SoftwareSerial
flush	./WiFi/WiFiClient.cpp	/^void WiFiClient::flush() {$/;"	f	class:WiFiClient
flush	./WiFi/WiFiClient.cpp	/^void WiFiClient::flush() {$/;"	f	class:WiFiClient
flush	./WiFi/WiFiUdp.cpp	/^void WiFiUDP::flush()$/;"	f	class:WiFiUDP
flush	./WiFi/WiFiUdp.cpp	/^void WiFiUDP::flush()$/;"	f	class:WiFiUDP
flush	./Wire/Wire.cpp	/^void TwoWire::flush(void)$/;"	f	class:TwoWire
flush	./Wire/Wire.cpp	/^void TwoWire::flush(void)$/;"	f	class:TwoWire
F_OFLAG	./Robot_Control/Fat16.h	/^  static uint8_t const F_OFLAG = O_ACCMODE | O_APPEND | O_SYNC;$/;"	m	class:Fat16
F_OFLAG	./Robot_Control/Fat16.h	/^  static uint8_t const F_OFLAG = O_ACCMODE | O_APPEND | O_SYNC;$/;"	m	class:Fat16
F_OFLAG	./SD/utility/SdFat.h	/^  static uint8_t const F_OFLAG = (O_ACCMODE | O_APPEND | O_SYNC);$/;"	m	class:SdFile
F_OFLAG	./SD/utility/SdFat.h	/^  static uint8_t const F_OFLAG = (O_ACCMODE | O_APPEND | O_SYNC);$/;"	m	class:SdFile
foreGround	./Robot_Control/ArduinoRobot.h	/^		uint16_t foreGround;\/\/foreground color$/;"	m	class:RobotControl
foreGround	./Robot_Control/ArduinoRobot.h	/^		uint16_t foreGround;\/\/foreground color$/;"	m	class:RobotControl
FORWARD	./AFMotor/AFMotor.h	108;"	d
FORWARD	./AFMotor/AFMotor.h	108;"	d
forwardstep1	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void forwardstep1() {  $/;"	f
forwardstep1	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void forwardstep1() {  $/;"	f
forwardstep2	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void forwardstep2() {  $/;"	f
forwardstep2	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void forwardstep2() {  $/;"	f
forwardstep	./AFMotor/examples/AFMotor_ConstantSpeed/AFMotor_ConstantSpeed.pde	/^void forwardstep() {  $/;"	f
forwardstep	./AFMotor/examples/AFMotor_ConstantSpeed/AFMotor_ConstantSpeed.pde	/^void forwardstep() {  $/;"	f
freeChain	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::freeChain(fat_t cluster) {$/;"	f	class:Fat16
freeChain	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::freeChain(fat_t cluster) {$/;"	f	class:Fat16
freeChain	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::freeChain(uint32_t cluster) {$/;"	f	class:SdVolume
freeChain	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::freeChain(uint32_t cluster) {$/;"	f	class:SdVolume
FreeRam	./Robot_Control/Fat16util.h	/^static int FreeRam(void) {$/;"	f
FreeRam	./Robot_Control/Fat16util.h	/^static int FreeRam(void) {$/;"	f
FreeRam	./SD/utility/SdFatUtil.h	/^static UNUSEDOK int FreeRam(void) {$/;"	f
FreeRam	./SD/utility/SdFatUtil.h	/^static UNUSEDOK int FreeRam(void) {$/;"	f
FREQ	./Robot_Control/Squawk.cpp	17;"	d	file:
FREQ	./Robot_Control/Squawk.cpp	17;"	d	file:
freq	./Robot_Control/Squawk.h	/^  uint16_t freq;$/;"	m	struct:__anon15
freq	./Robot_Control/Squawk.h	/^  uint16_t freq;$/;"	m	struct:__anon15
f	./Robot_Control/SquawkSD.cpp	/^    Fat16 f;$/;"	m	class:StreamFile	file:
f	./Robot_Control/SquawkSD.cpp	/^    Fat16 f;$/;"	m	class:StreamFile	file:
f	./Robot_Control/SquawkSD.h	/^  	Fat16 f;$/;"	m	class:SquawkSynthSD
f	./Robot_Control/SquawkSD.h	/^  	Fat16 f;$/;"	m	class:SquawkSynthSD
fromHex	./TinyGPSPlus/TinyGPS++.cpp	/^int TinyGPSPlus::fromHex(char a)$/;"	f	class:TinyGPSPlus
fromHex	./TinyGPSPlus/TinyGPS++.cpp	/^int TinyGPSPlus::fromHex(char a)$/;"	f	class:TinyGPSPlus
from_hex	./TinyGPS/TinyGPS.cpp	/^int TinyGPS::from_hex(char a) $/;"	f	class:TinyGPS
from_hex	./TinyGPS/TinyGPS.cpp	/^int TinyGPS::from_hex(char a) $/;"	f	class:TinyGPS
f_speed_kmph	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_speed_kmph()  $/;"	f	class:TinyGPS
f_speed_kmph	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_speed_kmph()  $/;"	f	class:TinyGPS
f_speed_knots	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_speed_knots() $/;"	f	class:TinyGPS
f_speed_knots	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_speed_knots() $/;"	f	class:TinyGPS
f_speed_mph	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_speed_mph()   $/;"	f	class:TinyGPS
f_speed_mph	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_speed_mph()   $/;"	f	class:TinyGPS
f_speed_mps	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_speed_mps()   $/;"	f	class:TinyGPS
f_speed_mps	./TinyGPS/TinyGPS.cpp	/^float TinyGPS::f_speed_mps()   $/;"	f	class:TinyGPS
fullBufferSMS	./GSM/GSM3ShieldV1SMSProvider.h	/^		bool fullBufferSMS; \/\/ To detect if the SMS being read needs another buffer. $/;"	m	class:GSM3ShieldV1SMSProvider
fullBufferSMS	./GSM/GSM3ShieldV1SMSProvider.h	/^		bool fullBufferSMS; \/\/ To detect if the SMS being read needs another buffer. $/;"	m	class:GSM3ShieldV1SMSProvider
fullBufferSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		bool fullBufferSocket;	\/\/To detect if the socket data being read needs another buffer.$/;"	m	class:GSM3ShieldV1MultiClientProvider
fullBufferSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		bool fullBufferSocket;	\/\/To detect if the socket data being read needs another buffer.$/;"	m	class:GSM3ShieldV1MultiClientProvider
F_UNUSED	./SD/utility/SdFat.h	/^  static uint8_t const F_UNUSED = 0X30;$/;"	m	class:SdFile
F_UNUSED	./SD/utility/SdFat.h	/^  static uint8_t const F_UNUSED = 0X30;$/;"	m	class:SdFile
fwVersion	./WiFi/utility/wifi_drv.cpp	/^char    WiFiDrv::fwVersion[] = {0};$/;"	m	class:WiFiDrv	file:
fwVersion	./WiFi/utility/wifi_drv.cpp	/^char    WiFiDrv::fwVersion[] = {0};$/;"	m	class:WiFiDrv	file:
fwVersion	./WiFi/utility/wifi_drv.h	/^	static char 	fwVersion[WL_FW_VER_LENGTH];$/;"	m	class:WiFiDrv
fwVersion	./WiFi/utility/wifi_drv.h	/^	static char 	fwVersion[WL_FW_VER_LENGTH];$/;"	m	class:WiFiDrv
fxc	./Robot_Control/Squawk.cpp	/^  uint8_t fxc, fxp, ixp;$/;"	m	struct:__anon17	file:
fxc	./Robot_Control/Squawk.cpp	/^  uint8_t fxc, fxp, ixp;$/;"	m	struct:__anon17	file:
fxm	./Robot_Control/Squawk.cpp	/^static fxm_t    fxm[4];$/;"	v	file:
fxm	./Robot_Control/Squawk.cpp	/^static fxm_t    fxm[4];$/;"	v	file:
fxm_t	./Robot_Control/Squawk.cpp	/^} fxm_t;$/;"	t	typeref:struct:__anon18	file:
fxm_t	./Robot_Control/Squawk.cpp	/^} fxm_t;$/;"	t	typeref:struct:__anon18	file:
fxp	./Robot_Control/Squawk.cpp	/^  uint8_t fxc, fxp, ixp;$/;"	m	struct:__anon17	file:
fxp	./Robot_Control/Squawk.cpp	/^  uint8_t fxc, fxp, ixp;$/;"	m	struct:__anon17	file:
fxp	./Robot_Control/Squawk.cpp	/^  uint8_t fxp;$/;"	m	struct:__anon16	file:
fxp	./Robot_Control/Squawk.cpp	/^  uint8_t fxp;$/;"	m	struct:__anon16	file:
gatewayIP	./Ethernet/Ethernet.cpp	/^IPAddress EthernetClass::gatewayIP()$/;"	f	class:EthernetClass
gatewayIP	./Ethernet/Ethernet.cpp	/^IPAddress EthernetClass::gatewayIP()$/;"	f	class:EthernetClass
_gatewayIp	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_gatewayIp[] = {0};$/;"	m	class:WiFiDrv	file:
_gatewayIp	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_gatewayIp[] = {0};$/;"	m	class:WiFiDrv	file:
_gatewayIp	./WiFi/utility/wifi_drv.h	/^	static uint8_t  _gatewayIp[WL_IPV4_LENGTH];$/;"	m	class:WiFiDrv
_gatewayIp	./WiFi/utility/wifi_drv.h	/^	static uint8_t  _gatewayIp[WL_IPV4_LENGTH];$/;"	m	class:WiFiDrv
gatewayIP	./WiFi/WiFi.cpp	/^IPAddress WiFiClass::gatewayIP()$/;"	f	class:WiFiClass
gatewayIP	./WiFi/WiFi.cpp	/^IPAddress WiFiClass::gatewayIP()$/;"	f	class:WiFiClass
GCC_VERSION	./SoftwareSerial/SoftwareSerial.h	44;"	d
GCC_VERSION	./SoftwareSerial/SoftwareSerial.h	44;"	d
GEARS_BMP	./Robot_Control/ArduinoRobot.h	38;"	d
GEARS_BMP	./Robot_Control/ArduinoRobot.h	38;"	d
genericCommand_rqc	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::genericCommand_rqc(const char* str, bool addCR)$/;"	f	class:GSM3ShieldV1ModemCore
genericCommand_rqc	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::genericCommand_rqc(const char* str, bool addCR)$/;"	f	class:GSM3ShieldV1ModemCore
genericCommand_rq	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::genericCommand_rq(const char* str, bool addCR)$/;"	f	class:GSM3ShieldV1ModemCore
genericCommand_rq	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::genericCommand_rq(const char* str, bool addCR)$/;"	f	class:GSM3ShieldV1ModemCore
genericCommand_rq	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::genericCommand_rq(PROGMEM prog_char str[], bool addCR)$/;"	f	class:GSM3ShieldV1ModemCore
genericCommand_rq	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::genericCommand_rq(PROGMEM prog_char str[], bool addCR)$/;"	f	class:GSM3ShieldV1ModemCore
genericParse_rsp	./GSM/GSM3ShieldV1ModemCore.cpp	/^bool GSM3ShieldV1ModemCore::genericParse_rsp(bool& rsp, char* string, char* string2)$/;"	f	class:GSM3ShieldV1ModemCore
genericParse_rsp	./GSM/GSM3ShieldV1ModemCore.cpp	/^bool GSM3ShieldV1ModemCore::genericParse_rsp(bool& rsp, char* string, char* string2)$/;"	f	class:GSM3ShieldV1ModemCore
getAnalogValueAt	./Robot_Control/Multiplexer.cpp	/^int Multiplexer::getAnalogValueAt(uint8_t num){$/;"	f	class:Multiplexer
getAnalogValueAt	./Robot_Control/Multiplexer.cpp	/^int Multiplexer::getAnalogValueAt(uint8_t num){$/;"	f	class:Multiplexer
getAnalogValueAt	./Robot_Motor/Multiplexer.cpp	/^int Multiplexer::getAnalogValueAt(uint8_t num){$/;"	f	class:Multiplexer
getAnalogValueAt	./Robot_Motor/Multiplexer.cpp	/^int Multiplexer::getAnalogValueAt(uint8_t num){$/;"	f	class:Multiplexer
getAnalogValue	./Robot_Control/Multiplexer.cpp	/^int Multiplexer::getAnalogValue(){$/;"	f	class:Multiplexer
getAnalogValue	./Robot_Control/Multiplexer.cpp	/^int Multiplexer::getAnalogValue(){$/;"	f	class:Multiplexer
getAnalogValue	./Robot_Motor/Multiplexer.cpp	/^int Multiplexer::getAnalogValue(){$/;"	f	class:Multiplexer
getAnalogValue	./Robot_Motor/Multiplexer.cpp	/^int Multiplexer::getAnalogValue(){$/;"	f	class:Multiplexer
GetAuthorizedSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::GetAuthorizedSMS(byte position, char *phone_number, char *SMS_text, byte max_SMS_len,$/;"	f	class:GSM
GetAuthorizedSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::GetAuthorizedSMS(byte position, char *phone_number, char *SMS_text, byte max_SMS_len,$/;"	f	class:GSM
getBand	./GSM/GSM3ShieldV1BandManagement.cpp	/^String GSM3ShieldV1BandManagement::getBand()$/;"	f	class:GSM3ShieldV1BandManagement
getBand	./GSM/GSM3ShieldV1BandManagement.cpp	/^String GSM3ShieldV1BandManagement::getBand()$/;"	f	class:GSM3ShieldV1BandManagement
GET_CLIENT_STATE_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    GET_CLIENT_STATE_TCP_CMD= 0x2F,$/;"	e	enum:__anon4
GET_CLIENT_STATE_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    GET_CLIENT_STATE_TCP_CMD= 0x2F,$/;"	e	enum:__anon4
getClientState	./WiFi/utility/server_drv.cpp	/^uint8_t ServerDrv::getClientState(uint8_t sock)$/;"	f	class:ServerDrv
getClientState	./WiFi/utility/server_drv.cpp	/^uint8_t ServerDrv::getClientState(uint8_t sock)$/;"	f	class:ServerDrv
getColLin	./Robot_Control/utility/VirtualKeyboard.cpp	/^int VirtualKeyboard::getColLin(int val){$/;"	f	class:VirtualKeyboard
getColLin	./Robot_Control/utility/VirtualKeyboard.cpp	/^int VirtualKeyboard::getColLin(int val){$/;"	f	class:VirtualKeyboard
getCol	./Robot_Control/utility/RobotTextManager.cpp	/^int TextManager::getCol(int colNum){$/;"	f	class:TextManager
getCol	./Robot_Control/utility/RobotTextManager.cpp	/^int TextManager::getCol(int colNum){$/;"	f	class:TextManager
getCommandCounter	./GSM/GSM3ShieldV1ModemCore.h	/^		uint8_t getCommandCounter(){return commandCounter;};$/;"	f	class:GSM3ShieldV1ModemCore
getCommandCounter	./GSM/GSM3ShieldV1ModemCore.h	/^		uint8_t getCommandCounter(){return commandCounter;};$/;"	f	class:GSM3ShieldV1ModemCore
getCommandError	./GSM/GSM3ShieldV1ModemCore.h	/^		uint8_t getCommandError(){return commandError;};$/;"	f	class:GSM3ShieldV1ModemCore
getCommandError	./GSM/GSM3ShieldV1ModemCore.h	/^		uint8_t getCommandError(){return commandError;};$/;"	f	class:GSM3ShieldV1ModemCore
GetCommLineStatus	./GSM_Shield/GSM_Shield.h	/^    inline byte GetCommLineStatus(void) {return comm_line_status;};$/;"	f	class:GSM
GetCommLineStatus	./GSM_Shield/GSM_Shield.h	/^    inline byte GetCommLineStatus(void) {return comm_line_status;};$/;"	f	class:GSM
getConnectionStatus	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::getConnectionStatus()$/;"	f	class:WiFiDrv
getConnectionStatus	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::getConnectionStatus()$/;"	f	class:WiFiDrv
GETCONNECTSTATUS	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
GETCONNECTSTATUS	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
GET_CONN_STATUS_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CONN_STATUS_CMD	= 0x20,$/;"	e	enum:__anon4
GET_CONN_STATUS_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CONN_STATUS_CMD	= 0x20,$/;"	e	enum:__anon4
GET_CURR_BSSID_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CURR_BSSID_CMD	= 0x24,$/;"	e	enum:__anon4
GET_CURR_BSSID_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CURR_BSSID_CMD	= 0x24,$/;"	e	enum:__anon4
GET_CURR_ENCT_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CURR_ENCT_CMD	= 0x26,$/;"	e	enum:__anon4
GET_CURR_ENCT_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CURR_ENCT_CMD	= 0x26,$/;"	e	enum:__anon4
getCurrentBSSID	./WiFi/utility/wifi_drv.cpp	/^uint8_t* WiFiDrv::getCurrentBSSID()$/;"	f	class:WiFiDrv
getCurrentBSSID	./WiFi/utility/wifi_drv.cpp	/^uint8_t* WiFiDrv::getCurrentBSSID()$/;"	f	class:WiFiDrv
getCurrentCarrier	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^String GSM3ShieldV1ScanNetworks::getCurrentCarrier()$/;"	f	class:GSM3ShieldV1ScanNetworks
getCurrentCarrier	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^String GSM3ShieldV1ScanNetworks::getCurrentCarrier()$/;"	f	class:GSM3ShieldV1ScanNetworks
getCurrentEncryptionType	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::getCurrentEncryptionType()$/;"	f	class:WiFiDrv
getCurrentEncryptionType	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::getCurrentEncryptionType()$/;"	f	class:WiFiDrv
getCurrentRSSI	./WiFi/utility/wifi_drv.cpp	/^int32_t WiFiDrv::getCurrentRSSI()$/;"	f	class:WiFiDrv
getCurrentRSSI	./WiFi/utility/wifi_drv.cpp	/^int32_t WiFiDrv::getCurrentRSSI()$/;"	f	class:WiFiDrv
getCurrentSSID	./WiFi/utility/wifi_drv.cpp	/^char* WiFiDrv::getCurrentSSID()$/;"	f	class:WiFiDrv
getCurrentSSID	./WiFi/utility/wifi_drv.cpp	/^char* WiFiDrv::getCurrentSSID()$/;"	f	class:WiFiDrv
GET_CURR_RSSI_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CURR_RSSI_CMD	= 0x25,$/;"	e	enum:__anon4
GET_CURR_RSSI_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CURR_RSSI_CMD	= 0x25,$/;"	e	enum:__anon4
GET_CURR_SSID_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CURR_SSID_CMD	= 0x23,$/;"	e	enum:__anon4
GET_CURR_SSID_CMD	./WiFi/utility/wifi_spi.h	/^	GET_CURR_SSID_CMD	= 0x23,$/;"	e	enum:__anon4
GET_DATABUF_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    GET_DATABUF_TCP_CMD		= 0x45,$/;"	e	enum:__anon4
GET_DATABUF_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    GET_DATABUF_TCP_CMD		= 0x45,$/;"	e	enum:__anon4
getDataBuf	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::getDataBuf(uint8_t sock, uint8_t *_data, uint16_t *_dataLen)$/;"	f	class:ServerDrv
getDataBuf	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::getDataBuf(uint8_t sock, uint8_t *_data, uint16_t *_dataLen)$/;"	f	class:ServerDrv
GET_DATA_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    GET_DATA_TCP_CMD	= 0x2C,$/;"	e	enum:__anon4
GET_DATA_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    GET_DATA_TCP_CMD	= 0x2C,$/;"	e	enum:__anon4
getData	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::getData(uint8_t sock, uint8_t *data, uint8_t peek)$/;"	f	class:ServerDrv
getData	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::getData(uint8_t sock, uint8_t *data, uint8_t peek)$/;"	f	class:ServerDrv
get_datetime	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::get_datetime(unsigned long *date, unsigned long *time, unsigned long *age)$/;"	f	class:TinyGPS
get_datetime	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::get_datetime(unsigned long *date, unsigned long *time, unsigned long *age)$/;"	f	class:TinyGPS
getDhcpServerIp	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getDhcpServerIp()$/;"	f	class:DhcpClass
getDhcpServerIp	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getDhcpServerIp()$/;"	f	class:DhcpClass
getDigitalValueAt	./Robot_Control/Multiplexer.cpp	/^bool Multiplexer::getDigitalValueAt(uint8_t num){$/;"	f	class:Multiplexer
getDigitalValueAt	./Robot_Control/Multiplexer.cpp	/^bool Multiplexer::getDigitalValueAt(uint8_t num){$/;"	f	class:Multiplexer
getDigitalValueAt	./Robot_Motor/Multiplexer.cpp	/^bool Multiplexer::getDigitalValueAt(uint8_t num){$/;"	f	class:Multiplexer
getDigitalValueAt	./Robot_Motor/Multiplexer.cpp	/^bool Multiplexer::getDigitalValueAt(uint8_t num){$/;"	f	class:Multiplexer
getDigitalValue	./Robot_Control/Multiplexer.cpp	/^bool Multiplexer::getDigitalValue(){$/;"	f	class:Multiplexer
getDigitalValue	./Robot_Control/Multiplexer.cpp	/^bool Multiplexer::getDigitalValue(){$/;"	f	class:Multiplexer
getDigitalValue	./Robot_Motor/Multiplexer.cpp	/^bool Multiplexer::getDigitalValue(){$/;"	f	class:Multiplexer
getDigitalValue	./Robot_Motor/Multiplexer.cpp	/^bool Multiplexer::getDigitalValue(){$/;"	f	class:Multiplexer
getDnsServerIp	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getDnsServerIp()$/;"	f	class:DhcpClass
getDnsServerIp	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getDnsServerIp()$/;"	f	class:DhcpClass
getEncTypeNetowrks	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::getEncTypeNetowrks(uint8_t networkItem)$/;"	f	class:WiFiDrv
getEncTypeNetowrks	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::getEncTypeNetowrks(uint8_t networkItem)$/;"	f	class:WiFiDrv
getFirstSocket	./WiFi/WiFiClient.cpp	/^uint8_t WiFiClient::getFirstSocket()$/;"	f	class:WiFiClient
getFirstSocket	./WiFi/WiFiClient.cpp	/^uint8_t WiFiClient::getFirstSocket()$/;"	f	class:WiFiClient
GET_FW_VERSION_CMD	./WiFi/utility/wifi_spi.h	/^	GET_FW_VERSION_CMD	= 0x37,$/;"	e	enum:__anon4
GET_FW_VERSION_CMD	./WiFi/utility/wifi_spi.h	/^	GET_FW_VERSION_CMD	= 0x37,$/;"	e	enum:__anon4
getFwVersion	./WiFi/utility/wifi_drv.cpp	/^char*  WiFiDrv::getFwVersion()$/;"	f	class:WiFiDrv
getFwVersion	./WiFi/utility/wifi_drv.cpp	/^char*  WiFiDrv::getFwVersion()$/;"	f	class:WiFiDrv
getGatewayIp	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getGatewayIp()$/;"	f	class:DhcpClass
getGatewayIp	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getGatewayIp()$/;"	f	class:DhcpClass
getGatewayIp	./Ethernet/utility/w5100.h	/^void W5100Class::getGatewayIp(uint8_t *_addr) {$/;"	f	class:W5100Class
getGatewayIp	./Ethernet/utility/w5100.h	/^void W5100Class::getGatewayIp(uint8_t *_addr) {$/;"	f	class:W5100Class
getGatewayIP	./WiFi/utility/wifi_drv.cpp	/^ void WiFiDrv::getGatewayIP(IPAddress& ip)$/;"	f	class:WiFiDrv
getGatewayIP	./WiFi/utility/wifi_drv.cpp	/^ void WiFiDrv::getGatewayIP(IPAddress& ip)$/;"	f	class:WiFiDrv
getHead	./GSM/GSM3CircularBuffer.h	/^		inline byte getHead(){return head;};$/;"	f	class:GSM3CircularBuffer
getHead	./GSM/GSM3CircularBuffer.h	/^		inline byte getHead(){return head;};$/;"	f	class:GSM3CircularBuffer
GET_HOST_BY_NAME_CMD	./WiFi/utility/wifi_spi.h	/^	GET_HOST_BY_NAME_CMD= 0x35,$/;"	e	enum:__anon4
GET_HOST_BY_NAME_CMD	./WiFi/utility/wifi_spi.h	/^	GET_HOST_BY_NAME_CMD= 0x35,$/;"	e	enum:__anon4
getHostByName	./Ethernet/Dns.cpp	/^int DNSClient::getHostByName(const char* aHostname, IPAddress& aResult)$/;"	f	class:DNSClient
getHostByName	./Ethernet/Dns.cpp	/^int DNSClient::getHostByName(const char* aHostname, IPAddress& aResult)$/;"	f	class:DNSClient
getHostByName	./WiFi/utility/wifi_drv.cpp	/^int WiFiDrv::getHostByName(const char* aHostname, IPAddress& aResult)$/;"	f	class:WiFiDrv
getHostByName	./WiFi/utility/wifi_drv.cpp	/^int WiFiDrv::getHostByName(const char* aHostname, IPAddress& aResult)$/;"	f	class:WiFiDrv
getHostByName	./WiFi/utility/wifi_drv.cpp	/^int WiFiDrv::getHostByName(IPAddress& aResult)$/;"	f	class:WiFiDrv
getHostByName	./WiFi/utility/wifi_drv.cpp	/^int WiFiDrv::getHostByName(IPAddress& aResult)$/;"	f	class:WiFiDrv
getICCIDContinue	./GSM/GSM3ShieldV1CellManagement.cpp	/^void GSM3ShieldV1CellManagement::getICCIDContinue()$/;"	f	class:GSM3ShieldV1CellManagement
getICCIDContinue	./GSM/GSM3ShieldV1CellManagement.cpp	/^void GSM3ShieldV1CellManagement::getICCIDContinue()$/;"	f	class:GSM3ShieldV1CellManagement
getICCID	./GSM/GSM3MobileCellManagement.h	/^		virtual inline int getICCID() {return 0;};$/;"	f	class:GSM3MobileCellManagement
getICCID	./GSM/GSM3MobileCellManagement.h	/^		virtual inline int getICCID() {return 0;};$/;"	f	class:GSM3MobileCellManagement
GETICCID	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
GETICCID	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
getICCID	./GSM/GSM3ShieldV1CellManagement.cpp	/^int GSM3ShieldV1CellManagement::getICCID(char *iccid)$/;"	f	class:GSM3ShieldV1CellManagement
getICCID	./GSM/GSM3ShieldV1CellManagement.cpp	/^int GSM3ShieldV1CellManagement::getICCID(char *iccid)$/;"	f	class:GSM3ShieldV1CellManagement
GET_IDX_ENCT_CMD	./WiFi/utility/wifi_spi.h	/^	GET_IDX_ENCT_CMD	= 0x33,$/;"	e	enum:__anon4
GET_IDX_ENCT_CMD	./WiFi/utility/wifi_spi.h	/^	GET_IDX_ENCT_CMD	= 0x33,$/;"	e	enum:__anon4
GET_IDX_RSSI_CMD	./WiFi/utility/wifi_spi.h	/^	GET_IDX_RSSI_CMD	= 0x32,$/;"	e	enum:__anon4
GET_IDX_RSSI_CMD	./WiFi/utility/wifi_spi.h	/^	GET_IDX_RSSI_CMD	= 0x32,$/;"	e	enum:__anon4
GET_IDX_SSID_CMD	./WiFi/utility/wifi_spi.h	/^	GET_IDX_SSID_CMD	= 0x31,$/;"	e	enum:__anon4
GET_IDX_SSID_CMD	./WiFi/utility/wifi_spi.h	/^	GET_IDX_SSID_CMD	= 0x31,$/;"	e	enum:__anon4
getIMEI	./GSM/GSM3ShieldV1ModemVerification.cpp	/^String GSM3ShieldV1ModemVerification::getIMEI()$/;"	f	class:GSM3ShieldV1ModemVerification
getIMEI	./GSM/GSM3ShieldV1ModemVerification.cpp	/^String GSM3ShieldV1ModemVerification::getIMEI()$/;"	f	class:GSM3ShieldV1ModemVerification
getInput	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::getInput(int lin, int col){$/;"	f	class:TextManager
getInput	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::getInput(int lin, int col){$/;"	f	class:TextManager
GET_IPADDR_CMD	./WiFi/utility/wifi_spi.h	/^	GET_IPADDR_CMD		= 0x21,$/;"	e	enum:__anon4
GET_IPADDR_CMD	./WiFi/utility/wifi_spi.h	/^	GET_IPADDR_CMD		= 0x21,$/;"	e	enum:__anon4
getIPAddress	./Ethernet/utility/w5100.h	/^void W5100Class::getIPAddress(uint8_t *_addr) {$/;"	f	class:W5100Class
getIPAddress	./Ethernet/utility/w5100.h	/^void W5100Class::getIPAddress(uint8_t *_addr) {$/;"	f	class:W5100Class
getIPAddress	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^IPAddress GSM3ShieldV1DataNetworkProvider::getIPAddress() {$/;"	f	class:GSM3ShieldV1DataNetworkProvider
getIPAddress	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^IPAddress GSM3ShieldV1DataNetworkProvider::getIPAddress() {$/;"	f	class:GSM3ShieldV1DataNetworkProvider
getIpAddress	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::getIpAddress(IPAddress& ip)$/;"	f	class:WiFiDrv
getIpAddress	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::getIpAddress(IPAddress& ip)$/;"	f	class:WiFiDrv
getIPContinue	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^void GSM3ShieldV1DataNetworkProvider::getIPContinue()$/;"	f	class:GSM3ShieldV1DataNetworkProvider
getIPContinue	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^void GSM3ShieldV1DataNetworkProvider::getIPContinue()$/;"	f	class:GSM3ShieldV1DataNetworkProvider
getIPContinue	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^void GSM3ShieldV1MultiServerProvider::getIPContinue()$/;"	f	class:GSM3ShieldV1MultiServerProvider
getIPContinue	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^void GSM3ShieldV1MultiServerProvider::getIPContinue()$/;"	f	class:GSM3ShieldV1MultiServerProvider
getIP	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline int getIP(char* LocalIP, int LocalIPlength){return 0;};$/;"	f	class:GSM3MobileNetworkProvider
getIP	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline int getIP(char* LocalIP, int LocalIPlength){return 0;};$/;"	f	class:GSM3MobileNetworkProvider
GETIP	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
GETIP	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
getIP	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^int GSM3ShieldV1DataNetworkProvider::getIP(char* LocalIP, int LocalIPlength)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
getIP	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^int GSM3ShieldV1DataNetworkProvider::getIP(char* LocalIP, int LocalIPlength)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
getIP	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^int GSM3ShieldV1MultiServerProvider::getIP(char* LocalIP, int LocalIPlength)$/;"	f	class:GSM3ShieldV1MultiServerProvider
getIP	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^int GSM3ShieldV1MultiServerProvider::getIP(char* LocalIP, int LocalIPlength)$/;"	f	class:GSM3ShieldV1MultiServerProvider
getLin	./Robot_Control/utility/RobotTextManager.cpp	/^int TextManager::getLin(int lineNum){$/;"	f	class:TextManager
getLin	./Robot_Control/utility/RobotTextManager.cpp	/^int TextManager::getLin(int lineNum){$/;"	f	class:TextManager
getLocalIp	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getLocalIp()$/;"	f	class:DhcpClass
getLocalIp	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getLocalIp()$/;"	f	class:DhcpClass
getLocationContinue	./GSM/GSM3ShieldV1CellManagement.cpp	/^void GSM3ShieldV1CellManagement::getLocationContinue()$/;"	f	class:GSM3ShieldV1CellManagement
getLocationContinue	./GSM/GSM3ShieldV1CellManagement.cpp	/^void GSM3ShieldV1CellManagement::getLocationContinue()$/;"	f	class:GSM3ShieldV1CellManagement
getLocation	./GSM/GSM3MobileCellManagement.h	/^		virtual inline int getLocation() {return 0;};$/;"	f	class:GSM3MobileCellManagement
getLocation	./GSM/GSM3MobileCellManagement.h	/^		virtual inline int getLocation() {return 0;};$/;"	f	class:GSM3MobileCellManagement
GETLOCATION	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
GETLOCATION	./GSM/GSM3ShieldV1BaseProvider.h	/^	AVAILABLESOCKET, FLUSHSOCKET, CONNECTSERVER, GETIP, GETCONNECTSTATUS, GETLOCATION, GETICCID}; $/;"	e	enum:GSM3_commandType_e
getLocation	./GSM/GSM3ShieldV1CellManagement.cpp	/^int GSM3ShieldV1CellManagement::getLocation(char *country, char *network, char *area, char *cell)$/;"	f	class:GSM3ShieldV1CellManagement
getLocation	./GSM/GSM3ShieldV1CellManagement.cpp	/^int GSM3ShieldV1CellManagement::getLocation(char *country, char *network, char *area, char *cell)$/;"	f	class:GSM3ShieldV1CellManagement
GET_MACADDR_CMD	./WiFi/utility/wifi_spi.h	/^	GET_MACADDR_CMD		= 0x22,$/;"	e	enum:__anon4
GET_MACADDR_CMD	./WiFi/utility/wifi_spi.h	/^	GET_MACADDR_CMD		= 0x22,$/;"	e	enum:__anon4
getMACAddress	./Ethernet/utility/w5100.h	/^void W5100Class::getMACAddress(uint8_t *_addr) {$/;"	f	class:W5100Class
getMACAddress	./Ethernet/utility/w5100.h	/^void W5100Class::getMACAddress(uint8_t *_addr) {$/;"	f	class:W5100Class
getMacAddress	./WiFi/utility/wifi_drv.cpp	/^uint8_t* WiFiDrv::getMacAddress()$/;"	f	class:WiFiDrv
getMacAddress	./WiFi/utility/wifi_drv.cpp	/^uint8_t* WiFiDrv::getMacAddress()$/;"	f	class:WiFiDrv
getMobileNetworkProvider	./GSM/GSM3MobileNetworkRegistry.cpp	/^GSM3MobileNetworkProvider* GSM3MobileNetworkRegistry::getMobileNetworkProvider()$/;"	f	class:GSM3MobileNetworkRegistry
getMobileNetworkProvider	./GSM/GSM3MobileNetworkRegistry.cpp	/^GSM3MobileNetworkProvider* GSM3MobileNetworkRegistry::getMobileNetworkProvider()$/;"	f	class:GSM3MobileNetworkRegistry
get_motorBoardData	./Robot_Control/Sensors.cpp	/^int RobotControl::get_motorBoardData(uint8_t port){$/;"	f	class:RobotControl
get_motorBoardData	./Robot_Control/Sensors.cpp	/^int RobotControl::get_motorBoardData(uint8_t port){$/;"	f	class:RobotControl
getNetworkData	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::getNetworkData(uint8_t *ip, uint8_t *mask, uint8_t *gwip)$/;"	f	class:WiFiDrv
getNetworkData	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::getNetworkData(uint8_t *ip, uint8_t *mask, uint8_t *gwip)$/;"	f	class:WiFiDrv
getNewOccupiedSocketAsServer	./GSM/GSM3MobileNetworkProvider.cpp	/^int GSM3MobileNetworkProvider::getNewOccupiedSocketAsServer()$/;"	f	class:GSM3MobileNetworkProvider
getNewOccupiedSocketAsServer	./GSM/GSM3MobileNetworkProvider.cpp	/^int GSM3MobileNetworkProvider::getNewOccupiedSocketAsServer()$/;"	f	class:GSM3MobileNetworkProvider
getNewOccupiedSocketAsServer	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^int GSM3ShieldV1MultiServerProvider::getNewOccupiedSocketAsServer()$/;"	f	class:GSM3ShieldV1MultiServerProvider
getNewOccupiedSocketAsServer	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^int GSM3ShieldV1MultiServerProvider::getNewOccupiedSocketAsServer()$/;"	f	class:GSM3ShieldV1MultiServerProvider
getNewOccupiedSocketAsServer	./GSM/GSM3ShieldV1ServerProvider.cpp	/^int GSM3ShieldV1ServerProvider::getNewOccupiedSocketAsServer()$/;"	f	class:GSM3ShieldV1ServerProvider
getNewOccupiedSocketAsServer	./GSM/GSM3ShieldV1ServerProvider.cpp	/^int GSM3ShieldV1ServerProvider::getNewOccupiedSocketAsServer()$/;"	f	class:GSM3ShieldV1ServerProvider
getNextPathComponent	./SD/SD.cpp	/^bool getNextPathComponent(char *path, unsigned int *p_offset,$/;"	f
getNextPathComponent	./SD/SD.cpp	/^bool getNextPathComponent(char *path, unsigned int *p_offset,$/;"	f
getOngoingCommand	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3_commandType_e getOngoingCommand(){return ongoingCommand;};$/;"	f	class:GSM3ShieldV1ModemCore
getOngoingCommand	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3_commandType_e getOngoingCommand(){return ongoingCommand;};$/;"	f	class:GSM3ShieldV1ModemCore
getParam	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::getParam(uint8_t* param)$/;"	f	class:SpiDrv
getParam	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::getParam(uint8_t* param)$/;"	f	class:SpiDrv
getParentDir	./SD/SD.cpp	/^SdFile SDClass::getParentDir(const char *filepath, int *index) {$/;"	f	class:SDClass
getParentDir	./SD/SD.cpp	/^SdFile SDClass::getParentDir(const char *filepath, int *index) {$/;"	f	class:SDClass
getPGMtext	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::getPGMtext(int seq){$/;"	f	class:TextManager
getPGMtext	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::getPGMtext(int seq){$/;"	f	class:TextManager
getPhoneNumber	./GSM/GSM3ShieldV1ModemCore.h	/^		char *getPhoneNumber(){return phoneNumber;};$/;"	f	class:GSM3ShieldV1ModemCore
getPhoneNumber	./GSM/GSM3ShieldV1ModemCore.h	/^		char *getPhoneNumber(){return phoneNumber;};$/;"	f	class:GSM3ShieldV1ModemCore
GetPhoneNumber	./GSM_Shield/GSM_Shield.cpp	/^char GSM::GetPhoneNumber(byte position, char *phone_number)$/;"	f	class:GSM
GetPhoneNumber	./GSM_Shield/GSM_Shield.cpp	/^char GSM::GetPhoneNumber(byte position, char *phone_number)$/;"	f	class:GSM
getPinMode	./SD/utility/Sd2PinMap.h	/^  uint8_t getPinMode(uint8_t pin) {$/;"	f
getPinMode	./SD/utility/Sd2PinMap.h	/^  uint8_t getPinMode(uint8_t pin) {$/;"	f
getPINUsed	./GSM/GSM3ShieldV1PinManagement.cpp	/^bool GSM3ShieldV1PinManagement::getPINUsed()$/;"	f	class:GSM3ShieldV1PinManagement
getPINUsed	./GSM/GSM3ShieldV1PinManagement.cpp	/^bool GSM3ShieldV1PinManagement::getPINUsed()$/;"	f	class:GSM3ShieldV1PinManagement
getPort	./GSM/GSM3ShieldV1ModemCore.h	/^		int getPort(){return port;};$/;"	f	class:GSM3ShieldV1ModemCore
getPort	./GSM/GSM3ShieldV1ModemCore.h	/^		int getPort(){return port;};$/;"	f	class:GSM3ShieldV1ModemCore
get_position	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::get_position(long *latitude, long *longitude, unsigned long *fix_age)$/;"	f	class:TinyGPS
get_position	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::get_position(long *latitude, long *longitude, unsigned long *fix_age)$/;"	f	class:TinyGPS
getReading	./Robot_Control/Compass.cpp	/^float Compass::getReading(){$/;"	f	class:Compass
getReading	./Robot_Control/Compass.cpp	/^float Compass::getReading(){$/;"	f	class:Compass
GET_REMOTE_DATA_CMD	./WiFi/utility/wifi_spi.h	/^	GET_REMOTE_DATA_CMD = 0x3A,$/;"	e	enum:__anon4
GET_REMOTE_DATA_CMD	./WiFi/utility/wifi_spi.h	/^	GET_REMOTE_DATA_CMD = 0x3A,$/;"	e	enum:__anon4
getRemoteData	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::getRemoteData(uint8_t sock, uint8_t *ip, uint8_t *port)$/;"	f	class:WiFiDrv
getRemoteData	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::getRemoteData(uint8_t sock, uint8_t *ip, uint8_t *port)$/;"	f	class:WiFiDrv
getRotation	./Robot_Control/Adafruit_GFX.cpp	/^uint8_t Adafruit_GFX::getRotation(void) {$/;"	f	class:Adafruit_GFX
getRotation	./Robot_Control/Adafruit_GFX.cpp	/^uint8_t Adafruit_GFX::getRotation(void) {$/;"	f	class:Adafruit_GFX
getRotation	./TFT/utility/Adafruit_GFX.cpp	/^uint8_t Adafruit_GFX::getRotation(void) {$/;"	f	class:Adafruit_GFX
getRotation	./TFT/utility/Adafruit_GFX.cpp	/^uint8_t Adafruit_GFX::getRotation(void) {$/;"	f	class:Adafruit_GFX
getRSSINetoworks	./WiFi/utility/wifi_drv.cpp	/^int32_t WiFiDrv::getRSSINetoworks(uint8_t networkItem)$/;"	f	class:WiFiDrv
getRSSINetoworks	./WiFi/utility/wifi_drv.cpp	/^int32_t WiFiDrv::getRSSINetoworks(uint8_t networkItem)$/;"	f	class:WiFiDrv
getRXReceivedSize	./Ethernet/utility/w5100.cpp	/^uint16_t W5100Class::getRXReceivedSize(SOCKET s)$/;"	f	class:W5100Class
getRXReceivedSize	./Ethernet/utility/w5100.cpp	/^uint16_t W5100Class::getRXReceivedSize(SOCKET s)$/;"	f	class:W5100Class
getScanNetworks	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::getScanNetworks()$/;"	f	class:WiFiDrv
getScanNetworks	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::getScanNetworks()$/;"	f	class:WiFiDrv
getSelection	./Robot_Control/utility/VirtualKeyboard.cpp	/^char VirtualKeyboard::getSelection(){$/;"	f	class:VirtualKeyboard
getSelection	./Robot_Control/utility/VirtualKeyboard.cpp	/^char VirtualKeyboard::getSelection(){$/;"	f	class:VirtualKeyboard
getServerState	./WiFi/utility/server_drv.cpp	/^uint8_t ServerDrv::getServerState(uint8_t sock)$/;"	f	class:ServerDrv
getServerState	./WiFi/utility/server_drv.cpp	/^uint8_t ServerDrv::getServerState(uint8_t sock)$/;"	f	class:ServerDrv
getSignalStrength	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^String GSM3ShieldV1ScanNetworks::getSignalStrength()$/;"	f	class:GSM3ShieldV1ScanNetworks
getSignalStrength	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^String GSM3ShieldV1ScanNetworks::getSignalStrength()$/;"	f	class:GSM3ShieldV1ScanNetworks
GETSMS_AUTH_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_AUTH_SMS,$/;"	e	enum:getsms_ret_val_enum
GETSMS_AUTH_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_AUTH_SMS,$/;"	e	enum:getsms_ret_val_enum
GetSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::GetSMS(byte position, char *phone_number, char *SMS_text, byte max_SMS_len) $/;"	f	class:GSM
GetSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::GetSMS(byte position, char *phone_number, char *SMS_text, byte max_SMS_len) $/;"	f	class:GSM
GETSMS_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  GETSMS_LAST_ITEM$/;"	e	enum:getsms_ret_val_enum
GETSMS_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  GETSMS_LAST_ITEM$/;"	e	enum:getsms_ret_val_enum
GETSMS_NO_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_NO_SMS   = 0,$/;"	e	enum:getsms_ret_val_enum
GETSMS_NO_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_NO_SMS   = 0,$/;"	e	enum:getsms_ret_val_enum
GETSMS_NOT_AUTH_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_NOT_AUTH_SMS,$/;"	e	enum:getsms_ret_val_enum
GETSMS_NOT_AUTH_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_NOT_AUTH_SMS,$/;"	e	enum:getsms_ret_val_enum
GETSMS_OTHER_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_OTHER_SMS,$/;"	e	enum:getsms_ret_val_enum
GETSMS_OTHER_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_OTHER_SMS,$/;"	e	enum:getsms_ret_val_enum
GETSMS_READ_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_READ_SMS,$/;"	e	enum:getsms_ret_val_enum
GETSMS_READ_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_READ_SMS,$/;"	e	enum:getsms_ret_val_enum
getsms_ret_val_enum	./GSM_Shield/GSM_Shield.h	/^enum getsms_ret_val_enum$/;"	g
getsms_ret_val_enum	./GSM_Shield/GSM_Shield.h	/^enum getsms_ret_val_enum$/;"	g
GETSMS_UNREAD_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_UNREAD_SMS,$/;"	e	enum:getsms_ret_val_enum
GETSMS_UNREAD_SMS	./GSM_Shield/GSM_Shield.h	/^  GETSMS_UNREAD_SMS,$/;"	e	enum:getsms_ret_val_enum
getSocketAsServerModemStatus	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline bool getSocketAsServerModemStatus(int s){return false;};$/;"	f	class:GSM3MobileNetworkProvider
getSocketAsServerModemStatus	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline bool getSocketAsServerModemStatus(int s){return false;};$/;"	f	class:GSM3MobileNetworkProvider
getSocketAsServerModemStatus	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^bool GSM3ShieldV1MultiServerProvider::getSocketAsServerModemStatus(int s)$/;"	f	class:GSM3ShieldV1MultiServerProvider
getSocketAsServerModemStatus	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^bool GSM3ShieldV1MultiServerProvider::getSocketAsServerModemStatus(int s)$/;"	f	class:GSM3ShieldV1MultiServerProvider
getSocketAsServerModemStatus	./GSM/GSM3ShieldV1ServerProvider.cpp	/^bool GSM3ShieldV1ServerProvider::getSocketAsServerModemStatus(int s)$/;"	f	class:GSM3ShieldV1ServerProvider
getSocketAsServerModemStatus	./GSM/GSM3ShieldV1ServerProvider.cpp	/^bool GSM3ShieldV1ServerProvider::getSocketAsServerModemStatus(int s)$/;"	f	class:GSM3ShieldV1ServerProvider
getSocket	./GSM/GSM3MobileClientService.h	/^		inline int getSocket(){return (int)mySocket;};$/;"	f	class:GSM3MobileClientService
getSocket	./GSM/GSM3MobileClientService.h	/^		inline int getSocket(){return (int)mySocket;};$/;"	f	class:GSM3MobileClientService
getSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::getSocket(int socket)$/;"	f	class:GSM3ShieldV1ClientProvider
getSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::getSocket(int socket)$/;"	f	class:GSM3ShieldV1ClientProvider
getSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::getSocket(int socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
getSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::getSocket(int socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
getSocketModemStatus	./GSM/GSM3MobileMockupProvider.cpp	/^bool GSM3MobileMockupProvider::getSocketModemStatus(uint8_t s)$/;"	f	class:GSM3MobileMockupProvider
getSocketModemStatus	./GSM/GSM3MobileMockupProvider.cpp	/^bool GSM3MobileMockupProvider::getSocketModemStatus(uint8_t s)$/;"	f	class:GSM3MobileMockupProvider
getSocket	./WiFi/WiFi.cpp	/^uint8_t WiFiClass::getSocket()$/;"	f	class:WiFiClass
getSocket	./WiFi/WiFi.cpp	/^uint8_t WiFiClass::getSocket()$/;"	f	class:WiFiClass
getSSIDNetoworks	./WiFi/utility/wifi_drv.cpp	/^char* WiFiDrv::getSSIDNetoworks(uint8_t networkItem)$/;"	f	class:WiFiDrv
getSSIDNetoworks	./WiFi/utility/wifi_drv.cpp	/^char* WiFiDrv::getSSIDNetoworks(uint8_t networkItem)$/;"	f	class:WiFiDrv
GET_STATE_TCP_CMD	./WiFi/utility/wifi_spi.h	/^	GET_STATE_TCP_CMD   = 0x29,$/;"	e	enum:__anon4
GET_STATE_TCP_CMD	./WiFi/utility/wifi_spi.h	/^	GET_STATE_TCP_CMD   = 0x29,$/;"	e	enum:__anon4
getStatus	./GSM/GSM3MobileMockupProvider.h	/^		inline GSM3_NetworkStatus_t getStatus(){return ERROR;};$/;"	f	class:GSM3MobileMockupProvider
getStatus	./GSM/GSM3MobileMockupProvider.h	/^		inline GSM3_NetworkStatus_t getStatus(){return ERROR;};$/;"	f	class:GSM3MobileMockupProvider
getStatus	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline GSM3_NetworkStatus_t getStatus(){return ERROR;};$/;"	f	class:GSM3MobileNetworkProvider
getStatus	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline GSM3_NetworkStatus_t getStatus(){return ERROR;};$/;"	f	class:GSM3MobileNetworkProvider
getStatus	./GSM/GSM3ShieldV1AccessProvider.h	/^		inline GSM3_NetworkStatus_t getStatus(){return theGSM3ShieldV1ModemCore.getStatus();};$/;"	f	class:GSM3ShieldV1AccessProvider
getStatus	./GSM/GSM3ShieldV1AccessProvider.h	/^		inline GSM3_NetworkStatus_t getStatus(){return theGSM3ShieldV1ModemCore.getStatus();};$/;"	f	class:GSM3ShieldV1AccessProvider
getStatus	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		inline GSM3_NetworkStatus_t getStatus(){return theGSM3ShieldV1ModemCore.getStatus();};$/;"	f	class:GSM3ShieldV1DataNetworkProvider
getStatus	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		inline GSM3_NetworkStatus_t getStatus(){return theGSM3ShieldV1ModemCore.getStatus();};$/;"	f	class:GSM3ShieldV1DataNetworkProvider
getStatus	./GSM/GSM3ShieldV1ModemCore.h	/^		inline GSM3_NetworkStatus_t getStatus() { return _status; };$/;"	f	class:GSM3ShieldV1ModemCore
getStatus	./GSM/GSM3ShieldV1ModemCore.h	/^		inline GSM3_NetworkStatus_t getStatus() { return _status; };$/;"	f	class:GSM3ShieldV1ModemCore
getStatusSocketAsServer	./GSM/GSM3MobileNetworkProvider.cpp	/^bool GSM3MobileNetworkProvider::getStatusSocketAsServer(uint8_t socket)$/;"	f	class:GSM3MobileNetworkProvider
getStatusSocketAsServer	./GSM/GSM3MobileNetworkProvider.cpp	/^bool GSM3MobileNetworkProvider::getStatusSocketAsServer(uint8_t socket)$/;"	f	class:GSM3MobileNetworkProvider
getStatusSocketAsServer	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^bool GSM3ShieldV1MultiServerProvider::getStatusSocketAsServer(uint8_t socket)$/;"	f	class:GSM3ShieldV1MultiServerProvider
getStatusSocketAsServer	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^bool GSM3ShieldV1MultiServerProvider::getStatusSocketAsServer(uint8_t socket)$/;"	f	class:GSM3ShieldV1MultiServerProvider
getStatusSocketAsServer	./GSM/GSM3ShieldV1ServerProvider.cpp	/^bool GSM3ShieldV1ServerProvider::getStatusSocketAsServer(uint8_t socket)$/;"	f	class:GSM3ShieldV1ServerProvider
getStatusSocketAsServer	./GSM/GSM3ShieldV1ServerProvider.cpp	/^bool GSM3ShieldV1ServerProvider::getStatusSocketAsServer(uint8_t socket)$/;"	f	class:GSM3ShieldV1ServerProvider
getStatusSocketClient	./GSM/GSM3ShieldV1ClientProvider.cpp	/^bool GSM3ShieldV1ClientProvider::getStatusSocketClient(uint8_t socket)$/;"	f	class:GSM3ShieldV1ClientProvider
getStatusSocketClient	./GSM/GSM3ShieldV1ClientProvider.cpp	/^bool GSM3ShieldV1ClientProvider::getStatusSocketClient(uint8_t socket)$/;"	f	class:GSM3ShieldV1ClientProvider
getStatusSocketClient	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^bool GSM3ShieldV1MultiClientProvider::getStatusSocketClient(uint8_t socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
getStatusSocketClient	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^bool GSM3ShieldV1MultiClientProvider::getStatusSocketClient(uint8_t socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
getSubnetMask	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getSubnetMask()$/;"	f	class:DhcpClass
getSubnetMask	./Ethernet/Dhcp.cpp	/^IPAddress DhcpClass::getSubnetMask()$/;"	f	class:DhcpClass
getSubnetMask	./Ethernet/utility/w5100.h	/^void W5100Class::getSubnetMask(uint8_t *_addr) {$/;"	f	class:W5100Class
getSubnetMask	./Ethernet/utility/w5100.h	/^void W5100Class::getSubnetMask(uint8_t *_addr) {$/;"	f	class:W5100Class
getSubnetMask	./WiFi/utility/wifi_drv.cpp	/^ void WiFiDrv::getSubnetMask(IPAddress& mask)$/;"	f	class:WiFiDrv
getSubnetMask	./WiFi/utility/wifi_drv.cpp	/^ void WiFiDrv::getSubnetMask(IPAddress& mask)$/;"	f	class:WiFiDrv
getTail	./GSM/GSM3CircularBuffer.h	/^		inline byte getTail(){return tail;};$/;"	f	class:GSM3CircularBuffer
getTail	./GSM/GSM3CircularBuffer.h	/^		inline byte getTail(){return tail;};$/;"	f	class:GSM3CircularBuffer
GET_TEST_CMD	./WiFi/utility/wifi_spi.h	/^	GET_TEST_CMD		= 0x38,$/;"	e	enum:__anon4
GET_TEST_CMD	./WiFi/utility/wifi_spi.h	/^	GET_TEST_CMD		= 0x38,$/;"	e	enum:__anon4
getTXFreeSize	./Ethernet/utility/w5100.cpp	/^uint16_t W5100Class::getTXFreeSize(SOCKET s)$/;"	f	class:W5100Class
getTXFreeSize	./Ethernet/utility/w5100.cpp	/^uint16_t W5100Class::getTXFreeSize(SOCKET s)$/;"	f	class:W5100Class
_getTypeCode	./Robot_Control/Sensors.cpp	/^uint8_t RobotControl::_getTypeCode(uint8_t port){$/;"	f	class:RobotControl
_getTypeCode	./Robot_Control/Sensors.cpp	/^uint8_t RobotControl::_getTypeCode(uint8_t port){$/;"	f	class:RobotControl
getvoiceCallStatus	./GSM/GSM3MobileMockupProvider.h	/^		inline GSM3_voiceCall_st getvoiceCallStatus(){return IDLE_CALL;};$/;"	f	class:GSM3MobileMockupProvider
getvoiceCallStatus	./GSM/GSM3MobileMockupProvider.h	/^		inline GSM3_voiceCall_st getvoiceCallStatus(){return IDLE_CALL;};$/;"	f	class:GSM3MobileMockupProvider
getvoiceCallStatus	./GSM/GSM3ShieldV1VoiceProvider.h	/^		GSM3_voiceCall_st getvoiceCallStatus(){ready(); return _voiceCallstatus;};$/;"	f	class:GSM3ShieldV1VoiceProvider
getvoiceCallStatus	./GSM/GSM3ShieldV1VoiceProvider.h	/^		GSM3_voiceCall_st getvoiceCallStatus(){ready(); return _voiceCallstatus;};$/;"	f	class:GSM3ShieldV1VoiceProvider
getvoiceCallStatus	./GSM/GSM3VoiceCallService.cpp	/^GSM3_voiceCall_st GSM3VoiceCallService::getvoiceCallStatus()$/;"	f	class:GSM3VoiceCallService
getvoiceCallStatus	./GSM/GSM3VoiceCallService.cpp	/^GSM3_voiceCall_st GSM3VoiceCallService::getvoiceCallStatus()$/;"	f	class:GSM3VoiceCallService
GGP	./Ethernet/utility/w5100.h	/^  static const uint8_t GGP  = 3;$/;"	m	class:IPPROTO
GGP	./Ethernet/utility/w5100.h	/^  static const uint8_t GGP  = 3;$/;"	m	class:IPPROTO
giaddr	./Ethernet/Dhcp.h	/^	uint8_t  giaddr[4];$/;"	m	struct:_RIP_MSG_FIXED
giaddr	./Ethernet/Dhcp.h	/^	uint8_t  giaddr[4];$/;"	m	struct:_RIP_MSG_FIXED
glissando	./Robot_Control/Squawk.cpp	/^  bool      glissando;$/;"	m	struct:__anon18	file:
glissando	./Robot_Control/Squawk.cpp	/^  bool      glissando;$/;"	m	struct:__anon18	file:
glissando	./Robot_Control/Squawk.cpp	/^static inline uint16_t glissando(uint8_t ch) {$/;"	f	file:
glissando	./Robot_Control/Squawk.cpp	/^static inline uint16_t glissando(uint8_t ch) {$/;"	f	file:
_good_sentences	./TinyGPS/TinyGPS.h	/^  unsigned short _good_sentences;$/;"	m	class:TinyGPS
_good_sentences	./TinyGPS/TinyGPS.h	/^  unsigned short _good_sentences;$/;"	m	class:TinyGPS
_GPGGAterm	./TinyGPSPlus/TinyGPS++.cpp	31;"	d	file:
_GPGGAterm	./TinyGPSPlus/TinyGPS++.cpp	31;"	d	file:
_GPGGA_TERM	./TinyGPS/TinyGPS.cpp	27;"	d	file:
_GPGGA_TERM	./TinyGPS/TinyGPS.cpp	27;"	d	file:
__GP_REGISTER16	./Ethernet/utility/w5100.h	208;"	d
__GP_REGISTER16	./Ethernet/utility/w5100.h	208;"	d
__GP_REGISTER16	./Ethernet/utility/w5100.h	245;"	d
__GP_REGISTER16	./Ethernet/utility/w5100.h	245;"	d
__GP_REGISTER8	./Ethernet/utility/w5100.h	201;"	d
__GP_REGISTER8	./Ethernet/utility/w5100.h	201;"	d
__GP_REGISTER8	./Ethernet/utility/w5100.h	244;"	d
__GP_REGISTER8	./Ethernet/utility/w5100.h	244;"	d
__GP_REGISTER_N	./Ethernet/utility/w5100.h	218;"	d
__GP_REGISTER_N	./Ethernet/utility/w5100.h	218;"	d
__GP_REGISTER_N	./Ethernet/utility/w5100.h	246;"	d
__GP_REGISTER_N	./Ethernet/utility/w5100.h	246;"	d
_GPRMCterm	./TinyGPSPlus/TinyGPS++.cpp	30;"	d	file:
_GPRMCterm	./TinyGPSPlus/TinyGPS++.cpp	30;"	d	file:
_GPRMC_TERM	./TinyGPS/TinyGPS.cpp	26;"	d	file:
_GPRMC_TERM	./TinyGPS/TinyGPS.cpp	26;"	d	file:
GPRS	./GSM/GSM.h	56;"	d
GPRS	./GSM/GSM.h	56;"	d
GPRS_READY	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
GPRS_READY	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
gpsatol	./TinyGPS/TinyGPS.cpp	/^long TinyGPS::gpsatol(const char *str)$/;"	f	class:TinyGPS
gpsatol	./TinyGPS/TinyGPS.cpp	/^long TinyGPS::gpsatol(const char *str)$/;"	f	class:TinyGPS
_gps_data_good	./TinyGPS/TinyGPS.h	/^  bool _gps_data_good;$/;"	m	class:TinyGPS
_gps_data_good	./TinyGPS/TinyGPS.h	/^  bool _gps_data_good;$/;"	m	class:TinyGPS
_GPS_FEET_PER_METER	./TinyGPSPlus/TinyGPS++.h	40;"	d
_GPS_FEET_PER_METER	./TinyGPSPlus/TinyGPS++.h	40;"	d
GPS_INVALID_AGE	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_AGE = 0xFFFFFFFF,      GPS_INVALID_ANGLE = 999999999, $/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_AGE	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_AGE = 0xFFFFFFFF,      GPS_INVALID_ANGLE = 999999999, $/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_ALTITUDE	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_ALTITUDE = 999999999,  GPS_INVALID_DATE = 0,$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_ALTITUDE	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_ALTITUDE = 999999999,  GPS_INVALID_DATE = 0,$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_ANGLE	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_AGE = 0xFFFFFFFF,      GPS_INVALID_ANGLE = 999999999, $/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_ANGLE	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_AGE = 0xFFFFFFFF,      GPS_INVALID_ANGLE = 999999999, $/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_DATE	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_ALTITUDE = 999999999,  GPS_INVALID_DATE = 0,$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_DATE	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_ALTITUDE = 999999999,  GPS_INVALID_DATE = 0,$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_F_ALTITUDE	./TinyGPS/TinyGPS.cpp	/^const float TinyGPS::GPS_INVALID_F_ALTITUDE = 1000000.0;$/;"	m	class:TinyGPS	file:
GPS_INVALID_F_ALTITUDE	./TinyGPS/TinyGPS.cpp	/^const float TinyGPS::GPS_INVALID_F_ALTITUDE = 1000000.0;$/;"	m	class:TinyGPS	file:
GPS_INVALID_F_ALTITUDE	./TinyGPS/TinyGPS.h	/^  static const float GPS_INVALID_F_ANGLE, GPS_INVALID_F_ALTITUDE, GPS_INVALID_F_SPEED;$/;"	m	class:TinyGPS
GPS_INVALID_F_ALTITUDE	./TinyGPS/TinyGPS.h	/^  static const float GPS_INVALID_F_ANGLE, GPS_INVALID_F_ALTITUDE, GPS_INVALID_F_SPEED;$/;"	m	class:TinyGPS
GPS_INVALID_F_ANGLE	./TinyGPS/TinyGPS.cpp	/^const float TinyGPS::GPS_INVALID_F_ANGLE = 1000.0;$/;"	m	class:TinyGPS	file:
GPS_INVALID_F_ANGLE	./TinyGPS/TinyGPS.cpp	/^const float TinyGPS::GPS_INVALID_F_ANGLE = 1000.0;$/;"	m	class:TinyGPS	file:
GPS_INVALID_F_ANGLE	./TinyGPS/TinyGPS.h	/^  static const float GPS_INVALID_F_ANGLE, GPS_INVALID_F_ALTITUDE, GPS_INVALID_F_SPEED;$/;"	m	class:TinyGPS
GPS_INVALID_F_ANGLE	./TinyGPS/TinyGPS.h	/^  static const float GPS_INVALID_F_ANGLE, GPS_INVALID_F_ALTITUDE, GPS_INVALID_F_SPEED;$/;"	m	class:TinyGPS
GPS_INVALID_FIX_TIME	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_FIX_TIME = 0xFFFFFFFF, GPS_INVALID_SATELLITES = 0xFF,$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_FIX_TIME	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_FIX_TIME = 0xFFFFFFFF, GPS_INVALID_SATELLITES = 0xFF,$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_F_SPEED	./TinyGPS/TinyGPS.cpp	/^const float TinyGPS::GPS_INVALID_F_SPEED = -1.0;$/;"	m	class:TinyGPS	file:
GPS_INVALID_F_SPEED	./TinyGPS/TinyGPS.cpp	/^const float TinyGPS::GPS_INVALID_F_SPEED = -1.0;$/;"	m	class:TinyGPS	file:
GPS_INVALID_F_SPEED	./TinyGPS/TinyGPS.h	/^  static const float GPS_INVALID_F_ANGLE, GPS_INVALID_F_ALTITUDE, GPS_INVALID_F_SPEED;$/;"	m	class:TinyGPS
GPS_INVALID_F_SPEED	./TinyGPS/TinyGPS.h	/^  static const float GPS_INVALID_F_ANGLE, GPS_INVALID_F_ALTITUDE, GPS_INVALID_F_SPEED;$/;"	m	class:TinyGPS
GPS_INVALID_HDOP	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_HDOP = 0xFFFFFFFF$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_HDOP	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_HDOP = 0xFFFFFFFF$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_SATELLITES	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_FIX_TIME = 0xFFFFFFFF, GPS_INVALID_SATELLITES = 0xFF,$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_SATELLITES	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_FIX_TIME = 0xFFFFFFFF, GPS_INVALID_SATELLITES = 0xFF,$/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_SPEED	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_TIME = 0xFFFFFFFF,		 GPS_INVALID_SPEED = 999999999, $/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_SPEED	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_TIME = 0xFFFFFFFF,		 GPS_INVALID_SPEED = 999999999, $/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_TIME	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_TIME = 0xFFFFFFFF,		 GPS_INVALID_SPEED = 999999999, $/;"	e	enum:TinyGPS::__anon1
GPS_INVALID_TIME	./TinyGPS/TinyGPS.h	/^    GPS_INVALID_TIME = 0xFFFFFFFF,		 GPS_INVALID_SPEED = 999999999, $/;"	e	enum:TinyGPS::__anon1
gpsisdigit	./TinyGPS/TinyGPS.h	/^  bool gpsisdigit(char c) { return c >= '0' && c <= '9'; }$/;"	f	class:TinyGPS
gpsisdigit	./TinyGPS/TinyGPS.h	/^  bool gpsisdigit(char c) { return c >= '0' && c <= '9'; }$/;"	f	class:TinyGPS
_GPS_KM_PER_METER	./TinyGPSPlus/TinyGPS++.h	39;"	d
_GPS_KM_PER_METER	./TinyGPSPlus/TinyGPS++.h	39;"	d
_GPS_KM_PER_METER	./TinyGPS/TinyGPS.h	40;"	d
_GPS_KM_PER_METER	./TinyGPS/TinyGPS.h	40;"	d
_GPS_KMPH_PER_KNOT	./TinyGPSPlus/TinyGPS++.h	37;"	d
_GPS_KMPH_PER_KNOT	./TinyGPSPlus/TinyGPS++.h	37;"	d
_GPS_KMPH_PER_KNOT	./TinyGPS/TinyGPS.h	38;"	d
_GPS_KMPH_PER_KNOT	./TinyGPS/TinyGPS.h	38;"	d
_GPS_MAX_FIELD_SIZE	./TinyGPSPlus/TinyGPS++.h	41;"	d
_GPS_MAX_FIELD_SIZE	./TinyGPSPlus/TinyGPS++.h	41;"	d
_GPS_MILES_PER_METER	./TinyGPSPlus/TinyGPS++.h	38;"	d
_GPS_MILES_PER_METER	./TinyGPSPlus/TinyGPS++.h	38;"	d
_GPS_MILES_PER_METER	./TinyGPS/TinyGPS.h	39;"	d
_GPS_MILES_PER_METER	./TinyGPS/TinyGPS.h	39;"	d
_GPS_MPH_PER_KNOT	./TinyGPSPlus/TinyGPS++.h	35;"	d
_GPS_MPH_PER_KNOT	./TinyGPSPlus/TinyGPS++.h	35;"	d
_GPS_MPH_PER_KNOT	./TinyGPS/TinyGPS.h	36;"	d
_GPS_MPH_PER_KNOT	./TinyGPS/TinyGPS.h	36;"	d
_GPS_MPS_PER_KNOT	./TinyGPSPlus/TinyGPS++.h	36;"	d
_GPS_MPS_PER_KNOT	./TinyGPSPlus/TinyGPS++.h	36;"	d
_GPS_MPS_PER_KNOT	./TinyGPS/TinyGPS.h	37;"	d
_GPS_MPS_PER_KNOT	./TinyGPS/TinyGPS.h	37;"	d
GPS_SENTENCE_GPGGA	./TinyGPSPlus/TinyGPS++.h	/^  enum {GPS_SENTENCE_GPGGA, GPS_SENTENCE_GPRMC, GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPSPlus::__anon26
GPS_SENTENCE_GPGGA	./TinyGPSPlus/TinyGPS++.h	/^  enum {GPS_SENTENCE_GPGGA, GPS_SENTENCE_GPRMC, GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPSPlus::__anon26
_GPS_SENTENCE_GPGGA	./TinyGPS/TinyGPS.h	/^  enum {_GPS_SENTENCE_GPGGA, _GPS_SENTENCE_GPRMC, _GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPS::__anon2
_GPS_SENTENCE_GPGGA	./TinyGPS/TinyGPS.h	/^  enum {_GPS_SENTENCE_GPGGA, _GPS_SENTENCE_GPRMC, _GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPS::__anon2
GPS_SENTENCE_GPRMC	./TinyGPSPlus/TinyGPS++.h	/^  enum {GPS_SENTENCE_GPGGA, GPS_SENTENCE_GPRMC, GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPSPlus::__anon26
GPS_SENTENCE_GPRMC	./TinyGPSPlus/TinyGPS++.h	/^  enum {GPS_SENTENCE_GPGGA, GPS_SENTENCE_GPRMC, GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPSPlus::__anon26
_GPS_SENTENCE_GPRMC	./TinyGPS/TinyGPS.h	/^  enum {_GPS_SENTENCE_GPGGA, _GPS_SENTENCE_GPRMC, _GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPS::__anon2
_GPS_SENTENCE_GPRMC	./TinyGPS/TinyGPS.h	/^  enum {_GPS_SENTENCE_GPGGA, _GPS_SENTENCE_GPRMC, _GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPS::__anon2
GPS_SENTENCE_OTHER	./TinyGPSPlus/TinyGPS++.h	/^  enum {GPS_SENTENCE_GPGGA, GPS_SENTENCE_GPRMC, GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPSPlus::__anon26
GPS_SENTENCE_OTHER	./TinyGPSPlus/TinyGPS++.h	/^  enum {GPS_SENTENCE_GPGGA, GPS_SENTENCE_GPRMC, GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPSPlus::__anon26
_GPS_SENTENCE_OTHER	./TinyGPS/TinyGPS.h	/^  enum {_GPS_SENTENCE_GPGGA, _GPS_SENTENCE_GPRMC, _GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPS::__anon2
_GPS_SENTENCE_OTHER	./TinyGPS/TinyGPS.h	/^  enum {_GPS_SENTENCE_GPGGA, _GPS_SENTENCE_GPRMC, _GPS_SENTENCE_OTHER};$/;"	e	enum:TinyGPS::__anon2
gpsstrcmp	./TinyGPS/TinyGPS.cpp	/^int TinyGPS::gpsstrcmp(const char *str1, const char *str2)$/;"	f	class:TinyGPS
gpsstrcmp	./TinyGPS/TinyGPS.cpp	/^int TinyGPS::gpsstrcmp(const char *str1, const char *str2)$/;"	f	class:TinyGPS
_GPS_VERSION	./TinyGPSPlus/TinyGPS++.h	34;"	d
_GPS_VERSION	./TinyGPSPlus/TinyGPS++.h	34;"	d
_GPS_VERSION	./TinyGPS/TinyGPS.h	35;"	d
_GPS_VERSION	./TinyGPS/TinyGPS.h	35;"	d
GREEN_PIN	./Esplora/Esplora.cpp	/^const byte GREEN_PIN  = 10;$/;"	v
GREEN_PIN	./Esplora/Esplora.cpp	/^const byte GREEN_PIN  = 10;$/;"	v
GREEN	./Robot_Control/ArduinoRobot.h	119;"	d
GREEN	./Robot_Control/ArduinoRobot.h	119;"	d
GSM3CircularBuffer	./GSM/GSM3CircularBuffer.cpp	/^GSM3CircularBuffer::GSM3CircularBuffer(GSM3CircularBufferManager* mgr)$/;"	f	class:GSM3CircularBuffer
GSM3CircularBuffer	./GSM/GSM3CircularBuffer.cpp	/^GSM3CircularBuffer::GSM3CircularBuffer(GSM3CircularBufferManager* mgr)$/;"	f	class:GSM3CircularBuffer
__GSM3_CIRCULARBUFFER__	./GSM/GSM3CircularBuffer.h	35;"	d
__GSM3_CIRCULARBUFFER__	./GSM/GSM3CircularBuffer.h	35;"	d
GSM3CircularBuffer	./GSM/GSM3CircularBuffer.h	/^class GSM3CircularBuffer$/;"	c
GSM3CircularBuffer	./GSM/GSM3CircularBuffer.h	/^class GSM3CircularBuffer$/;"	c
GSM3CircularBufferManager	./GSM/GSM3CircularBuffer.h	/^class GSM3CircularBufferManager$/;"	c
GSM3CircularBufferManager	./GSM/GSM3CircularBuffer.h	/^class GSM3CircularBufferManager$/;"	c
GSM3_commandType_e	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	g
GSM3_commandType_e	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	g
__GSM3DIRECTMODEMPROVIDER__	./GSM/GSM3ShieldV1DirectModemProvider.h	36;"	d
__GSM3DIRECTMODEMPROVIDER__	./GSM/GSM3ShieldV1DirectModemProvider.h	36;"	d
GSM3GSMBand	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	g
GSM3GSMBand	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	g
_GSM3MOBILEACCESSPROVIDER_	./GSM/GSM3MobileAccessProvider.h	35;"	d
_GSM3MOBILEACCESSPROVIDER_	./GSM/GSM3MobileAccessProvider.h	35;"	d
GSM3MobileAccessProvider	./GSM/GSM3MobileAccessProvider.h	/^class GSM3MobileAccessProvider$/;"	c
GSM3MobileAccessProvider	./GSM/GSM3MobileAccessProvider.h	/^class GSM3MobileAccessProvider$/;"	c
_GSM3MOBILECELLMANAGEMENT_	./GSM/GSM3MobileCellManagement.h	35;"	d
_GSM3MOBILECELLMANAGEMENT_	./GSM/GSM3MobileCellManagement.h	35;"	d
GSM3MobileCellManagement	./GSM/GSM3MobileCellManagement.h	/^class GSM3MobileCellManagement$/;"	c
GSM3MobileCellManagement	./GSM/GSM3MobileCellManagement.h	/^class GSM3MobileCellManagement$/;"	c
__GSM3_MOBILECLIENTPROVIDER__	./GSM/GSM3MobileClientProvider.h	35;"	d
__GSM3_MOBILECLIENTPROVIDER__	./GSM/GSM3MobileClientProvider.h	35;"	d
GSM3MobileClientProvider	./GSM/GSM3MobileClientProvider.h	/^class GSM3MobileClientProvider$/;"	c
GSM3MobileClientProvider	./GSM/GSM3MobileClientProvider.h	/^class GSM3MobileClientProvider$/;"	c
GSM3MobileClientProvider	./GSM/GSM3MobileClientProvider.h	/^		GSM3MobileClientProvider(){};$/;"	f	class:GSM3MobileClientProvider
GSM3MobileClientProvider	./GSM/GSM3MobileClientProvider.h	/^		GSM3MobileClientProvider(){};$/;"	f	class:GSM3MobileClientProvider
GSM3MOBILECLIENTSERVICE_CLIENT	./GSM/GSM3MobileClientService.cpp	43;"	d	file:
GSM3MOBILECLIENTSERVICE_CLIENT	./GSM/GSM3MobileClientService.cpp	43;"	d	file:
GSM3MobileClientService	./GSM/GSM3MobileClientService.cpp	/^GSM3MobileClientService::GSM3MobileClientService(bool synch)$/;"	f	class:GSM3MobileClientService
GSM3MobileClientService	./GSM/GSM3MobileClientService.cpp	/^GSM3MobileClientService::GSM3MobileClientService(bool synch)$/;"	f	class:GSM3MobileClientService
GSM3MobileClientService	./GSM/GSM3MobileClientService.cpp	/^GSM3MobileClientService::GSM3MobileClientService(int socket, bool synch)$/;"	f	class:GSM3MobileClientService
GSM3MobileClientService	./GSM/GSM3MobileClientService.cpp	/^GSM3MobileClientService::GSM3MobileClientService(int socket, bool synch)$/;"	f	class:GSM3MobileClientService
_GSM3MOBILECLIENTSERVICE_	./GSM/GSM3MobileClientService.h	35;"	d
_GSM3MOBILECLIENTSERVICE_	./GSM/GSM3MobileClientService.h	35;"	d
GSM3MobileClientService	./GSM/GSM3MobileClientService.h	/^class GSM3MobileClientService : public Client$/;"	c
GSM3MobileClientService	./GSM/GSM3MobileClientService.h	/^class GSM3MobileClientService : public Client$/;"	c
GSM3MOBILECLIENTSERVICE_SYNCH	./GSM/GSM3MobileClientService.cpp	45;"	d	file:
GSM3MOBILECLIENTSERVICE_SYNCH	./GSM/GSM3MobileClientService.cpp	45;"	d	file:
GSM3MOBILECLIENTSERVICE_WRITING	./GSM/GSM3MobileClientService.cpp	44;"	d	file:
GSM3MOBILECLIENTSERVICE_WRITING	./GSM/GSM3MobileClientService.cpp	44;"	d	file:
_GSM3MOBILEDATANETWORKPROVIDER_	./GSM/GSM3MobileDataNetworkProvider.h	35;"	d
_GSM3MOBILEDATANETWORKPROVIDER_	./GSM/GSM3MobileDataNetworkProvider.h	35;"	d
GSM3MobileDataNetworkProvider	./GSM/GSM3MobileDataNetworkProvider.h	/^class GSM3MobileDataNetworkProvider$/;"	c
GSM3MobileDataNetworkProvider	./GSM/GSM3MobileDataNetworkProvider.h	/^class GSM3MobileDataNetworkProvider$/;"	c
GSM3MobileMockupProvider	./GSM/GSM3MobileMockupProvider.cpp	/^GSM3MobileMockupProvider::GSM3MobileMockupProvider()$/;"	f	class:GSM3MobileMockupProvider
GSM3MobileMockupProvider	./GSM/GSM3MobileMockupProvider.cpp	/^GSM3MobileMockupProvider::GSM3MobileMockupProvider()$/;"	f	class:GSM3MobileMockupProvider
_GSM3MOBILEMOCKUPPROVIDER_	./GSM/GSM3MobileMockupProvider.h	35;"	d
_GSM3MOBILEMOCKUPPROVIDER_	./GSM/GSM3MobileMockupProvider.h	35;"	d
GSM3MobileMockupProvider	./GSM/GSM3MobileMockupProvider.h	/^class GSM3MobileMockupProvider: public GSM3MobileNetworkProvider$/;"	c
GSM3MobileMockupProvider	./GSM/GSM3MobileMockupProvider.h	/^class GSM3MobileMockupProvider: public GSM3MobileNetworkProvider$/;"	c
GSM3MobileNetworkProvider	./GSM/GSM3MobileNetworkProvider.cpp	/^GSM3MobileNetworkProvider::GSM3MobileNetworkProvider()$/;"	f	class:GSM3MobileNetworkProvider
GSM3MobileNetworkProvider	./GSM/GSM3MobileNetworkProvider.cpp	/^GSM3MobileNetworkProvider::GSM3MobileNetworkProvider()$/;"	f	class:GSM3MobileNetworkProvider
_GSM3MOBILENETWORKPROVIDER_	./GSM/GSM3MobileNetworkProvider.h	35;"	d
_GSM3MOBILENETWORKPROVIDER_	./GSM/GSM3MobileNetworkProvider.h	35;"	d
GSM3MobileNetworkProvider	./GSM/GSM3MobileNetworkProvider.h	/^class GSM3MobileNetworkProvider $/;"	c
GSM3MobileNetworkProvider	./GSM/GSM3MobileNetworkProvider.h	/^class GSM3MobileNetworkProvider $/;"	c
GSM3MobileNetworkRegistry	./GSM/GSM3MobileNetworkRegistry.cpp	/^GSM3MobileNetworkRegistry::GSM3MobileNetworkRegistry()$/;"	f	class:GSM3MobileNetworkRegistry
GSM3MobileNetworkRegistry	./GSM/GSM3MobileNetworkRegistry.cpp	/^GSM3MobileNetworkRegistry::GSM3MobileNetworkRegistry()$/;"	f	class:GSM3MobileNetworkRegistry
_GSM3MOBILENETWORKREGISTRY_	./GSM/GSM3MobileNetworkRegistry.h	35;"	d
_GSM3MOBILENETWORKREGISTRY_	./GSM/GSM3MobileNetworkRegistry.h	35;"	d
GSM3MobileNetworkRegistry	./GSM/GSM3MobileNetworkRegistry.h	/^class GSM3MobileNetworkRegistry$/;"	c
GSM3MobileNetworkRegistry	./GSM/GSM3MobileNetworkRegistry.h	/^class GSM3MobileNetworkRegistry$/;"	c
__GSM3_MOBILESERVERPROVIDER__	./GSM/GSM3MobileServerProvider.h	35;"	d
__GSM3_MOBILESERVERPROVIDER__	./GSM/GSM3MobileServerProvider.h	35;"	d
GSM3MobileServerProvider	./GSM/GSM3MobileServerProvider.h	/^class GSM3MobileServerProvider$/;"	c
GSM3MobileServerProvider	./GSM/GSM3MobileServerProvider.h	/^class GSM3MobileServerProvider$/;"	c
GSM3MobileServerProvider	./GSM/GSM3MobileServerProvider.h	/^		GSM3MobileServerProvider(){};$/;"	f	class:GSM3MobileServerProvider
GSM3MobileServerProvider	./GSM/GSM3MobileServerProvider.h	/^		GSM3MobileServerProvider(){};$/;"	f	class:GSM3MobileServerProvider
GSM3MobileServerService	./GSM/GSM3MobileServerService.cpp	/^GSM3MobileServerService::GSM3MobileServerService(uint8_t port, bool synch)$/;"	f	class:GSM3MobileServerService
GSM3MobileServerService	./GSM/GSM3MobileServerService.cpp	/^GSM3MobileServerService::GSM3MobileServerService(uint8_t port, bool synch)$/;"	f	class:GSM3MobileServerService
_GSM3MOBILESERVERSERVICE_	./GSM/GSM3MobileServerService.h	35;"	d
_GSM3MOBILESERVERSERVICE_	./GSM/GSM3MobileServerService.h	35;"	d
GSM3MobileServerService	./GSM/GSM3MobileServerService.h	/^class GSM3MobileServerService : public Server$/;"	c
GSM3MobileServerService	./GSM/GSM3MobileServerService.h	/^class GSM3MobileServerService : public Server$/;"	c
GSM3MOBILESERVERSERVICE_SYNCH	./GSM/GSM3MobileServerService.cpp	42;"	d	file:
GSM3MOBILESERVERSERVICE_SYNCH	./GSM/GSM3MobileServerService.cpp	42;"	d	file:
_GSM3MOBILESMSPROVIDER_	./GSM/GSM3MobileSMSProvider.h	35;"	d
_GSM3MOBILESMSPROVIDER_	./GSM/GSM3MobileSMSProvider.h	35;"	d
GSM3MobileSMSProvider	./GSM/GSM3MobileSMSProvider.h	/^class GSM3MobileSMSProvider$/;"	c
GSM3MobileSMSProvider	./GSM/GSM3MobileSMSProvider.h	/^class GSM3MobileSMSProvider$/;"	c
_GSM3MOBILEVOICEPROVIDER_	./GSM/GSM3MobileVoiceProvider.h	35;"	d
_GSM3MOBILEVOICEPROVIDER_	./GSM/GSM3MobileVoiceProvider.h	35;"	d
GSM3MobileVoiceProvider	./GSM/GSM3MobileVoiceProvider.h	/^class GSM3MobileVoiceProvider$/;"	c
GSM3MobileVoiceProvider	./GSM/GSM3MobileVoiceProvider.h	/^class GSM3MobileVoiceProvider$/;"	c
GSM3_modemlinest_e	./GSM/GSM3MobileMockupProvider.h	/^		enum GSM3_modemlinest_e { IDLE, WAITINGANSWER, SENDINGSMS};$/;"	g	class:GSM3MobileMockupProvider
GSM3_modemlinest_e	./GSM/GSM3MobileMockupProvider.h	/^		enum GSM3_modemlinest_e { IDLE, WAITINGANSWER, SENDINGSMS};$/;"	g	class:GSM3MobileMockupProvider
GSM3_NetworkStatus_t	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	g
GSM3_NetworkStatus_t	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	g
GSM3ShieldV1AccessProvider	./GSM/GSM3ShieldV1AccessProvider.cpp	/^GSM3ShieldV1AccessProvider::GSM3ShieldV1AccessProvider(bool debug)$/;"	f	class:GSM3ShieldV1AccessProvider
GSM3ShieldV1AccessProvider	./GSM/GSM3ShieldV1AccessProvider.cpp	/^GSM3ShieldV1AccessProvider::GSM3ShieldV1AccessProvider(bool debug)$/;"	f	class:GSM3ShieldV1AccessProvider
_GSM3SHIELDV1ACCESSPROVIDER_	./GSM/GSM3ShieldV1AccessProvider.h	35;"	d
_GSM3SHIELDV1ACCESSPROVIDER_	./GSM/GSM3ShieldV1AccessProvider.h	35;"	d
GSM3ShieldV1AccessProvider	./GSM/GSM3ShieldV1AccessProvider.h	/^class GSM3ShieldV1AccessProvider : public GSM3MobileAccessProvider, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1AccessProvider	./GSM/GSM3ShieldV1AccessProvider.h	/^class GSM3ShieldV1AccessProvider : public GSM3MobileAccessProvider, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1BandManagement	./GSM/GSM3ShieldV1BandManagement.cpp	/^GSM3ShieldV1BandManagement::GSM3ShieldV1BandManagement(bool trace): modem(trace)$/;"	f	class:GSM3ShieldV1BandManagement
GSM3ShieldV1BandManagement	./GSM/GSM3ShieldV1BandManagement.cpp	/^GSM3ShieldV1BandManagement::GSM3ShieldV1BandManagement(bool trace): modem(trace)$/;"	f	class:GSM3ShieldV1BandManagement
__GSM3SHIELDV1BANDMANAGEMENT__	./GSM/GSM3ShieldV1BandManagement.h	35;"	d
__GSM3SHIELDV1BANDMANAGEMENT__	./GSM/GSM3ShieldV1BandManagement.h	35;"	d
GSM3ShieldV1BandManagement	./GSM/GSM3ShieldV1BandManagement.h	/^class GSM3ShieldV1BandManagement$/;"	c
GSM3ShieldV1BandManagement	./GSM/GSM3ShieldV1BandManagement.h	/^class GSM3ShieldV1BandManagement$/;"	c
_GSM3SHIELDV1BASEPROVIDER_	./GSM/GSM3ShieldV1BaseProvider.h	35;"	d
_GSM3SHIELDV1BASEPROVIDER_	./GSM/GSM3ShieldV1BaseProvider.h	35;"	d
GSM3ShieldV1BaseProvider	./GSM/GSM3ShieldV1BaseProvider.h	/^class GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1BaseProvider	./GSM/GSM3ShieldV1BaseProvider.h	/^class GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1CellManagement	./GSM/GSM3ShieldV1CellManagement.cpp	/^GSM3ShieldV1CellManagement::GSM3ShieldV1CellManagement()$/;"	f	class:GSM3ShieldV1CellManagement
GSM3ShieldV1CellManagement	./GSM/GSM3ShieldV1CellManagement.cpp	/^GSM3ShieldV1CellManagement::GSM3ShieldV1CellManagement()$/;"	f	class:GSM3ShieldV1CellManagement
__GSM3_SHIELDV1CELLMANAGEMENT__	./GSM/GSM3ShieldV1CellManagement.h	35;"	d
__GSM3_SHIELDV1CELLMANAGEMENT__	./GSM/GSM3ShieldV1CellManagement.h	35;"	d
GSM3ShieldV1CellManagement	./GSM/GSM3ShieldV1CellManagement.h	/^class GSM3ShieldV1CellManagement : public GSM3MobileCellManagement, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1CellManagement	./GSM/GSM3ShieldV1CellManagement.h	/^class GSM3ShieldV1CellManagement : public GSM3MobileCellManagement, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1ClientProvider	./GSM/GSM3ShieldV1ClientProvider.cpp	/^GSM3ShieldV1ClientProvider::GSM3ShieldV1ClientProvider()$/;"	f	class:GSM3ShieldV1ClientProvider
GSM3ShieldV1ClientProvider	./GSM/GSM3ShieldV1ClientProvider.cpp	/^GSM3ShieldV1ClientProvider::GSM3ShieldV1ClientProvider()$/;"	f	class:GSM3ShieldV1ClientProvider
__GSM3_SHIELDV1CLIENTPROVIDER__	./GSM/GSM3ShieldV1ClientProvider.h	35;"	d
__GSM3_SHIELDV1CLIENTPROVIDER__	./GSM/GSM3ShieldV1ClientProvider.h	35;"	d
GSM3ShieldV1ClientProvider	./GSM/GSM3ShieldV1ClientProvider.h	/^class GSM3ShieldV1ClientProvider : public GSM3MobileClientProvider,  public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1ClientProvider	./GSM/GSM3ShieldV1ClientProvider.h	/^class GSM3ShieldV1ClientProvider : public GSM3MobileClientProvider,  public GSM3ShieldV1BaseProvider$/;"	c
__GSM3_SHIELDV1CLIENTPROVIDER__	./GSM/GSM3ShieldV1MultiClientProvider.h	35;"	d
__GSM3_SHIELDV1CLIENTPROVIDER__	./GSM/GSM3ShieldV1MultiClientProvider.h	35;"	d
_GSM3SHIELDV1DATANETWORKPROVIDER_	./GSM/GSM3ShieldV1DataNetworkProvider.h	35;"	d
_GSM3SHIELDV1DATANETWORKPROVIDER_	./GSM/GSM3ShieldV1DataNetworkProvider.h	35;"	d
GSM3ShieldV1DataNetworkProvider	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^class GSM3ShieldV1DataNetworkProvider : public GSM3MobileDataNetworkProvider, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1DataNetworkProvider	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^class GSM3ShieldV1DataNetworkProvider : public GSM3MobileDataNetworkProvider, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1DirectModemProvider	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^GSM3ShieldV1DirectModemProvider::GSM3ShieldV1DirectModemProvider(bool t)$/;"	f	class:GSM3ShieldV1DirectModemProvider
GSM3ShieldV1DirectModemProvider	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^GSM3ShieldV1DirectModemProvider::GSM3ShieldV1DirectModemProvider(bool t)$/;"	f	class:GSM3ShieldV1DirectModemProvider
GSM3ShieldV1DirectModemProvider	./GSM/GSM3ShieldV1DirectModemProvider.h	/^class GSM3ShieldV1DirectModemProvider : public GSM3ShieldV1BaseProvider, public Stream$/;"	c
GSM3ShieldV1DirectModemProvider	./GSM/GSM3ShieldV1DirectModemProvider.h	/^class GSM3ShieldV1DirectModemProvider : public GSM3ShieldV1BaseProvider, public Stream$/;"	c
GSM3ShieldV1	./GSM/GSM3ShieldV1.cpp	/^GSM3ShieldV1::GSM3ShieldV1(bool db) $/;"	f	class:GSM3ShieldV1
GSM3ShieldV1	./GSM/GSM3ShieldV1.cpp	/^GSM3ShieldV1::GSM3ShieldV1(bool db) $/;"	f	class:GSM3ShieldV1
__GSM3_SHIELDV1__	./GSM/GSM3ShieldV1.h	35;"	d
__GSM3_SHIELDV1__	./GSM/GSM3ShieldV1.h	35;"	d
GSM3ShieldV1	./GSM/GSM3ShieldV1.h	/^class GSM3ShieldV1 : public GSM3MobileNetworkProvider, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1	./GSM/GSM3ShieldV1.h	/^class GSM3ShieldV1 : public GSM3MobileNetworkProvider, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1ModemCore	./GSM/GSM3ShieldV1ModemCore.cpp	/^GSM3ShieldV1ModemCore::GSM3ShieldV1ModemCore() : gss()$/;"	f	class:GSM3ShieldV1ModemCore
GSM3ShieldV1ModemCore	./GSM/GSM3ShieldV1ModemCore.cpp	/^GSM3ShieldV1ModemCore::GSM3ShieldV1ModemCore() : gss()$/;"	f	class:GSM3ShieldV1ModemCore
__GSM3_SHIELDV1MODEMCORE__	./GSM/GSM3ShieldV1ModemCore.h	36;"	d
__GSM3_SHIELDV1MODEMCORE__	./GSM/GSM3ShieldV1ModemCore.h	36;"	d
GSM3ShieldV1ModemCore	./GSM/GSM3ShieldV1ModemCore.h	/^class GSM3ShieldV1ModemCore : public GSM3SoftSerialMgr, public Print$/;"	c
GSM3ShieldV1ModemCore	./GSM/GSM3ShieldV1ModemCore.h	/^class GSM3ShieldV1ModemCore : public GSM3SoftSerialMgr, public Print$/;"	c
GSM3ShieldV1ModemVerification	./GSM/GSM3ShieldV1ModemVerification.cpp	/^GSM3ShieldV1ModemVerification::GSM3ShieldV1ModemVerification()$/;"	f	class:GSM3ShieldV1ModemVerification
GSM3ShieldV1ModemVerification	./GSM/GSM3ShieldV1ModemVerification.cpp	/^GSM3ShieldV1ModemVerification::GSM3ShieldV1ModemVerification()$/;"	f	class:GSM3ShieldV1ModemVerification
_GSM3SHIELDV1MODEMVERIFICATION_	./GSM/GSM3ShieldV1ModemVerification.h	35;"	d
_GSM3SHIELDV1MODEMVERIFICATION_	./GSM/GSM3ShieldV1ModemVerification.h	35;"	d
GSM3ShieldV1ModemVerification	./GSM/GSM3ShieldV1ModemVerification.h	/^class GSM3ShieldV1ModemVerification$/;"	c
GSM3ShieldV1ModemVerification	./GSM/GSM3ShieldV1ModemVerification.h	/^class GSM3ShieldV1ModemVerification$/;"	c
GSM3ShieldV1MultiClientProvider	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^GSM3ShieldV1MultiClientProvider::GSM3ShieldV1MultiClientProvider()$/;"	f	class:GSM3ShieldV1MultiClientProvider
GSM3ShieldV1MultiClientProvider	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^GSM3ShieldV1MultiClientProvider::GSM3ShieldV1MultiClientProvider()$/;"	f	class:GSM3ShieldV1MultiClientProvider
GSM3ShieldV1MultiClientProvider	./GSM/GSM3ShieldV1MultiClientProvider.h	/^class GSM3ShieldV1MultiClientProvider : public GSM3MobileClientProvider,  public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1MultiClientProvider	./GSM/GSM3ShieldV1MultiClientProvider.h	/^class GSM3ShieldV1MultiClientProvider : public GSM3MobileClientProvider,  public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1MultiServerProvider	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^GSM3ShieldV1MultiServerProvider::GSM3ShieldV1MultiServerProvider()$/;"	f	class:GSM3ShieldV1MultiServerProvider
GSM3ShieldV1MultiServerProvider	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^GSM3ShieldV1MultiServerProvider::GSM3ShieldV1MultiServerProvider()$/;"	f	class:GSM3ShieldV1MultiServerProvider
GSM3ShieldV1MultiServerProvider	./GSM/GSM3ShieldV1MultiServerProvider.h	/^class GSM3ShieldV1MultiServerProvider : public GSM3MobileServerProvider,  public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1MultiServerProvider	./GSM/GSM3ShieldV1MultiServerProvider.h	/^class GSM3ShieldV1MultiServerProvider : public GSM3MobileServerProvider,  public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1PinManagement	./GSM/GSM3ShieldV1PinManagement.cpp	/^GSM3ShieldV1PinManagement::GSM3ShieldV1PinManagement()$/;"	f	class:GSM3ShieldV1PinManagement
GSM3ShieldV1PinManagement	./GSM/GSM3ShieldV1PinManagement.cpp	/^GSM3ShieldV1PinManagement::GSM3ShieldV1PinManagement()$/;"	f	class:GSM3ShieldV1PinManagement
_GSM3SHIELDV1PINMANAGEMENT_	./GSM/GSM3ShieldV1PinManagement.h	35;"	d
_GSM3SHIELDV1PINMANAGEMENT_	./GSM/GSM3ShieldV1PinManagement.h	35;"	d
GSM3ShieldV1PinManagement	./GSM/GSM3ShieldV1PinManagement.h	/^class GSM3ShieldV1PinManagement$/;"	c
GSM3ShieldV1PinManagement	./GSM/GSM3ShieldV1PinManagement.h	/^class GSM3ShieldV1PinManagement$/;"	c
GSM3ShieldV1ScanNetworks	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^GSM3ShieldV1ScanNetworks::GSM3ShieldV1ScanNetworks(bool trace): modem(trace)$/;"	f	class:GSM3ShieldV1ScanNetworks
GSM3ShieldV1ScanNetworks	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^GSM3ShieldV1ScanNetworks::GSM3ShieldV1ScanNetworks(bool trace): modem(trace)$/;"	f	class:GSM3ShieldV1ScanNetworks
__GSM3SHIELDV1SCANNETWORKS__	./GSM/GSM3ShieldV1ScanNetworks.h	35;"	d
__GSM3SHIELDV1SCANNETWORKS__	./GSM/GSM3ShieldV1ScanNetworks.h	35;"	d
GSM3ShieldV1ScanNetworks	./GSM/GSM3ShieldV1ScanNetworks.h	/^class GSM3ShieldV1ScanNetworks$/;"	c
GSM3ShieldV1ScanNetworks	./GSM/GSM3ShieldV1ScanNetworks.h	/^class GSM3ShieldV1ScanNetworks$/;"	c
__GSM3_SHIELDV1SERVERPROVIDER__	./GSM/GSM3ShieldV1MultiServerProvider.h	35;"	d
__GSM3_SHIELDV1SERVERPROVIDER__	./GSM/GSM3ShieldV1MultiServerProvider.h	35;"	d
GSM3ShieldV1ServerProvider	./GSM/GSM3ShieldV1ServerProvider.cpp	/^GSM3ShieldV1ServerProvider::GSM3ShieldV1ServerProvider()$/;"	f	class:GSM3ShieldV1ServerProvider
GSM3ShieldV1ServerProvider	./GSM/GSM3ShieldV1ServerProvider.cpp	/^GSM3ShieldV1ServerProvider::GSM3ShieldV1ServerProvider()$/;"	f	class:GSM3ShieldV1ServerProvider
__GSM3_SHIELDV1SERVERPROVIDER__	./GSM/GSM3ShieldV1ServerProvider.h	35;"	d
__GSM3_SHIELDV1SERVERPROVIDER__	./GSM/GSM3ShieldV1ServerProvider.h	35;"	d
GSM3ShieldV1ServerProvider	./GSM/GSM3ShieldV1ServerProvider.h	/^class GSM3ShieldV1ServerProvider : public GSM3MobileServerProvider,  public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1ServerProvider	./GSM/GSM3ShieldV1ServerProvider.h	/^class GSM3ShieldV1ServerProvider : public GSM3MobileServerProvider,  public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1SMSProvider	./GSM/GSM3ShieldV1SMSProvider.cpp	/^GSM3ShieldV1SMSProvider::GSM3ShieldV1SMSProvider()$/;"	f	class:GSM3ShieldV1SMSProvider
GSM3ShieldV1SMSProvider	./GSM/GSM3ShieldV1SMSProvider.cpp	/^GSM3ShieldV1SMSProvider::GSM3ShieldV1SMSProvider()$/;"	f	class:GSM3ShieldV1SMSProvider
__GSM3_SHIELDV1SMSPROVIDER__	./GSM/GSM3ShieldV1SMSProvider.h	35;"	d
__GSM3_SHIELDV1SMSPROVIDER__	./GSM/GSM3ShieldV1SMSProvider.h	35;"	d
GSM3ShieldV1SMSProvider	./GSM/GSM3ShieldV1SMSProvider.h	/^class GSM3ShieldV1SMSProvider : public GSM3MobileSMSProvider, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1SMSProvider	./GSM/GSM3ShieldV1SMSProvider.h	/^class GSM3ShieldV1SMSProvider : public GSM3MobileSMSProvider, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1VoiceProvider	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^GSM3ShieldV1VoiceProvider::GSM3ShieldV1VoiceProvider()$/;"	f	class:GSM3ShieldV1VoiceProvider
GSM3ShieldV1VoiceProvider	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^GSM3ShieldV1VoiceProvider::GSM3ShieldV1VoiceProvider()$/;"	f	class:GSM3ShieldV1VoiceProvider
_GSM3SHIELDV1VOICEPROVIDER_	./GSM/GSM3ShieldV1VoiceProvider.h	36;"	d
_GSM3SHIELDV1VOICEPROVIDER_	./GSM/GSM3ShieldV1VoiceProvider.h	36;"	d
GSM3ShieldV1VoiceProvider	./GSM/GSM3ShieldV1VoiceProvider.h	/^class GSM3ShieldV1VoiceProvider : public GSM3MobileVoiceProvider, public GSM3ShieldV1BaseProvider$/;"	c
GSM3ShieldV1VoiceProvider	./GSM/GSM3ShieldV1VoiceProvider.h	/^class GSM3ShieldV1VoiceProvider : public GSM3MobileVoiceProvider, public GSM3ShieldV1BaseProvider$/;"	c
_GSM3SIMPLIFIERFILE_	./GSM/GSM.h	35;"	d
_GSM3SIMPLIFIERFILE_	./GSM/GSM.h	35;"	d
GSM3SMSService	./GSM/GSM3SMSService.cpp	/^GSM3SMSService::GSM3SMSService(bool synch)$/;"	f	class:GSM3SMSService
GSM3SMSService	./GSM/GSM3SMSService.cpp	/^GSM3SMSService::GSM3SMSService(bool synch)$/;"	f	class:GSM3SMSService
_GSM3SMSSERVICE_	./GSM/GSM3SMSService.h	35;"	d
_GSM3SMSSERVICE_	./GSM/GSM3SMSService.h	35;"	d
GSM3SMSService	./GSM/GSM3SMSService.h	/^class GSM3SMSService : public Stream $/;"	c
GSM3SMSService	./GSM/GSM3SMSService.h	/^class GSM3SMSService : public Stream $/;"	c
GSM3SMSSERVICE_SYNCH	./GSM/GSM3SMSService.cpp	42;"	d	file:
GSM3SMSSERVICE_SYNCH	./GSM/GSM3SMSService.cpp	42;"	d	file:
GSM3SoftSerial	./GSM/GSM3SoftSerial.cpp	/^GSM3SoftSerial::GSM3SoftSerial():$/;"	f	class:GSM3SoftSerial
GSM3SoftSerial	./GSM/GSM3SoftSerial.cpp	/^GSM3SoftSerial::GSM3SoftSerial():$/;"	f	class:GSM3SoftSerial
__GSM3_SOFTSERIAL__	./GSM/GSM3SoftSerial.h	35;"	d
__GSM3_SOFTSERIAL__	./GSM/GSM3SoftSerial.h	35;"	d
GSM3SoftSerial	./GSM/GSM3SoftSerial.h	/^class GSM3SoftSerial : public GSM3CircularBufferManager$/;"	c
GSM3SoftSerial	./GSM/GSM3SoftSerial.h	/^class GSM3SoftSerial : public GSM3CircularBufferManager$/;"	c
GSM3SoftSerialMgr	./GSM/GSM3SoftSerial.h	/^class GSM3SoftSerialMgr$/;"	c
GSM3SoftSerialMgr	./GSM/GSM3SoftSerial.h	/^class GSM3SoftSerialMgr$/;"	c
GSM3VoiceCallService	./GSM/GSM3VoiceCallService.cpp	/^GSM3VoiceCallService::GSM3VoiceCallService(bool synch)$/;"	f	class:GSM3VoiceCallService
GSM3VoiceCallService	./GSM/GSM3VoiceCallService.cpp	/^GSM3VoiceCallService::GSM3VoiceCallService(bool synch)$/;"	f	class:GSM3VoiceCallService
_GSM3VOICECALLSERVICE_	./GSM/GSM3VoiceCallService.h	35;"	d
_GSM3VOICECALLSERVICE_	./GSM/GSM3VoiceCallService.h	35;"	d
GSM3VoiceCallService	./GSM/GSM3VoiceCallService.h	/^class GSM3VoiceCallService$/;"	c
GSM3VoiceCallService	./GSM/GSM3VoiceCallService.h	/^class GSM3VoiceCallService$/;"	c
GSM3VOICECALLSERVICE_SYNCH	./GSM/GSM3VoiceCallService.cpp	42;"	d	file:
GSM3VOICECALLSERVICE_SYNCH	./GSM/GSM3VoiceCallService.cpp	42;"	d	file:
GSM3_voiceCall_st	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	g
GSM3_voiceCall_st	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	g
GSM850_EGSM_DCS_PCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
GSM850_EGSM_DCS_PCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
GSM850_PCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
GSM850_PCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
GSMBand	./GSM/GSM.h	65;"	d
GSMBand	./GSM/GSM.h	65;"	d
GSMCell	./GSM/GSM.h	64;"	d
GSMCell	./GSM/GSM.h	64;"	d
GSMClient	./GSM/GSM.h	57;"	d
GSMClient	./GSM/GSM.h	57;"	d
gsm	./GSM/GSM3ShieldV1ModemVerification.h	/^		GSM3ShieldV1AccessProvider gsm; \/\/ Access provider to GSM\/GPRS network$/;"	m	class:GSM3ShieldV1ModemVerification
gsm	./GSM/GSM3ShieldV1ModemVerification.h	/^		GSM3ShieldV1AccessProvider gsm; \/\/ Access provider to GSM\/GPRS network$/;"	m	class:GSM3ShieldV1ModemVerification
gsm	./GSM/GSM3ShieldV1PinManagement.h	/^		GSM3ShieldV1AccessProvider gsm; \/\/ GSM access required for network register with PIN code     $/;"	m	class:GSM3ShieldV1PinManagement
gsm	./GSM/GSM3ShieldV1PinManagement.h	/^		GSM3ShieldV1AccessProvider gsm; \/\/ GSM access required for network register with PIN code     $/;"	m	class:GSM3ShieldV1PinManagement
GSM	./GSM/GSM.h	55;"	d
GSM	./GSM/GSM.h	55;"	d
GSM	./GSM_Shield/GSM_Shield.cpp	/^GSM::GSM(void)$/;"	f	class:GSM
GSM	./GSM_Shield/GSM_Shield.cpp	/^GSM::GSM(void)$/;"	f	class:GSM
GSM	./GSM_Shield/GSM_Shield.h	/^class GSM$/;"	c
GSM	./GSM_Shield/GSM_Shield.h	/^class GSM$/;"	c
GSM_LIB_VERSION	./GSM_Shield/GSM_Shield.h	13;"	d
GSM_LIB_VERSION	./GSM_Shield/GSM_Shield.h	13;"	d
GSM_MODE_DCS	./GSM/GSM3ShieldV1BandManagement.h	43;"	d
GSM_MODE_DCS	./GSM/GSM3ShieldV1BandManagement.h	43;"	d
GSM_MODE_EGSM_DCS	./GSM/GSM3ShieldV1BandManagement.h	45;"	d
GSM_MODE_EGSM_DCS	./GSM/GSM3ShieldV1BandManagement.h	45;"	d
GSM_MODE_EGSM	./GSM/GSM3ShieldV1BandManagement.h	42;"	d
GSM_MODE_EGSM	./GSM/GSM3ShieldV1BandManagement.h	42;"	d
GSM_MODE_GSM850_EGSM_DCS_PCS	./GSM/GSM3ShieldV1BandManagement.h	47;"	d
GSM_MODE_GSM850_EGSM_DCS_PCS	./GSM/GSM3ShieldV1BandManagement.h	47;"	d
GSM_MODE_GSM850_PCS	./GSM/GSM3ShieldV1BandManagement.h	46;"	d
GSM_MODE_GSM850_PCS	./GSM/GSM3ShieldV1BandManagement.h	46;"	d
GSMModem	./GSM/GSM.h	63;"	d
GSMModem	./GSM/GSM.h	63;"	d
GSM_MODE_PCS	./GSM/GSM3ShieldV1BandManagement.h	44;"	d
GSM_MODE_PCS	./GSM/GSM3ShieldV1BandManagement.h	44;"	d
GSM_MODE_UNDEFINED	./GSM/GSM3ShieldV1BandManagement.h	41;"	d
GSM_MODE_UNDEFINED	./GSM/GSM3ShieldV1BandManagement.h	41;"	d
GSM_ON	./GSM_Shield/GSM_Shield.h	33;"	d
GSM_ON	./GSM_Shield/GSM_Shield.h	33;"	d
GSMPIN	./GSM/GSM.h	62;"	d
GSMPIN	./GSM/GSM.h	62;"	d
GSM_READY	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
GSM_READY	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
GSM_RESET	./GSM_Shield/GSM_Shield.h	34;"	d
GSM_RESET	./GSM_Shield/GSM_Shield.h	34;"	d
GSMScanner	./GSM/GSM.h	66;"	d
GSMScanner	./GSM/GSM.h	66;"	d
GSMServer	./GSM/GSM.h	58;"	d
GSMServer	./GSM/GSM.h	58;"	d
__GSM_Shield	./GSM_Shield/GSM_Shield.h	8;"	d
__GSM_Shield	./GSM_Shield/GSM_Shield.h	8;"	d
GSM_SMS	./GSM/GSM.h	60;"	d
GSM_SMS	./GSM/GSM.h	60;"	d
_GSMSOFTSERIALFLAGS_ESCAPED_	./GSM/GSM3SoftSerial.cpp	58;"	d	file:
_GSMSOFTSERIALFLAGS_ESCAPED_	./GSM/GSM3SoftSerial.cpp	58;"	d	file:
_GSMSOFTSERIALFLAGS_SENTXOFF_	./GSM/GSM3SoftSerial.cpp	59;"	d	file:
_GSMSOFTSERIALFLAGS_SENTXOFF_	./GSM/GSM3SoftSerial.cpp	59;"	d	file:
GSMVoiceCall	./GSM/GSM.h	59;"	d
GSMVoiceCall	./GSM/GSM.h	59;"	d
gss	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3SoftSerial gss; \/\/ Direct access to modem$/;"	m	class:GSM3ShieldV1ModemCore
gss	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3SoftSerial gss; \/\/ Direct access to modem$/;"	m	class:GSM3ShieldV1ModemCore
handle_interrupt	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::handle_interrupt()$/;"	f	class:GSM3SoftSerial
handle_interrupt	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::handle_interrupt()$/;"	f	class:GSM3SoftSerial
handle_interrupt	./SoftwareSerial/SoftwareSerial.cpp	/^inline void SoftwareSerial::handle_interrupt()$/;"	f	class:SoftwareSerial
handle_interrupt	./SoftwareSerial/SoftwareSerial.cpp	/^inline void SoftwareSerial::handle_interrupt()$/;"	f	class:SoftwareSerial
handle_interrupts	./Servo/Servo.cpp	/^static inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)$/;"	f	file:
handle_interrupts	./Servo/Servo.cpp	/^static inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)$/;"	f	file:
hangCallContinue	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^void GSM3ShieldV1VoiceProvider::hangCallContinue()$/;"	f	class:GSM3ShieldV1VoiceProvider
hangCallContinue	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^void GSM3ShieldV1VoiceProvider::hangCallContinue()$/;"	f	class:GSM3ShieldV1VoiceProvider
hangCall	./GSM/GSM3MobileMockupProvider.h	/^		inline int hangCall(){return 0;};$/;"	f	class:GSM3MobileMockupProvider
hangCall	./GSM/GSM3MobileMockupProvider.h	/^		inline int hangCall(){return 0;};$/;"	f	class:GSM3MobileMockupProvider
HANGCALL	./GSM/GSM3ShieldV1BaseProvider.h	/^	VOICECALL, ANSWERCALL, HANGCALL, RETRIEVECALLINGNUMBER, $/;"	e	enum:GSM3_commandType_e
HANGCALL	./GSM/GSM3ShieldV1BaseProvider.h	/^	VOICECALL, ANSWERCALL, HANGCALL, RETRIEVECALLINGNUMBER, $/;"	e	enum:GSM3_commandType_e
hangCall	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^int GSM3ShieldV1VoiceProvider::hangCall()$/;"	f	class:GSM3ShieldV1VoiceProvider
hangCall	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^int GSM3ShieldV1VoiceProvider::hangCall()$/;"	f	class:GSM3ShieldV1VoiceProvider
hangCall	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::hangCall()$/;"	f	class:GSM3VoiceCallService
hangCall	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::hangCall()$/;"	f	class:GSM3VoiceCallService
HangUp	./GSM_Shield/GSM_Shield.cpp	/^void GSM::HangUp(void)$/;"	f	class:GSM
HangUp	./GSM_Shield/GSM_Shield.cpp	/^void GSM::HangUp(void)$/;"	f	class:GSM
hdop	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSDecimal hdop;$/;"	m	class:TinyGPSPlus
hdop	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSDecimal hdop;$/;"	m	class:TinyGPSPlus
hdop	./TinyGPS/TinyGPS.h	/^  inline unsigned long hdop() { return _hdop; }$/;"	f	class:TinyGPS
hdop	./TinyGPS/TinyGPS.h	/^  inline unsigned long hdop() { return _hdop; }$/;"	f	class:TinyGPS
_hdop	./TinyGPS/TinyGPS.h	/^  unsigned long  _hdop, _new_hdop;$/;"	m	class:TinyGPS
_hdop	./TinyGPS/TinyGPS.h	/^  unsigned long  _hdop, _new_hdop;$/;"	m	class:TinyGPS
headCount	./Robot_Control/FatStructs.h	/^  uint16_t headCount;$/;"	m	struct:biosParmBlock
headCount	./Robot_Control/FatStructs.h	/^  uint16_t headCount;$/;"	m	struct:biosParmBlock
headCount	./SD/utility/FatStructs.h	/^  uint16_t headCount;$/;"	m	struct:biosParmBlock
headCount	./SD/utility/FatStructs.h	/^  uint16_t headCount;$/;"	m	struct:biosParmBlock
head	./GSM/GSM3CircularBuffer.h	/^		volatile byte head; \/\/ First written one$/;"	m	class:GSM3CircularBuffer
head	./GSM/GSM3CircularBuffer.h	/^		volatile byte head; \/\/ First written one$/;"	m	class:GSM3CircularBuffer
height	./Robot_Control/Adafruit_GFX.cpp	/^int16_t Adafruit_GFX::height(void) { $/;"	f	class:Adafruit_GFX
height	./Robot_Control/Adafruit_GFX.cpp	/^int16_t Adafruit_GFX::height(void) { $/;"	f	class:Adafruit_GFX
_height	./Robot_Control/Adafruit_GFX.h	/^  int16_t  _width, _height; \/\/ dependent on rotation$/;"	m	class:Adafruit_GFX
_height	./Robot_Control/Adafruit_GFX.h	/^  int16_t  _width, _height; \/\/ dependent on rotation$/;"	m	class:Adafruit_GFX
HEIGHT	./Robot_Control/Adafruit_GFX.h	/^  int16_t  WIDTH, HEIGHT;   \/\/ this is the 'raw' display w\/h - never changes$/;"	m	class:Adafruit_GFX
HEIGHT	./Robot_Control/Adafruit_GFX.h	/^  int16_t  WIDTH, HEIGHT;   \/\/ this is the 'raw' display w\/h - never changes$/;"	m	class:Adafruit_GFX
height	./Robot_Control/ArduinoRobot.h	/^	uint8_t height;$/;"	m	struct:EEPROM_BMP
height	./Robot_Control/ArduinoRobot.h	/^	uint8_t height;$/;"	m	struct:EEPROM_BMP
height	./TFT/utility/Adafruit_GFX.cpp	/^int16_t Adafruit_GFX::height(void) { $/;"	f	class:Adafruit_GFX
height	./TFT/utility/Adafruit_GFX.cpp	/^int16_t Adafruit_GFX::height(void) { $/;"	f	class:Adafruit_GFX
_height	./TFT/utility/Adafruit_GFX.h	/^  int16_t  _width, _height; \/\/ dependent on rotation$/;"	m	class:Adafruit_GFX
_height	./TFT/utility/Adafruit_GFX.h	/^  int16_t  _width, _height; \/\/ dependent on rotation$/;"	m	class:Adafruit_GFX
HEIGHT	./TFT/utility/Adafruit_GFX.h	/^  int16_t  WIDTH, HEIGHT;   \/\/ this is the 'raw' display w\/h - never changes$/;"	m	class:Adafruit_GFX
HEIGHT	./TFT/utility/Adafruit_GFX.h	/^  int16_t  WIDTH, HEIGHT;   \/\/ this is the 'raw' display w\/h - never changes$/;"	m	class:Adafruit_GFX
height	./TFT/utility/PImage.h	/^  int height() { return _bmpHeight; }$/;"	f	class:PImage
height	./TFT/utility/PImage.h	/^  int height() { return _bmpHeight; }$/;"	f	class:PImage
HI4	./Robot_Control/Squawk.cpp	14;"	d	file:
HI4	./Robot_Control/Squawk.cpp	14;"	d	file:
hidddenSectors	./Robot_Control/FatStructs.h	/^  uint32_t hidddenSectors;$/;"	m	struct:biosParmBlock
hidddenSectors	./Robot_Control/FatStructs.h	/^  uint32_t hidddenSectors;$/;"	m	struct:biosParmBlock
hidddenSectors	./SD/utility/FatStructs.h	/^  uint32_t hidddenSectors;$/;"	m	struct:biosParmBlock
hidddenSectors	./SD/utility/FatStructs.h	/^  uint32_t hidddenSectors;$/;"	m	struct:biosParmBlock
hideColor	./Robot_Control/utility/VirtualKeyboard.h	/^		uint16_t hideColor;$/;"	m	class:VirtualKeyboard
hideColor	./Robot_Control/utility/VirtualKeyboard.h	/^		uint16_t hideColor;$/;"	m	class:VirtualKeyboard
hide	./Robot_Control/utility/VirtualKeyboard.cpp	/^void VirtualKeyboard::hide(){$/;"	f	class:VirtualKeyboard
hide	./Robot_Control/utility/VirtualKeyboard.cpp	/^void VirtualKeyboard::hide(){$/;"	f	class:VirtualKeyboard
hlen	./Ethernet/Dhcp.h	/^	uint8_t  hlen;$/;"	m	struct:_RIP_MSG_FIXED
hlen	./Ethernet/Dhcp.h	/^	uint8_t  hlen;$/;"	m	struct:_RIP_MSG_FIXED
HMC6352ReadAddress	./Robot_Control/Compass.h	12;"	d
HMC6352ReadAddress	./Robot_Control/Compass.h	12;"	d
HMC6352SlaveAddress	./Robot_Control/Compass.h	11;"	d
HMC6352SlaveAddress	./Robot_Control/Compass.h	11;"	d
HOME_BMP	./Robot_Control/ArduinoRobot.h	34;"	d
HOME_BMP	./Robot_Control/ArduinoRobot.h	34;"	d
home	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::home()$/;"	f	class:LiquidCrystal
home	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::home()$/;"	f	class:LiquidCrystal
hops	./Ethernet/Dhcp.h	/^	uint8_t  hops;$/;"	m	struct:_RIP_MSG_FIXED
hops	./Ethernet/Dhcp.h	/^	uint8_t  hops;$/;"	m	struct:_RIP_MSG_FIXED
hostByName	./WiFi/WiFi.cpp	/^int WiFiClass::hostByName(const char* aHostname, IPAddress& aResult)$/;"	f	class:WiFiClass
hostByName	./WiFi/WiFi.cpp	/^int WiFiClass::hostByName(const char* aHostname, IPAddress& aResult)$/;"	f	class:WiFiClass
HOST_NAME	./Ethernet/Dhcp.h	47;"	d
HOST_NAME	./Ethernet/Dhcp.h	47;"	d
hostName	./Ethernet/Dhcp.h	/^	hostName		=	12,$/;"	e	enum:__anon14
hostName	./Ethernet/Dhcp.h	/^	hostName		=	12,$/;"	e	enum:__anon14
hour	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSTime::hour()$/;"	f	class:TinyGPSTime
hour	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSTime::hour()$/;"	f	class:TinyGPSTime
htonl	./Ethernet/util.h	7;"	d
htonl	./Ethernet/util.h	7;"	d
htons	./Ethernet/util.h	4;"	d
htons	./Ethernet/util.h	4;"	d
htype	./Ethernet/Dhcp.h	/^	uint8_t  htype; $/;"	m	struct:_RIP_MSG_FIXED
htype	./Ethernet/Dhcp.h	/^	uint8_t  htype; $/;"	m	struct:_RIP_MSG_FIXED
HWrestart	./GSM/GSM3ShieldV1AccessProvider.cpp	/^int GSM3ShieldV1AccessProvider::HWrestart()$/;"	f	class:GSM3ShieldV1AccessProvider
HWrestart	./GSM/GSM3ShieldV1AccessProvider.cpp	/^int GSM3ShieldV1AccessProvider::HWrestart()$/;"	f	class:GSM3ShieldV1AccessProvider
hwSPI	./Robot_Control/Arduino_LCD.h	/^  boolean  hwSPI;$/;"	m	class:Arduino_LCD
hwSPI	./Robot_Control/Arduino_LCD.h	/^  boolean  hwSPI;$/;"	m	class:Arduino_LCD
hwSPI	./TFT/utility/Adafruit_ST7735.h	/^  boolean  hwSPI;$/;"	m	class:Adafruit_ST7735
hwSPI	./TFT/utility/Adafruit_ST7735.h	/^  boolean  hwSPI;$/;"	m	class:Adafruit_ST7735
HWstart	./GSM/GSM3ShieldV1AccessProvider.cpp	/^int GSM3ShieldV1AccessProvider::HWstart()$/;"	f	class:GSM3ShieldV1AccessProvider
HWstart	./GSM/GSM3ShieldV1AccessProvider.cpp	/^int GSM3ShieldV1AccessProvider::HWstart()$/;"	f	class:GSM3ShieldV1AccessProvider
I2C_CONFIG	./Firmata/Firmata.h	49;"	d
I2C_CONFIG	./Firmata/Firmata.h	49;"	d
I2C	./Firmata/Firmata.h	74;"	d
I2C	./Firmata/Firmata.h	74;"	d
I2C_REPLY	./Firmata/Firmata.h	48;"	d
I2C_REPLY	./Firmata/Firmata.h	48;"	d
I2C_REQUEST	./Firmata/Firmata.h	47;"	d
I2C_REQUEST	./Firmata/Firmata.h	47;"	d
i	./AFMotor/examples/MotorParty/MotorParty.pde	/^int i;$/;"	v
i	./AFMotor/examples/MotorParty/MotorParty.pde	/^int i;$/;"	v
ICMP	./Ethernet/utility/w5100.h	/^  static const uint8_t ICMP = 1;$/;"	m	class:IPPROTO
ICMP	./Ethernet/utility/w5100.h	/^  static const uint8_t ICMP = 1;$/;"	m	class:IPPROTO
IDLE_CALL	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	e	enum:GSM3_voiceCall_st
IDLE_CALL	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	e	enum:GSM3_voiceCall_st
IDLE	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
IDLE	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
IDLE	./GSM/GSM3MobileMockupProvider.h	/^		enum GSM3_modemlinest_e { IDLE, WAITINGANSWER, SENDINGSMS};$/;"	e	enum:GSM3MobileMockupProvider::GSM3_modemlinest_e
IDLE	./GSM/GSM3MobileMockupProvider.h	/^		enum GSM3_modemlinest_e { IDLE, WAITINGANSWER, SENDINGSMS};$/;"	e	enum:GSM3MobileMockupProvider::GSM3_modemlinest_e
IDM_AR0	./Ethernet/utility/w5100.h	21;"	d
IDM_AR0	./Ethernet/utility/w5100.h	21;"	d
IDM_AR1	./Ethernet/utility/w5100.h	22;"	d
IDM_AR1	./Ethernet/utility/w5100.h	22;"	d
IDM_DR	./Ethernet/utility/w5100.h	23;"	d
IDM_DR	./Ethernet/utility/w5100.h	23;"	d
IDM_OR	./Ethernet/utility/w5100.h	20;"	d
IDM_OR	./Ethernet/utility/w5100.h	20;"	d
iDNSServer	./Ethernet/Dns.h	/^    IPAddress iDNSServer;$/;"	m	class:DNSClient
iDNSServer	./Ethernet/Dns.h	/^    IPAddress iDNSServer;$/;"	m	class:DNSClient
IDP	./Ethernet/utility/w5100.h	/^  static const uint8_t IDP  = 22;$/;"	m	class:IPPROTO
IDP	./Ethernet/utility/w5100.h	/^  static const uint8_t IDP  = 22;$/;"	m	class:IPPROTO
idSMS	./GSM/GSM3ShieldV1SMSProvider.h	/^		int idSMS; \/\/ Id from current SMS being read.$/;"	m	class:GSM3ShieldV1SMSProvider
idSMS	./GSM/GSM3ShieldV1SMSProvider.h	/^		int idSMS; \/\/ Id from current SMS being read.$/;"	m	class:GSM3ShieldV1SMSProvider
idSocket	./GSM/GSM3ShieldV1ClientProvider.h	/^		int idSocket;				\/\/ Remote ID socket.$/;"	m	class:GSM3ShieldV1ClientProvider
idSocket	./GSM/GSM3ShieldV1ClientProvider.h	/^		int idSocket;				\/\/ Remote ID socket.$/;"	m	class:GSM3ShieldV1ClientProvider
idSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int idSocket; 		\/\/ Remote ID socket$/;"	m	class:GSM3ShieldV1MultiClientProvider
idSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int idSocket; 		\/\/ Remote ID socket$/;"	m	class:GSM3ShieldV1MultiClientProvider
IF_CHECK_START_CMD	./WiFi/utility/spi_drv.cpp	122;"	d	file:
IF_CHECK_START_CMD	./WiFi/utility/spi_drv.cpp	122;"	d	file:
IGMP	./Ethernet/utility/w5100.h	/^  static const uint8_t IGMP = 2;$/;"	m	class:IPPROTO
IGMP	./Ethernet/utility/w5100.h	/^  static const uint8_t IGMP = 2;$/;"	m	class:IPPROTO
igmpsend	./Ethernet/utility/socket.cpp	/^uint16_t igmpsend(SOCKET s, const uint8_t * buf, uint16_t len)$/;"	f
igmpsend	./Ethernet/utility/socket.cpp	/^uint16_t igmpsend(SOCKET s, const uint8_t * buf, uint16_t len)$/;"	f
ILI9163C_BLACK	./Robot_Control/Arduino_LCD.h	85;"	d
ILI9163C_BLACK	./Robot_Control/Arduino_LCD.h	85;"	d
ILI9163C_BLUE	./Robot_Control/Arduino_LCD.h	86;"	d
ILI9163C_BLUE	./Robot_Control/Arduino_LCD.h	86;"	d
ILI9163C_CASET	./Robot_Control/Arduino_LCD.h	52;"	d
ILI9163C_CASET	./Robot_Control/Arduino_LCD.h	52;"	d
ILI9163C_COLMOD	./Robot_Control/Arduino_LCD.h	58;"	d
ILI9163C_COLMOD	./Robot_Control/Arduino_LCD.h	58;"	d
ILI9163C_CYAN	./Robot_Control/Arduino_LCD.h	89;"	d
ILI9163C_CYAN	./Robot_Control/Arduino_LCD.h	89;"	d
ILI9163C_DISPOFF	./Robot_Control/Arduino_LCD.h	50;"	d
ILI9163C_DISPOFF	./Robot_Control/Arduino_LCD.h	50;"	d
ILI9163C_DISPON	./Robot_Control/Arduino_LCD.h	51;"	d
ILI9163C_DISPON	./Robot_Control/Arduino_LCD.h	51;"	d
ILI9163C_DISSET5	./Robot_Control/Arduino_LCD.h	65;"	d
ILI9163C_DISSET5	./Robot_Control/Arduino_LCD.h	65;"	d
ILI9163C_FRMCTR1	./Robot_Control/Arduino_LCD.h	61;"	d
ILI9163C_FRMCTR1	./Robot_Control/Arduino_LCD.h	61;"	d
ILI9163C_FRMCTR2	./Robot_Control/Arduino_LCD.h	62;"	d
ILI9163C_FRMCTR2	./Robot_Control/Arduino_LCD.h	62;"	d
ILI9163C_FRMCTR3	./Robot_Control/Arduino_LCD.h	63;"	d
ILI9163C_FRMCTR3	./Robot_Control/Arduino_LCD.h	63;"	d
ILI9163C_GMCTRN1	./Robot_Control/Arduino_LCD.h	82;"	d
ILI9163C_GMCTRN1	./Robot_Control/Arduino_LCD.h	82;"	d
ILI9163C_GMCTRP1	./Robot_Control/Arduino_LCD.h	81;"	d
ILI9163C_GMCTRP1	./Robot_Control/Arduino_LCD.h	81;"	d
ILI9163C_GREEN	./Robot_Control/Arduino_LCD.h	88;"	d
ILI9163C_GREEN	./Robot_Control/Arduino_LCD.h	88;"	d
ILI9163C_INVCTR	./Robot_Control/Arduino_LCD.h	64;"	d
ILI9163C_INVCTR	./Robot_Control/Arduino_LCD.h	64;"	d
ILI9163C_INVOFF	./Robot_Control/Arduino_LCD.h	48;"	d
ILI9163C_INVOFF	./Robot_Control/Arduino_LCD.h	48;"	d
ILI9163C_INVON	./Robot_Control/Arduino_LCD.h	49;"	d
ILI9163C_INVON	./Robot_Control/Arduino_LCD.h	49;"	d
ILI9163C_MADCTL	./Robot_Control/Arduino_LCD.h	59;"	d
ILI9163C_MADCTL	./Robot_Control/Arduino_LCD.h	59;"	d
ILI9163C_MAGENTA	./Robot_Control/Arduino_LCD.h	90;"	d
ILI9163C_MAGENTA	./Robot_Control/Arduino_LCD.h	90;"	d
ILI9163C_NOP	./Robot_Control/Arduino_LCD.h	38;"	d
ILI9163C_NOP	./Robot_Control/Arduino_LCD.h	38;"	d
ILI9163C_NORON	./Robot_Control/Arduino_LCD.h	46;"	d
ILI9163C_NORON	./Robot_Control/Arduino_LCD.h	46;"	d
ILI9163C_PTLAR	./Robot_Control/Arduino_LCD.h	57;"	d
ILI9163C_PTLAR	./Robot_Control/Arduino_LCD.h	57;"	d
ILI9163C_PTLON	./Robot_Control/Arduino_LCD.h	45;"	d
ILI9163C_PTLON	./Robot_Control/Arduino_LCD.h	45;"	d
ILI9163C_PWCTR1	./Robot_Control/Arduino_LCD.h	67;"	d
ILI9163C_PWCTR1	./Robot_Control/Arduino_LCD.h	67;"	d
ILI9163C_PWCTR2	./Robot_Control/Arduino_LCD.h	68;"	d
ILI9163C_PWCTR2	./Robot_Control/Arduino_LCD.h	68;"	d
ILI9163C_PWCTR3	./Robot_Control/Arduino_LCD.h	69;"	d
ILI9163C_PWCTR3	./Robot_Control/Arduino_LCD.h	69;"	d
ILI9163C_PWCTR4	./Robot_Control/Arduino_LCD.h	70;"	d
ILI9163C_PWCTR4	./Robot_Control/Arduino_LCD.h	70;"	d
ILI9163C_PWCTR5	./Robot_Control/Arduino_LCD.h	71;"	d
ILI9163C_PWCTR5	./Robot_Control/Arduino_LCD.h	71;"	d
ILI9163C_PWCTR6	./Robot_Control/Arduino_LCD.h	79;"	d
ILI9163C_PWCTR6	./Robot_Control/Arduino_LCD.h	79;"	d
ILI9163C_RAMRD	./Robot_Control/Arduino_LCD.h	55;"	d
ILI9163C_RAMRD	./Robot_Control/Arduino_LCD.h	55;"	d
ILI9163C_RAMWR	./Robot_Control/Arduino_LCD.h	54;"	d
ILI9163C_RAMWR	./Robot_Control/Arduino_LCD.h	54;"	d
ILI9163C_RASET	./Robot_Control/Arduino_LCD.h	53;"	d
ILI9163C_RASET	./Robot_Control/Arduino_LCD.h	53;"	d
ILI9163C_RDDID	./Robot_Control/Arduino_LCD.h	40;"	d
ILI9163C_RDDID	./Robot_Control/Arduino_LCD.h	40;"	d
ILI9163C_RDDST	./Robot_Control/Arduino_LCD.h	41;"	d
ILI9163C_RDDST	./Robot_Control/Arduino_LCD.h	41;"	d
ILI9163C_RDID1	./Robot_Control/Arduino_LCD.h	74;"	d
ILI9163C_RDID1	./Robot_Control/Arduino_LCD.h	74;"	d
ILI9163C_RDID2	./Robot_Control/Arduino_LCD.h	75;"	d
ILI9163C_RDID2	./Robot_Control/Arduino_LCD.h	75;"	d
ILI9163C_RDID3	./Robot_Control/Arduino_LCD.h	76;"	d
ILI9163C_RDID3	./Robot_Control/Arduino_LCD.h	76;"	d
ILI9163C_RDID4	./Robot_Control/Arduino_LCD.h	77;"	d
ILI9163C_RDID4	./Robot_Control/Arduino_LCD.h	77;"	d
ILI9163C_RED	./Robot_Control/Arduino_LCD.h	87;"	d
ILI9163C_RED	./Robot_Control/Arduino_LCD.h	87;"	d
ILI9163C_SLPIN	./Robot_Control/Arduino_LCD.h	43;"	d
ILI9163C_SLPIN	./Robot_Control/Arduino_LCD.h	43;"	d
ILI9163C_SLPOUT	./Robot_Control/Arduino_LCD.h	44;"	d
ILI9163C_SLPOUT	./Robot_Control/Arduino_LCD.h	44;"	d
ILI9163C_SWRESET	./Robot_Control/Arduino_LCD.h	39;"	d
ILI9163C_SWRESET	./Robot_Control/Arduino_LCD.h	39;"	d
ILI9163C_TFTHEIGHT	./Robot_Control/Arduino_LCD.h	36;"	d
ILI9163C_TFTHEIGHT	./Robot_Control/Arduino_LCD.h	36;"	d
ILI9163C_TFTWIDTH	./Robot_Control/Arduino_LCD.h	35;"	d
ILI9163C_TFTWIDTH	./Robot_Control/Arduino_LCD.h	35;"	d
ILI9163C_VMCTR1	./Robot_Control/Arduino_LCD.h	72;"	d
ILI9163C_VMCTR1	./Robot_Control/Arduino_LCD.h	72;"	d
ILI9163C_WHITE	./Robot_Control/Arduino_LCD.h	92;"	d
ILI9163C_WHITE	./Robot_Control/Arduino_LCD.h	92;"	d
ILI9163C_YELLOW	./Robot_Control/Arduino_LCD.h	91;"	d
ILI9163C_YELLOW	./Robot_Control/Arduino_LCD.h	91;"	d
image	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::image(PImage & img, uint16_t x, uint16_t y) {$/;"	f	class:Adafruit_GFX
image	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::image(PImage & img, uint16_t x, uint16_t y) {$/;"	f	class:Adafruit_GFX
image	./TFT/utility/Adafruit_GFX.h	/^void Adafruit_GFX::image(PImage & img, uint16_t x, uint16_t y) {$/;"	f	class:Adafruit_GFX
image	./TFT/utility/Adafruit_GFX.h	/^void Adafruit_GFX::image(PImage & img, uint16_t x, uint16_t y) {$/;"	f	class:Adafruit_GFX
inBlock_	./SD/utility/Sd2Card.h	/^  uint8_t inBlock_;$/;"	m	class:Sd2Card
inBlock_	./SD/utility/Sd2Card.h	/^  uint8_t inBlock_;$/;"	m	class:Sd2Card
IncSpeakerVolume	./GSM_Shield/GSM_Shield.cpp	/^char GSM::IncSpeakerVolume(void)$/;"	f	class:GSM
IncSpeakerVolume	./GSM_Shield/GSM_Shield.cpp	/^char GSM::IncSpeakerVolume(void)$/;"	f	class:GSM
inet_aton	./Ethernet/Dns.cpp	/^int DNSClient::inet_aton(const char* aIPAddrString, IPAddress& aResult)$/;"	f	class:DNSClient
inet_aton	./Ethernet/Dns.cpp	/^int DNSClient::inet_aton(const char* aIPAddrString, IPAddress& aResult)$/;"	f	class:DNSClient
inet_aton	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^int GSM3ShieldV1DataNetworkProvider::inet_aton(const char* aIPAddrString, IPAddress& aResult)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
inet_aton	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^int GSM3ShieldV1DataNetworkProvider::inet_aton(const char* aIPAddrString, IPAddress& aResult)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
INFO1	./WiFi/utility/debug.h	29;"	d
INFO1	./WiFi/utility/debug.h	29;"	d
INFO1	./WiFi/utility/debug.h	40;"	d
INFO1	./WiFi/utility/debug.h	40;"	d
INFO2	./WiFi/utility/debug.h	34;"	d
INFO2	./WiFi/utility/debug.h	34;"	d
INFO2	./WiFi/utility/debug.h	41;"	d
INFO2	./WiFi/utility/debug.h	41;"	d
INFO	./WiFi/utility/debug.h	23;"	d
INFO	./WiFi/utility/debug.h	23;"	d
INFO	./WiFi/utility/debug.h	42;"	d
INFO	./WiFi/utility/debug.h	42;"	d
INICIO_BMP	./Robot_Control/ArduinoRobot.h	42;"	d
INICIO_BMP	./Robot_Control/ArduinoRobot.h	42;"	d
initB	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::initB(void) {$/;"	f	class:Arduino_LCD
initB	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::initB(void) {$/;"	f	class:Arduino_LCD
initB	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::initB(void) {$/;"	f	class:Adafruit_ST7735
initB	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::initB(void) {$/;"	f	class:Adafruit_ST7735
init	./Ethernet/utility/w5100.cpp	/^void W5100Class::init(void)$/;"	f	class:W5100Class
init	./Ethernet/utility/w5100.cpp	/^void W5100Class::init(void)$/;"	f	class:W5100Class
INIT	./Ethernet/utility/w5100.h	/^  static const uint8_t INIT        = 0x13;$/;"	m	class:SnSR
INIT	./Ethernet/utility/w5100.h	/^  static const uint8_t INIT        = 0x13;$/;"	m	class:SnSR
_initialized	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _initialized;$/;"	m	class:LiquidCrystal
_initialized	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _initialized;$/;"	m	class:LiquidCrystal
initialize	./GSM/GSM3MobileVoiceProvider.h	/^		virtual void initialize(){};$/;"	f	class:GSM3MobileVoiceProvider
initialize	./GSM/GSM3MobileVoiceProvider.h	/^		virtual void initialize(){};$/;"	f	class:GSM3MobileVoiceProvider
initialize	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^ void GSM3ShieldV1VoiceProvider::initialize()$/;"	f	class:GSM3ShieldV1VoiceProvider
initialize	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^ void GSM3ShieldV1VoiceProvider::initialize()$/;"	f	class:GSM3ShieldV1VoiceProvider
initISR	./Servo/Servo.cpp	/^static void initISR(timer16_Sequence_t timer)$/;"	f	file:
initISR	./Servo/Servo.cpp	/^static void initISR(timer16_Sequence_t timer)$/;"	f	file:
init	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::init(uint8_t fourbitmode, uint8_t rs, uint8_t rw, uint8_t enable,$/;"	f	class:LiquidCrystal
init	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::init(uint8_t fourbitmode, uint8_t rs, uint8_t rw, uint8_t enable,$/;"	f	class:LiquidCrystal
InitParam	./GSM_Shield/GSM_Shield.cpp	/^void GSM::InitParam(byte group)$/;"	f	class:GSM
InitParam	./GSM_Shield/GSM_Shield.cpp	/^void GSM::InitParam(byte group)$/;"	f	class:GSM
initPWM1	./AFMotor/AFMotor.cpp	/^inline void initPWM1(uint8_t freq) {$/;"	f
initPWM1	./AFMotor/AFMotor.cpp	/^inline void initPWM1(uint8_t freq) {$/;"	f
initPWM2	./AFMotor/AFMotor.cpp	/^inline void initPWM2(uint8_t freq) {$/;"	f
initPWM2	./AFMotor/AFMotor.cpp	/^inline void initPWM2(uint8_t freq) {$/;"	f
initPWM3	./AFMotor/AFMotor.cpp	/^inline void initPWM3(uint8_t freq) {$/;"	f
initPWM3	./AFMotor/AFMotor.cpp	/^inline void initPWM3(uint8_t freq) {$/;"	f
initPWM4	./AFMotor/AFMotor.cpp	/^inline void initPWM4(uint8_t freq) {$/;"	f
initPWM4	./AFMotor/AFMotor.cpp	/^inline void initPWM4(uint8_t freq) {$/;"	f
INITR_BLACKTAB	./TFT/utility/Adafruit_ST7735.h	34;"	d
INITR_BLACKTAB	./TFT/utility/Adafruit_ST7735.h	34;"	d
INITR_GREENTAB	./Robot_Control/Arduino_LCD.h	32;"	d
INITR_GREENTAB	./Robot_Control/Arduino_LCD.h	32;"	d
INITR_GREENTAB	./TFT/utility/Adafruit_ST7735.h	32;"	d
INITR_GREENTAB	./TFT/utility/Adafruit_ST7735.h	32;"	d
init	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::init(SdCard* dev, uint8_t part) {$/;"	f	class:Fat16
init	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::init(SdCard* dev, uint8_t part) {$/;"	f	class:Fat16
init	./Robot_Control/Fat16.h	/^  static uint8_t init(SdCard* dev) {$/;"	f	class:Fat16
init	./Robot_Control/Fat16.h	/^  static uint8_t init(SdCard* dev) {$/;"	f	class:Fat16
init	./Robot_Control/Fat16.h	/^  static uint8_t init(SdCard& dev) {return init(&dev);}  \/\/ NOLINT$/;"	f	class:Fat16
init	./Robot_Control/Fat16.h	/^  static uint8_t init(SdCard& dev) {return init(&dev);}  \/\/ NOLINT$/;"	f	class:Fat16
init	./Robot_Control/Fat16.h	/^  static uint8_t init(SdCard& dev, uint8_t part) {  \/\/ NOLINT$/;"	f	class:Fat16
init	./Robot_Control/Fat16.h	/^  static uint8_t init(SdCard& dev, uint8_t part) {  \/\/ NOLINT$/;"	f	class:Fat16
init	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::init(uint8_t speed, uint8_t chipSelectPin) {$/;"	f	class:SdCard
init	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::init(uint8_t speed, uint8_t chipSelectPin) {$/;"	f	class:SdCard
init	./Robot_Control/SdCard.h	/^  uint8_t init(uint8_t speed) {$/;"	f	class:SdCard
init	./Robot_Control/SdCard.h	/^  uint8_t init(uint8_t speed) {$/;"	f	class:SdCard
init	./Robot_Control/SdCard.h	/^  uint8_t init(void) {$/;"	f	class:SdCard
init	./Robot_Control/SdCard.h	/^  uint8_t init(void) {$/;"	f	class:SdCard
INITR_REDTAB	./Robot_Control/Arduino_LCD.h	33;"	d
INITR_REDTAB	./Robot_Control/Arduino_LCD.h	33;"	d
INITR_REDTAB	./TFT/utility/Adafruit_ST7735.h	33;"	d
INITR_REDTAB	./TFT/utility/Adafruit_ST7735.h	33;"	d
initR	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::initR(uint8_t options) {$/;"	f	class:Arduino_LCD
initR	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::initR(uint8_t options) {$/;"	f	class:Arduino_LCD
initR	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::initR(uint8_t options) {$/;"	f	class:Adafruit_ST7735
initR	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::initR(uint8_t options) {$/;"	f	class:Adafruit_ST7735
init	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::init(uint8_t sckRateID, uint8_t chipSelectPin) {$/;"	f	class:Sd2Card
init	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::init(uint8_t sckRateID, uint8_t chipSelectPin) {$/;"	f	class:Sd2Card
init	./SD/utility/Sd2Card.h	/^  uint8_t init(uint8_t sckRateID) {$/;"	f	class:Sd2Card
init	./SD/utility/Sd2Card.h	/^  uint8_t init(uint8_t sckRateID) {$/;"	f	class:Sd2Card
init	./SD/utility/Sd2Card.h	/^  uint8_t init(void) {$/;"	f	class:Sd2Card
init	./SD/utility/Sd2Card.h	/^  uint8_t init(void) {$/;"	f	class:Sd2Card
init	./SD/utility/SdFat.h	/^  uint8_t init(Sd2Card* dev) { return init(dev, 1) ? true : init(dev, 0);}$/;"	f	class:SdVolume
init	./SD/utility/SdFat.h	/^  uint8_t init(Sd2Card* dev) { return init(dev, 1) ? true : init(dev, 0);}$/;"	f	class:SdVolume
init	./SD/utility/SdFat.h	/^  uint8_t init(Sd2Card& dev) {return init(&dev);}  \/\/ NOLINT$/;"	f	class:SdVolume
init	./SD/utility/SdFat.h	/^  uint8_t init(Sd2Card& dev) {return init(&dev);}  \/\/ NOLINT$/;"	f	class:SdVolume
init	./SD/utility/SdFat.h	/^  uint8_t init(Sd2Card& dev, uint8_t part) {  \/\/ NOLINT$/;"	f	class:SdVolume
init	./SD/utility/SdFat.h	/^  uint8_t init(Sd2Card& dev, uint8_t part) {  \/\/ NOLINT$/;"	f	class:SdVolume
init	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::init(Sd2Card* dev, uint8_t part) {$/;"	f	class:SdVolume
init	./SD/utility/SdVolume.cpp	/^uint8_t SdVolume::init(Sd2Card* dev, uint8_t part) {$/;"	f	class:SdVolume
InitSMSMemory	./GSM_Shield/GSM_Shield.cpp	/^char GSM::InitSMSMemory(void) $/;"	f	class:GSM
InitSMSMemory	./GSM_Shield/GSM_Shield.cpp	/^char GSM::InitSMSMemory(void) $/;"	f	class:GSM
initSS	./Ethernet/utility/w5100.h	/^  inline static void initSS()    { DDRB  |=  _BV(0); };$/;"	f	class:W5100Class
initSS	./Ethernet/utility/w5100.h	/^  inline static void initSS()    { DDRB  |=  _BV(0); };$/;"	f	class:W5100Class
initSS	./Ethernet/utility/w5100.h	/^  inline static void initSS()    { DDRB  |=  _BV(2); };$/;"	f	class:W5100Class
initSS	./Ethernet/utility/w5100.h	/^  inline static void initSS()    { DDRB  |=  _BV(2); };$/;"	f	class:W5100Class
initSS	./Ethernet/utility/w5100.h	/^  inline static void initSS()    { DDRB  |=  _BV(4); };$/;"	f	class:W5100Class
initSS	./Ethernet/utility/w5100.h	/^  inline static void initSS()    { DDRB  |=  _BV(4); };$/;"	f	class:W5100Class
initSS	./Ethernet/utility/w5100.h	/^  inline static void initSS()    { DDRB  |=  _BV(6); };$/;"	f	class:W5100Class
initSS	./Ethernet/utility/w5100.h	/^  inline static void initSS()    { DDRB  |=  _BV(6); };$/;"	f	class:W5100Class
INIT_TRIGGER	./WiFi/utility/debug.h	62;"	d
INIT_TRIGGER	./WiFi/utility/debug.h	62;"	d
INIT_TRIGGER	./WiFi/utility/debug.h	73;"	d
INIT_TRIGGER	./WiFi/utility/debug.h	73;"	d
init	./WiFi/WiFi.cpp	/^void WiFiClass::init()$/;"	f	class:WiFiClass
init	./WiFi/WiFi.cpp	/^void WiFiClass::init()$/;"	f	class:WiFiClass
inputCol	./Robot_Control/utility/RobotTextManager.h	/^    int inputCol;$/;"	m	class:TextManager
inputCol	./Robot_Control/utility/RobotTextManager.h	/^    int inputCol;$/;"	m	class:TextManager
inputLin	./Robot_Control/utility/RobotTextManager.h	/^    int inputLin;$/;"	m	class:TextManager
inputLin	./Robot_Control/utility/RobotTextManager.h	/^    int inputLin;$/;"	m	class:TextManager
inputPool	./Robot_Control/utility/RobotTextManager.h	/^    char inputPool[18];$/;"	m	class:TextManager
inputPool	./Robot_Control/utility/RobotTextManager.h	/^    char inputPool[18];$/;"	m	class:TextManager
inputPos	./Robot_Control/utility/RobotTextManager.h	/^    int inputPos;$/;"	m	class:TextManager
inputPos	./Robot_Control/utility/RobotTextManager.h	/^    int inputPos;$/;"	m	class:TextManager
input	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::input(int lin,int col, int code){$/;"	f	class:TextManager
input	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::input(int lin,int col, int code){$/;"	f	class:TextManager
insertCustom	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSPlus::insertCustom(TinyGPSCustom *pElt, const char *sentenceName, int termNumber)$/;"	f	class:TinyGPSPlus
insertCustom	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSPlus::insertCustom(TinyGPSCustom *pElt, const char *sentenceName, int termNumber)$/;"	f	class:TinyGPSPlus
INSERT_DATABUF_CMD	./WiFi/utility/wifi_spi.h	/^    INSERT_DATABUF_CMD		= 0x46,$/;"	e	enum:__anon4
INSERT_DATABUF_CMD	./WiFi/utility/wifi_spi.h	/^    INSERT_DATABUF_CMD		= 0x46,$/;"	e	enum:__anon4
insertDataBuf	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::insertDataBuf(uint8_t sock, const uint8_t *data, uint16_t _len)$/;"	f	class:ServerDrv
insertDataBuf	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::insertDataBuf(uint8_t sock, const uint8_t *data, uint16_t _len)$/;"	f	class:ServerDrv
int16	./WiFi/utility/socket.h	/^typedef int int16;$/;"	t
int16	./WiFi/utility/socket.h	/^typedef int int16;$/;"	t
int32	./WiFi/utility/socket.h	/^typedef long int32;$/;"	t
int32	./WiFi/utility/socket.h	/^typedef long int32;$/;"	t
int8	./WiFi/utility/socket.h	/^typedef char int8;$/;"	t
int8	./WiFi/utility/socket.h	/^typedef char int8;$/;"	t
interchar_tmout	./GSM_Shield/GSM_Shield.h	/^    uint16_t interchar_tmout;       \/\/ previous time in msec.$/;"	m	class:GSM
interchar_tmout	./GSM_Shield/GSM_Shield.h	/^    uint16_t interchar_tmout;       \/\/ previous time in msec.$/;"	m	class:GSM
intergrationTime	./Robot_Motor/LineFollow.h	/^		uint8_t intergrationTime;$/;"	m	class:LineFollow
intergrationTime	./Robot_Motor/LineFollow.h	/^		uint8_t intergrationTime;$/;"	m	class:LineFollow
INTERLEAVE	./AFMotor/AFMotor.h	116;"	d
INTERLEAVE	./AFMotor/AFMotor.h	116;"	d
int	./SoftwareSerial/SoftwareSerial.h	104;"	d
int	./SoftwareSerial/SoftwareSerial.h	104;"	d
int	./TinyGPS/TinyGPS.h	148;"	d
int	./TinyGPS/TinyGPS.h	148;"	d
INVALID_RESPONSE	./Ethernet/Dns.cpp	49;"	d	file:
INVALID_RESPONSE	./Ethernet/Dns.cpp	49;"	d	file:
INVALID_SERVER	./Ethernet/Dns.cpp	47;"	d	file:
INVALID_SERVER	./Ethernet/Dns.cpp	47;"	d	file:
INVALID_SERVO	./Servo/Servo.h	96;"	d
INVALID_SERVO	./Servo/Servo.h	96;"	d
invertDisplay	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::invertDisplay(boolean i) {$/;"	f	class:Adafruit_GFX
invertDisplay	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::invertDisplay(boolean i) {$/;"	f	class:Adafruit_GFX
invertDisplay	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::invertDisplay(boolean i) {$/;"	f	class:Arduino_LCD
invertDisplay	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::invertDisplay(boolean i) {$/;"	f	class:Arduino_LCD
invertDisplay	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::invertDisplay(boolean i) {$/;"	f	class:Adafruit_GFX
invertDisplay	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::invertDisplay(boolean i) {$/;"	f	class:Adafruit_GFX
invertDisplay	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::invertDisplay(boolean i) {$/;"	f	class:Adafruit_ST7735
invertDisplay	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::invertDisplay(boolean i) {$/;"	f	class:Adafruit_ST7735
IP	./Ethernet/utility/w5100.h	/^  static const uint8_t IP   = 0;$/;"	m	class:IPPROTO
IP	./Ethernet/utility/w5100.h	/^  static const uint8_t IP   = 0;$/;"	m	class:IPPROTO
IPPROTO	./Ethernet/utility/w5100.h	/^class IPPROTO {$/;"	c
IPPROTO	./Ethernet/utility/w5100.h	/^class IPPROTO {$/;"	c
IPRAW	./Ethernet/utility/w5100.h	/^  static const uint8_t IPRAW  = 0x03;$/;"	m	class:SnMR
IPRAW	./Ethernet/utility/w5100.h	/^  static const uint8_t IPRAW  = 0x03;$/;"	m	class:SnMR
IPRAW	./Ethernet/utility/w5100.h	/^  static const uint8_t IPRAW       = 0x32;$/;"	m	class:SnSR
IPRAW	./Ethernet/utility/w5100.h	/^  static const uint8_t IPRAW       = 0x32;$/;"	m	class:SnSR
IRarray	./Robot_Control/ArduinoRobot.h	/^		uint16_t IRarray[5];$/;"	m	class:RobotControl
IRarray	./Robot_Control/ArduinoRobot.h	/^		uint16_t IRarray[5];$/;"	m	class:RobotControl
iRequestId	./Ethernet/Dns.h	/^    uint16_t iRequestId;$/;"	m	class:DNSClient
iRequestId	./Ethernet/Dns.h	/^    uint16_t iRequestId;$/;"	m	class:DNSClient
IRread	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^int RobotMotorBoard::IRread(uint8_t num){$/;"	f	class:RobotMotorBoard
IRread	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^int RobotMotorBoard::IRread(uint8_t num){$/;"	f	class:RobotMotorBoard
IRs	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		Multiplexer IRs;$/;"	m	class:RobotMotorBoard
IRs	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		Multiplexer IRs;$/;"	m	class:RobotMotorBoard
isAccessAlive	./GSM/GSM3ShieldV1AccessProvider.cpp	/^int GSM3ShieldV1AccessProvider::isAccessAlive()$/;"	f	class:GSM3ShieldV1AccessProvider
isAccessAlive	./GSM/GSM3ShieldV1AccessProvider.cpp	/^int GSM3ShieldV1AccessProvider::isAccessAlive()$/;"	f	class:GSM3ShieldV1AccessProvider
isActive	./Servo/Servo.h	/^  uint8_t isActive   :1 ;             \/\/ true if this channel is enabled, pin not pulsed if false $/;"	m	struct:__anon24
isActive	./Servo/Servo.h	/^  uint8_t isActive   :1 ;             \/\/ true if this channel is enabled, pin not pulsed if false $/;"	m	struct:__anon24
isChecksumTerm	./TinyGPSPlus/TinyGPS++.h	/^  bool isChecksumTerm;$/;"	m	class:TinyGPSPlus
isChecksumTerm	./TinyGPSPlus/TinyGPS++.h	/^  bool isChecksumTerm;$/;"	m	class:TinyGPSPlus
_is_checksum_term	./TinyGPS/TinyGPS.h	/^  bool _is_checksum_term;$/;"	m	class:TinyGPS
_is_checksum_term	./TinyGPS/TinyGPS.h	/^  bool _is_checksum_term;$/;"	m	class:TinyGPS
isDirectory	./SD/File.cpp	/^boolean File::isDirectory(void) {$/;"	f	class:File
isDirectory	./SD/File.cpp	/^boolean File::isDirectory(void) {$/;"	f	class:File
isDir	./SD/utility/SdFat.h	/^  uint8_t isDir(void) const {return type_ >= FAT_FILE_TYPE_MIN_DIR;}$/;"	f	class:SdFile
isDir	./SD/utility/SdFat.h	/^  uint8_t isDir(void) const {return type_ >= FAT_FILE_TYPE_MIN_DIR;}$/;"	f	class:SdFile
_isEEPROM_BMP_Allocated	./Robot_Control/ArduinoRobot.h	/^		bool _isEEPROM_BMP_Allocated;$/;"	m	class:RobotControl
_isEEPROM_BMP_Allocated	./Robot_Control/ArduinoRobot.h	/^		bool _isEEPROM_BMP_Allocated;$/;"	m	class:RobotControl
isEOC	./Robot_Control/Fat16.h	/^  static uint8_t isEOC(fat_t cluster) {return cluster >= 0XFFF8;}$/;"	f	class:Fat16
isEOC	./Robot_Control/Fat16.h	/^  static uint8_t isEOC(fat_t cluster) {return cluster >= 0XFFF8;}$/;"	f	class:Fat16
isEOC	./SD/utility/SdFat.h	/^  uint8_t isEOC(uint32_t cluster) const {$/;"	f	class:SdVolume
isEOC	./SD/utility/SdFat.h	/^  uint8_t isEOC(uint32_t cluster) const {$/;"	f	class:SdVolume
isFile	./SD/utility/SdFat.h	/^  uint8_t isFile(void) const {return type_ == FAT_FILE_TYPE_NORMAL;}$/;"	f	class:SdFile
isFile	./SD/utility/SdFat.h	/^  uint8_t isFile(void) const {return type_ == FAT_FILE_TYPE_NORMAL;}$/;"	f	class:SdFile
IsInitialized	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsInitialized(void)$/;"	f	class:GSM
IsInitialized	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsInitialized(void)$/;"	f	class:GSM
isListening	./SoftwareSerial/SoftwareSerial.h	/^  bool isListening() { return this == active_object; }$/;"	f	class:SoftwareSerial
isListening	./SoftwareSerial/SoftwareSerial.h	/^  bool isListening() { return this == active_object; }$/;"	f	class:SoftwareSerial
isModemAliveContinue	./GSM/GSM3ShieldV1AccessProvider.cpp	/^void GSM3ShieldV1AccessProvider::isModemAliveContinue()$/;"	f	class:GSM3ShieldV1AccessProvider
isModemAliveContinue	./GSM/GSM3ShieldV1AccessProvider.cpp	/^void GSM3ShieldV1AccessProvider::isModemAliveContinue()$/;"	f	class:GSM3ShieldV1AccessProvider
isModemAlive	./GSM/GSM3MobileMockupProvider.h	/^		inline int isModemAlive(){return 0;};$/;"	f	class:GSM3MobileMockupProvider
isModemAlive	./GSM/GSM3MobileMockupProvider.h	/^		inline int isModemAlive(){return 0;};$/;"	f	class:GSM3MobileMockupProvider
isOpen	./Robot_Control/Fat16.h	/^  uint8_t isOpen(void) const {return (flags_ & O_ACCMODE) != 0;}$/;"	f	class:Fat16
isOpen	./Robot_Control/Fat16.h	/^  uint8_t isOpen(void) const {return (flags_ & O_ACCMODE) != 0;}$/;"	f	class:Fat16
isOpen	./SD/utility/SdFat.h	/^  uint8_t isOpen(void) const {return type_ != FAT_FILE_TYPE_CLOSED;}$/;"	f	class:SdFile
isOpen	./SD/utility/SdFat.h	/^  uint8_t isOpen(void) const {return type_ != FAT_FILE_TYPE_CLOSED;}$/;"	f	class:SdFile
isPaused	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		uint8_t isPaused;$/;"	m	class:RobotMotorBoard
isPaused	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		uint8_t isPaused;$/;"	m	class:RobotMotorBoard
IS_PIN_ANALOG	./Firmata/Boards.h	142;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	142;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	157;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	157;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	173;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	173;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	190;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	190;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	206;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	206;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	222;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	222;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	238;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	238;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	254;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	254;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	270;"	d
IS_PIN_ANALOG	./Firmata/Boards.h	270;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	141;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	141;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	156;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	156;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	172;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	172;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	189;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	189;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	205;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	205;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	221;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	221;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	237;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	237;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	253;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	253;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	269;"	d
IS_PIN_DIGITAL	./Firmata/Boards.h	269;"	d
isPIN	./GSM/GSM3ShieldV1PinManagement.cpp	/^int GSM3ShieldV1PinManagement::isPIN()$/;"	f	class:GSM3ShieldV1PinManagement
isPIN	./GSM/GSM3ShieldV1PinManagement.cpp	/^int GSM3ShieldV1PinManagement::isPIN()$/;"	f	class:GSM3ShieldV1PinManagement
IS_PIN_I2C	./Firmata/Boards.h	145;"	d
IS_PIN_I2C	./Firmata/Boards.h	145;"	d
IS_PIN_I2C	./Firmata/Boards.h	160;"	d
IS_PIN_I2C	./Firmata/Boards.h	160;"	d
IS_PIN_I2C	./Firmata/Boards.h	176;"	d
IS_PIN_I2C	./Firmata/Boards.h	176;"	d
IS_PIN_I2C	./Firmata/Boards.h	193;"	d
IS_PIN_I2C	./Firmata/Boards.h	193;"	d
IS_PIN_I2C	./Firmata/Boards.h	209;"	d
IS_PIN_I2C	./Firmata/Boards.h	209;"	d
IS_PIN_I2C	./Firmata/Boards.h	225;"	d
IS_PIN_I2C	./Firmata/Boards.h	225;"	d
IS_PIN_I2C	./Firmata/Boards.h	241;"	d
IS_PIN_I2C	./Firmata/Boards.h	241;"	d
IS_PIN_I2C	./Firmata/Boards.h	257;"	d
IS_PIN_I2C	./Firmata/Boards.h	257;"	d
IS_PIN_I2C	./Firmata/Boards.h	273;"	d
IS_PIN_I2C	./Firmata/Boards.h	273;"	d
IS_PIN_PWM	./Firmata/Boards.h	143;"	d
IS_PIN_PWM	./Firmata/Boards.h	143;"	d
IS_PIN_PWM	./Firmata/Boards.h	158;"	d
IS_PIN_PWM	./Firmata/Boards.h	158;"	d
IS_PIN_PWM	./Firmata/Boards.h	174;"	d
IS_PIN_PWM	./Firmata/Boards.h	174;"	d
IS_PIN_PWM	./Firmata/Boards.h	191;"	d
IS_PIN_PWM	./Firmata/Boards.h	191;"	d
IS_PIN_PWM	./Firmata/Boards.h	207;"	d
IS_PIN_PWM	./Firmata/Boards.h	207;"	d
IS_PIN_PWM	./Firmata/Boards.h	223;"	d
IS_PIN_PWM	./Firmata/Boards.h	223;"	d
IS_PIN_PWM	./Firmata/Boards.h	239;"	d
IS_PIN_PWM	./Firmata/Boards.h	239;"	d
IS_PIN_PWM	./Firmata/Boards.h	255;"	d
IS_PIN_PWM	./Firmata/Boards.h	255;"	d
IS_PIN_PWM	./Firmata/Boards.h	271;"	d
IS_PIN_PWM	./Firmata/Boards.h	271;"	d
IS_PIN_SERVO	./Firmata/Boards.h	144;"	d
IS_PIN_SERVO	./Firmata/Boards.h	144;"	d
IS_PIN_SERVO	./Firmata/Boards.h	159;"	d
IS_PIN_SERVO	./Firmata/Boards.h	159;"	d
IS_PIN_SERVO	./Firmata/Boards.h	175;"	d
IS_PIN_SERVO	./Firmata/Boards.h	175;"	d
IS_PIN_SERVO	./Firmata/Boards.h	192;"	d
IS_PIN_SERVO	./Firmata/Boards.h	192;"	d
IS_PIN_SERVO	./Firmata/Boards.h	208;"	d
IS_PIN_SERVO	./Firmata/Boards.h	208;"	d
IS_PIN_SERVO	./Firmata/Boards.h	224;"	d
IS_PIN_SERVO	./Firmata/Boards.h	224;"	d
IS_PIN_SERVO	./Firmata/Boards.h	240;"	d
IS_PIN_SERVO	./Firmata/Boards.h	240;"	d
IS_PIN_SERVO	./Firmata/Boards.h	256;"	d
IS_PIN_SERVO	./Firmata/Boards.h	256;"	d
IS_PIN_SERVO	./Firmata/Boards.h	272;"	d
IS_PIN_SERVO	./Firmata/Boards.h	272;"	d
IsRegistered	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsRegistered(void)$/;"	f	class:GSM
IsRegistered	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsRegistered(void)$/;"	f	class:GSM
ISR	./GSM/GSM3SoftSerial.cpp	/^ISR(PCINT0_vect)$/;"	f
ISR	./GSM/GSM3SoftSerial.cpp	/^ISR(PCINT0_vect)$/;"	f
ISR	./GSM/GSM3SoftSerial.cpp	/^ISR(PCINT1_vect)$/;"	f
ISR	./GSM/GSM3SoftSerial.cpp	/^ISR(PCINT1_vect)$/;"	f
ISR	./GSM/GSM3SoftSerial.cpp	/^ISR(PCINT2_vect)$/;"	f
ISR	./GSM/GSM3SoftSerial.cpp	/^ISR(PCINT2_vect)$/;"	f
ISR	./GSM/GSM3SoftSerial.cpp	/^ISR(PCINT3_vect)$/;"	f
ISR	./GSM/GSM3SoftSerial.cpp	/^ISR(PCINT3_vect)$/;"	f
isRoot	./SD/utility/SdFat.h	/^  uint8_t isRoot(void) const {$/;"	f	class:SdFile
isRoot	./SD/utility/SdFat.h	/^  uint8_t isRoot(void) const {$/;"	f	class:SdFile
ISR	./Servo/Servo.cpp	/^ISR(TIMER1_COMPA_vect) $/;"	f
ISR	./Servo/Servo.cpp	/^ISR(TIMER1_COMPA_vect) $/;"	f
ISR	./Servo/Servo.cpp	/^ISR(TIMER3_COMPA_vect) $/;"	f
ISR	./Servo/Servo.cpp	/^ISR(TIMER3_COMPA_vect) $/;"	f
ISR	./Servo/Servo.cpp	/^ISR(TIMER4_COMPA_vect) $/;"	f
ISR	./Servo/Servo.cpp	/^ISR(TIMER4_COMPA_vect) $/;"	f
ISR	./Servo/Servo.cpp	/^ISR(TIMER5_COMPA_vect) $/;"	f
ISR	./Servo/Servo.cpp	/^ISR(TIMER5_COMPA_vect) $/;"	f
ISR	./SoftwareSerial/SoftwareSerial.cpp	/^ISR(PCINT0_vect)$/;"	f
ISR	./SoftwareSerial/SoftwareSerial.cpp	/^ISR(PCINT0_vect)$/;"	f
ISR	./SoftwareSerial/SoftwareSerial.cpp	/^ISR(PCINT1_vect)$/;"	f
ISR	./SoftwareSerial/SoftwareSerial.cpp	/^ISR(PCINT1_vect)$/;"	f
ISR	./SoftwareSerial/SoftwareSerial.cpp	/^ISR(PCINT2_vect)$/;"	f
ISR	./SoftwareSerial/SoftwareSerial.cpp	/^ISR(PCINT2_vect)$/;"	f
ISR	./SoftwareSerial/SoftwareSerial.cpp	/^ISR(PCINT3_vect)$/;"	f
ISR	./SoftwareSerial/SoftwareSerial.cpp	/^ISR(PCINT3_vect)$/;"	f
IsRxFinished	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsRxFinished(void)$/;"	f	class:GSM
IsRxFinished	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsRxFinished(void)$/;"	f	class:GSM
IsSMSPresent	./GSM_Shield/GSM_Shield.cpp	/^char GSM::IsSMSPresent(byte required_status) $/;"	f	class:GSM
IsSMSPresent	./GSM_Shield/GSM_Shield.cpp	/^char GSM::IsSMSPresent(byte required_status) $/;"	f	class:GSM
IsStringReceived	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsStringReceived(char const *compare_string)$/;"	f	class:GSM
IsStringReceived	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsStringReceived(char const *compare_string)$/;"	f	class:GSM
isSubDir	./SD/utility/SdFat.h	/^  uint8_t isSubDir(void) const {return type_ == FAT_FILE_TYPE_SUBDIR;}$/;"	f	class:SdFile
isSubDir	./SD/utility/SdFat.h	/^  uint8_t isSubDir(void) const {return type_ == FAT_FILE_TYPE_SUBDIR;}$/;"	f	class:SdFile
isTimerActive	./Servo/Servo.cpp	/^static boolean isTimerActive(timer16_Sequence_t timer)$/;"	f	file:
isTimerActive	./Servo/Servo.cpp	/^static boolean isTimerActive(timer16_Sequence_t timer)$/;"	f	file:
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const  { return updated; }$/;"	f	class:TinyGPSCustom
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const  { return updated; }$/;"	f	class:TinyGPSCustom
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const     { return updated; }$/;"	f	struct:TinyGPSDate
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const     { return updated; }$/;"	f	struct:TinyGPSDate
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const  { return updated; }$/;"	f	struct:TinyGPSDecimal
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const  { return updated; }$/;"	f	struct:TinyGPSDecimal
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const  { return updated; }$/;"	f	struct:TinyGPSInteger
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const  { return updated; }$/;"	f	struct:TinyGPSInteger
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const  { return updated; }$/;"	f	struct:TinyGPSLocation
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const  { return updated; }$/;"	f	struct:TinyGPSLocation
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const     { return updated; }$/;"	f	struct:TinyGPSTime
isUpdated	./TinyGPSPlus/TinyGPS++.h	/^   bool isUpdated() const     { return updated; }$/;"	f	struct:TinyGPSTime
IsUserButtonEnable	./GSM_Shield/GSM_Shield.h	/^    inline byte IsUserButtonEnable(void) {return (module_status & STATUS_USER_BUTTON_ENABLE);};$/;"	f	class:GSM
IsUserButtonEnable	./GSM_Shield/GSM_Shield.h	/^    inline byte IsUserButtonEnable(void) {return (module_status & STATUS_USER_BUTTON_ENABLE);};$/;"	f	class:GSM
IsUserButtonPushed	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsUserButtonPushed(void)$/;"	f	class:GSM
IsUserButtonPushed	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::IsUserButtonPushed(void)$/;"	f	class:GSM
isValid	./TFT/utility/PImage.h	/^  bool isValid() { return _valid; }$/;"	f	class:PImage
isValid	./TFT/utility/PImage.h	/^  bool isValid() { return _valid; }$/;"	f	class:PImage
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const    { return valid; }$/;"	f	class:TinyGPSCustom
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const    { return valid; }$/;"	f	class:TinyGPSCustom
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const       { return valid; }$/;"	f	struct:TinyGPSDate
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const       { return valid; }$/;"	f	struct:TinyGPSDate
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const    { return valid; }$/;"	f	struct:TinyGPSDecimal
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const    { return valid; }$/;"	f	struct:TinyGPSDecimal
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const    { return valid; }$/;"	f	struct:TinyGPSInteger
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const    { return valid; }$/;"	f	struct:TinyGPSInteger
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const    { return valid; }$/;"	f	struct:TinyGPSLocation
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const    { return valid; }$/;"	f	struct:TinyGPSLocation
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const       { return valid; }$/;"	f	struct:TinyGPSTime
isValid	./TinyGPSPlus/TinyGPS++.h	/^   bool isValid() const       { return valid; }$/;"	f	struct:TinyGPSTime
iUdp	./Ethernet/Dns.h	/^    EthernetUDP iUdp;$/;"	m	class:DNSClient
iUdp	./Ethernet/Dns.h	/^    EthernetUDP iUdp;$/;"	m	class:DNSClient
ix_nextorder	./Robot_Control/Squawk.cpp	/^static uint8_t  ix_nextorder;$/;"	v	file:
ix_nextorder	./Robot_Control/Squawk.cpp	/^static uint8_t  ix_nextorder;$/;"	v	file:
ix_nextrow	./Robot_Control/Squawk.cpp	/^static uint8_t  ix_nextrow;$/;"	v	file:
ix_nextrow	./Robot_Control/Squawk.cpp	/^static uint8_t  ix_nextrow;$/;"	v	file:
ix_order	./Robot_Control/Squawk.cpp	/^static uint8_t  ix_order;$/;"	v	file:
ix_order	./Robot_Control/Squawk.cpp	/^static uint8_t  ix_order;$/;"	v	file:
ixp	./Robot_Control/Squawk.cpp	/^  uint8_t fxc, fxp, ixp;$/;"	m	struct:__anon17	file:
ixp	./Robot_Control/Squawk.cpp	/^  uint8_t fxc, fxp, ixp;$/;"	m	struct:__anon17	file:
ix_row	./Robot_Control/Squawk.cpp	/^static uint8_t  ix_row;$/;"	v	file:
ix_row	./Robot_Control/Squawk.cpp	/^static uint8_t  ix_row;$/;"	v	file:
jmpToBootCode	./Robot_Control/FatStructs.h	/^  uint8_t  jmpToBootCode[3];$/;"	m	struct:fat32BootSector
jmpToBootCode	./Robot_Control/FatStructs.h	/^  uint8_t  jmpToBootCode[3];$/;"	m	struct:fat32BootSector
jmpToBootCode	./SD/utility/FatStructs.h	/^  uint8_t  jmpToBootCode[3];$/;"	m	struct:fat32BootSector
jmpToBootCode	./SD/utility/FatStructs.h	/^  uint8_t  jmpToBootCode[3];$/;"	m	struct:fat32BootSector
joyHighHalf	./Esplora/Esplora.cpp	/^boolean _Esplora::joyHighHalf(byte joyCh) {$/;"	f	class:_Esplora
joyHighHalf	./Esplora/Esplora.cpp	/^boolean _Esplora::joyHighHalf(byte joyCh) {$/;"	f	class:_Esplora
joyLowHalf	./Esplora/Esplora.cpp	/^boolean _Esplora::joyLowHalf(byte joyCh) {$/;"	f	class:_Esplora
joyLowHalf	./Esplora/Esplora.cpp	/^boolean _Esplora::joyLowHalf(byte joyCh) {$/;"	f	class:_Esplora
JOYSTICK_BASE	./Esplora/Esplora.h	/^const byte JOYSTICK_BASE  = 16; \/\/ it's a "virtual" channel: its ID won't conflict with real ones$/;"	v
JOYSTICK_BASE	./Esplora/Esplora.h	/^const byte JOYSTICK_BASE  = 16; \/\/ it's a "virtual" channel: its ID won't conflict with real ones$/;"	v
JOYSTICK_DEAD_ZONE	./Esplora/Esplora.cpp	/^const int JOYSTICK_DEAD_ZONE = 100;$/;"	v
JOYSTICK_DEAD_ZONE	./Esplora/Esplora.cpp	/^const int JOYSTICK_DEAD_ZONE = 100;$/;"	v
JOYSTICK_DOWN	./Esplora/Esplora.h	/^const byte JOYSTICK_DOWN  = JOYSTICK_BASE;$/;"	v
JOYSTICK_DOWN	./Esplora/Esplora.h	/^const byte JOYSTICK_DOWN  = JOYSTICK_BASE;$/;"	v
JOYSTICK_LEFT	./Esplora/Esplora.h	/^const byte JOYSTICK_LEFT  = JOYSTICK_BASE+1;$/;"	v
JOYSTICK_LEFT	./Esplora/Esplora.h	/^const byte JOYSTICK_LEFT  = JOYSTICK_BASE+1;$/;"	v
JOYSTICK_RIGHT	./Esplora/Esplora.h	/^const byte JOYSTICK_RIGHT = JOYSTICK_BASE+3;$/;"	v
JOYSTICK_RIGHT	./Esplora/Esplora.h	/^const byte JOYSTICK_RIGHT = JOYSTICK_BASE+3;$/;"	v
JOYSTICK_UP	./Esplora/Esplora.h	/^const byte JOYSTICK_UP    = JOYSTICK_BASE+2;$/;"	v
JOYSTICK_UP	./Esplora/Esplora.h	/^const byte JOYSTICK_UP    = JOYSTICK_BASE+2;$/;"	v
KD	./Robot_Motor/LineFollow.h	/^		uint8_t KD;$/;"	m	class:LineFollow
KD	./Robot_Motor/LineFollow.h	/^		uint8_t KD;$/;"	m	class:LineFollow
keepThisChar	./GSM/GSM3SoftSerial.cpp	/^bool GSM3SoftSerial::keepThisChar(uint8_t* c)$/;"	f	class:GSM3SoftSerial
keepThisChar	./GSM/GSM3SoftSerial.cpp	/^bool GSM3SoftSerial::keepThisChar(uint8_t* c)$/;"	f	class:GSM3SoftSerial
keyboardCalibrate	./Robot_Control/keyboard.cpp	/^void RobotControl::keyboardCalibrate(int *vals){$/;"	f	class:RobotControl
keyboardCalibrate	./Robot_Control/keyboard.cpp	/^void RobotControl::keyboardCalibrate(int *vals){$/;"	f	class:RobotControl
keyboardRead	./Robot_Control/keyboard.cpp	/^int8_t RobotControl::keyboardRead(void)$/;"	f	class:RobotControl
keyboardRead	./Robot_Control/keyboard.cpp	/^int8_t RobotControl::keyboardRead(void)$/;"	f	class:RobotControl
KEY_IDX_LEN	./WiFi/utility/wifi_drv.h	10;"	d
KEY_IDX_LEN	./WiFi/utility/wifi_drv.h	10;"	d
kilometers	./TinyGPSPlus/TinyGPS++.h	/^   double kilometers()   { return _GPS_KM_PER_METER * value() \/ 100.0; }$/;"	f	struct:TinyGPSAltitude
kilometers	./TinyGPSPlus/TinyGPS++.h	/^   double kilometers()   { return _GPS_KM_PER_METER * value() \/ 100.0; }$/;"	f	struct:TinyGPSAltitude
kmph	./TinyGPSPlus/TinyGPS++.h	/^   double kmph()     { return _GPS_KMPH_PER_KNOT * value() \/ 100.0; }$/;"	f	struct:TinyGPSSpeed
kmph	./TinyGPSPlus/TinyGPS++.h	/^   double kmph()     { return _GPS_KMPH_PER_KNOT * value() \/ 100.0; }$/;"	f	struct:TinyGPSSpeed
knobRead	./Robot_Control/Sensors.cpp	/^int RobotControl::knobRead(){$/;"	f	class:RobotControl
knobRead	./Robot_Control/Sensors.cpp	/^int RobotControl::knobRead(){$/;"	f	class:RobotControl
knots	./TinyGPSPlus/TinyGPS++.h	/^   double knots()    { return value() \/ 100.0; }$/;"	f	struct:TinyGPSSpeed
knots	./TinyGPSPlus/TinyGPS++.h	/^   double knots()    { return value() \/ 100.0; }$/;"	f	struct:TinyGPSSpeed
KP	./Robot_Motor/LineFollow.h	/^		uint8_t KP;$/;"	m	class:LineFollow
KP	./Robot_Motor/LineFollow.h	/^		uint8_t KP;$/;"	m	class:LineFollow
LABEL_COMPRESSION_MASK	./Ethernet/Dns.cpp	40;"	d	file:
LABEL_COMPRESSION_MASK	./Ethernet/Dns.cpp	40;"	d	file:
lastAccessDate	./Robot_Control/FatStructs.h	/^  uint16_t lastAccessDate;$/;"	m	struct:directoryEntry
lastAccessDate	./Robot_Control/FatStructs.h	/^  uint16_t lastAccessDate;$/;"	m	struct:directoryEntry
lastAccessDate	./SD/utility/FatStructs.h	/^  uint16_t lastAccessDate;$/;"	m	struct:directoryEntry
lastAccessDate	./SD/utility/FatStructs.h	/^  uint16_t lastAccessDate;$/;"	m	struct:directoryEntry
LAST_ACK	./Ethernet/utility/w5100.h	/^  static const uint8_t LAST_ACK    = 0x1D;$/;"	m	class:SnSR
LAST_ACK	./Ethernet/utility/w5100.h	/^  static const uint8_t LAST_ACK    = 0x1D;$/;"	m	class:SnSR
LAST_ACK	./WiFi/utility/wifi_spi.h	/^  LAST_ACK    = 9,$/;"	e	enum:wl_tcp_state
LAST_ACK	./WiFi/utility/wifi_spi.h	/^  LAST_ACK    = 9,$/;"	e	enum:wl_tcp_state
lastBlue	./Esplora/Esplora.h	/^  byte lastBlue;$/;"	m	class:_Esplora
lastBlue	./Esplora/Esplora.h	/^  byte lastBlue;$/;"	m	class:_Esplora
_lastCheck	./Ethernet/Dhcp.h	/^  signed long _lastCheck;$/;"	m	class:DhcpClass
_lastCheck	./Ethernet/Dhcp.h	/^  signed long _lastCheck;$/;"	m	class:DhcpClass
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSDate
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSDate
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSDecimal
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSDecimal
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSInteger
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSInteger
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSLocation
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSLocation
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSTime
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t lastCommitTime;$/;"	m	struct:TinyGPSTime
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   unsigned long lastCommitTime;$/;"	m	class:TinyGPSCustom
lastCommitTime	./TinyGPSPlus/TinyGPS++.h	/^   unsigned long lastCommitTime;$/;"	m	class:TinyGPSCustom
last_error	./Robot_Motor/LineFollow.h	/^		int lectura_sensor[5], last_error, acu;$/;"	m	class:LineFollow
last_error	./Robot_Motor/LineFollow.h	/^		int lectura_sensor[5], last_error, acu;$/;"	m	class:LineFollow
lastGreen	./Esplora/Esplora.h	/^  byte lastGreen;$/;"	m	class:_Esplora
lastGreen	./Esplora/Esplora.h	/^  byte lastGreen;$/;"	m	class:_Esplora
LAST_PARAM	./WiFi/utility/spi_drv.h	10;"	d
LAST_PARAM	./WiFi/utility/spi_drv.h	10;"	d
_last_position_fix	./TinyGPS/TinyGPS.h	/^  unsigned long _last_position_fix, _new_position_fix;$/;"	m	class:TinyGPS
_last_position_fix	./TinyGPS/TinyGPS.h	/^  unsigned long _last_position_fix, _new_position_fix;$/;"	m	class:TinyGPS
lastRed	./Esplora/Esplora.h	/^  byte lastRed;$/;"	m	class:_Esplora
lastRed	./Esplora/Esplora.h	/^  byte lastRed;$/;"	m	class:_Esplora
last_speaker_volume	./GSM_Shield/GSM_Shield.h	/^    byte last_speaker_volume; $/;"	m	class:GSM
last_speaker_volume	./GSM_Shield/GSM_Shield.h	/^    byte last_speaker_volume; $/;"	m	class:GSM
last_step_time	./Stepper/Stepper.h	/^    long last_step_time;      \/\/ time stamp in ms of when the last step was taken$/;"	m	class:Stepper
last_step_time	./Stepper/Stepper.h	/^    long last_step_time;      \/\/ time stamp in ms of when the last step was taken$/;"	m	class:Stepper
_last_time_fix	./TinyGPS/TinyGPS.h	/^  unsigned long _last_time_fix, _new_time_fix;$/;"	m	class:TinyGPS
_last_time_fix	./TinyGPS/TinyGPS.h	/^  unsigned long _last_time_fix, _new_time_fix;$/;"	m	class:TinyGPS
lastWriteDate	./Robot_Control/FatStructs.h	/^  uint16_t lastWriteDate;$/;"	m	struct:directoryEntry
lastWriteDate	./Robot_Control/FatStructs.h	/^  uint16_t lastWriteDate;$/;"	m	struct:directoryEntry
lastWriteDate	./SD/utility/FatStructs.h	/^  uint16_t lastWriteDate;$/;"	m	struct:directoryEntry
lastWriteDate	./SD/utility/FatStructs.h	/^  uint16_t lastWriteDate;$/;"	m	struct:directoryEntry
lastWriteTime	./Robot_Control/FatStructs.h	/^  uint16_t lastWriteTime;$/;"	m	struct:directoryEntry
lastWriteTime	./Robot_Control/FatStructs.h	/^  uint16_t lastWriteTime;$/;"	m	struct:directoryEntry
lastWriteTime	./SD/utility/FatStructs.h	/^  uint16_t lastWriteTime;$/;"	m	struct:directoryEntry
lastWriteTime	./SD/utility/FatStructs.h	/^  uint16_t lastWriteTime;$/;"	m	struct:directoryEntry
latch_state	./AFMotor/AFMotor.cpp	/^static uint8_t latch_state;$/;"	v	file:
latch_state	./AFMotor/AFMotor.cpp	/^static uint8_t latch_state;$/;"	v	file:
latch_tx	./AFMotor/AFMotor.cpp	/^void AFMotorController::latch_tx(void) {$/;"	f	class:AFMotorController
latch_tx	./AFMotor/AFMotor.cpp	/^void AFMotorController::latch_tx(void) {$/;"	f	class:AFMotorController
_latitude	./TinyGPS/TinyGPS.h	/^  long _latitude, _new_latitude;$/;"	m	class:TinyGPS
_latitude	./TinyGPS/TinyGPS.h	/^  long _latitude, _new_latitude;$/;"	m	class:TinyGPS
lat	./TinyGPSPlus/TinyGPS++.cpp	/^double TinyGPSLocation::lat()$/;"	f	class:TinyGPSLocation
lat	./TinyGPSPlus/TinyGPS++.cpp	/^double TinyGPSLocation::lat()$/;"	f	class:TinyGPSLocation
LCD_1LINE	./LiquidCrystal/LiquidCrystal.h	41;"	d
LCD_1LINE	./LiquidCrystal/LiquidCrystal.h	41;"	d
LCD_2LINE	./LiquidCrystal/LiquidCrystal.h	40;"	d
LCD_2LINE	./LiquidCrystal/LiquidCrystal.h	40;"	d
LCD_4BITMODE	./LiquidCrystal/LiquidCrystal.h	39;"	d
LCD_4BITMODE	./LiquidCrystal/LiquidCrystal.h	39;"	d
LCD_5x10DOTS	./LiquidCrystal/LiquidCrystal.h	42;"	d
LCD_5x10DOTS	./LiquidCrystal/LiquidCrystal.h	42;"	d
LCD_5x8DOTS	./LiquidCrystal/LiquidCrystal.h	43;"	d
LCD_5x8DOTS	./LiquidCrystal/LiquidCrystal.h	43;"	d
LCD_8BITMODE	./LiquidCrystal/LiquidCrystal.h	38;"	d
LCD_8BITMODE	./LiquidCrystal/LiquidCrystal.h	38;"	d
LCD_BLINKOFF	./LiquidCrystal/LiquidCrystal.h	29;"	d
LCD_BLINKOFF	./LiquidCrystal/LiquidCrystal.h	29;"	d
LCD_BLINKON	./LiquidCrystal/LiquidCrystal.h	28;"	d
LCD_BLINKON	./LiquidCrystal/LiquidCrystal.h	28;"	d
LCD_CLEARDISPLAY	./LiquidCrystal/LiquidCrystal.h	8;"	d
LCD_CLEARDISPLAY	./LiquidCrystal/LiquidCrystal.h	8;"	d
LCD_CURSORMOVE	./LiquidCrystal/LiquidCrystal.h	33;"	d
LCD_CURSORMOVE	./LiquidCrystal/LiquidCrystal.h	33;"	d
LCD_CURSOROFF	./LiquidCrystal/LiquidCrystal.h	27;"	d
LCD_CURSOROFF	./LiquidCrystal/LiquidCrystal.h	27;"	d
LCD_CURSORON	./LiquidCrystal/LiquidCrystal.h	26;"	d
LCD_CURSORON	./LiquidCrystal/LiquidCrystal.h	26;"	d
LCD_CURSORSHIFT	./LiquidCrystal/LiquidCrystal.h	12;"	d
LCD_CURSORSHIFT	./LiquidCrystal/LiquidCrystal.h	12;"	d
LCD_DISPLAYCONTROL	./LiquidCrystal/LiquidCrystal.h	11;"	d
LCD_DISPLAYCONTROL	./LiquidCrystal/LiquidCrystal.h	11;"	d
LCD_DISPLAYMOVE	./LiquidCrystal/LiquidCrystal.h	32;"	d
LCD_DISPLAYMOVE	./LiquidCrystal/LiquidCrystal.h	32;"	d
LCD_DISPLAYOFF	./LiquidCrystal/LiquidCrystal.h	25;"	d
LCD_DISPLAYOFF	./LiquidCrystal/LiquidCrystal.h	25;"	d
LCD_DISPLAYON	./LiquidCrystal/LiquidCrystal.h	24;"	d
LCD_DISPLAYON	./LiquidCrystal/LiquidCrystal.h	24;"	d
LCD_ENTRYLEFT	./LiquidCrystal/LiquidCrystal.h	19;"	d
LCD_ENTRYLEFT	./LiquidCrystal/LiquidCrystal.h	19;"	d
LCD_ENTRYMODESET	./LiquidCrystal/LiquidCrystal.h	10;"	d
LCD_ENTRYMODESET	./LiquidCrystal/LiquidCrystal.h	10;"	d
LCD_ENTRYRIGHT	./LiquidCrystal/LiquidCrystal.h	18;"	d
LCD_ENTRYRIGHT	./LiquidCrystal/LiquidCrystal.h	18;"	d
LCD_ENTRYSHIFTDECREMENT	./LiquidCrystal/LiquidCrystal.h	21;"	d
LCD_ENTRYSHIFTDECREMENT	./LiquidCrystal/LiquidCrystal.h	21;"	d
LCD_ENTRYSHIFTINCREMENT	./LiquidCrystal/LiquidCrystal.h	20;"	d
LCD_ENTRYSHIFTINCREMENT	./LiquidCrystal/LiquidCrystal.h	20;"	d
LCD_FUNCTIONSET	./LiquidCrystal/LiquidCrystal.h	13;"	d
LCD_FUNCTIONSET	./LiquidCrystal/LiquidCrystal.h	13;"	d
LCD_MOVELEFT	./LiquidCrystal/LiquidCrystal.h	35;"	d
LCD_MOVELEFT	./LiquidCrystal/LiquidCrystal.h	35;"	d
LCD_MOVERIGHT	./LiquidCrystal/LiquidCrystal.h	34;"	d
LCD_MOVERIGHT	./LiquidCrystal/LiquidCrystal.h	34;"	d
LCD_RETURNHOME	./LiquidCrystal/LiquidCrystal.h	9;"	d
LCD_RETURNHOME	./LiquidCrystal/LiquidCrystal.h	9;"	d
LCD_SETCGRAMADDR	./LiquidCrystal/LiquidCrystal.h	14;"	d
LCD_SETCGRAMADDR	./LiquidCrystal/LiquidCrystal.h	14;"	d
LCD_SETDDRAMADDR	./LiquidCrystal/LiquidCrystal.h	15;"	d
LCD_SETDDRAMADDR	./LiquidCrystal/LiquidCrystal.h	15;"	d
lectura_sensor	./Robot_Motor/LineFollow.h	/^		int lectura_sensor[5], last_error, acu;$/;"	m	class:LineFollow
lectura_sensor	./Robot_Motor/LineFollow.h	/^		int lectura_sensor[5], last_error, acu;$/;"	m	class:LineFollow
LED1	./Robot_Control/ArduinoRobot.h	102;"	d
LED1	./Robot_Control/ArduinoRobot.h	102;"	d
LED_PIN	./Esplora/Esplora.cpp	/^const byte LED_PIN     = 13;$/;"	v
LED_PIN	./Esplora/Esplora.cpp	/^const byte LED_PIN     = 13;$/;"	v
leftToRight	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::leftToRight(void) {$/;"	f	class:LiquidCrystal
leftToRight	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::leftToRight(void) {$/;"	f	class:LiquidCrystal
length	./Robot_Control/Multiplexer.h	/^		uint8_t length;$/;"	m	class:Multiplexer
length	./Robot_Control/Multiplexer.h	/^		uint8_t length;$/;"	m	class:Multiplexer
length	./Robot_Motor/Multiplexer.h	/^		uint8_t length;$/;"	m	class:Multiplexer
length	./Robot_Motor/Multiplexer.h	/^		uint8_t length;$/;"	m	class:Multiplexer
libraryVersion	./TinyGPSPlus/TinyGPS++.h	/^  static const char *libraryVersion() { return _GPS_VERSION; }$/;"	f	class:TinyGPSPlus
libraryVersion	./TinyGPSPlus/TinyGPS++.h	/^  static const char *libraryVersion() { return _GPS_VERSION; }$/;"	f	class:TinyGPSPlus
library_version	./TinyGPS/TinyGPS.h	/^  static int library_version() { return _GPS_VERSION; }$/;"	f	class:TinyGPS
library_version	./TinyGPS/TinyGPS.h	/^  static int library_version() { return _GPS_VERSION; }$/;"	f	class:TinyGPS
LibVer	./GSM_Shield/GSM_Shield.cpp	/^int GSM::LibVer(void)$/;"	f	class:GSM
LibVer	./GSM_Shield/GSM_Shield.cpp	/^int GSM::LibVer(void)$/;"	f	class:GSM
LIGHT_BMP	./Robot_Control/ArduinoRobot.h	39;"	d
LIGHT_BMP	./Robot_Control/ArduinoRobot.h	39;"	d
LINE_FOLLOW_H	./Robot_Motor/LineFollow.h	2;"	d
LINE_FOLLOW_H	./Robot_Motor/LineFollow.h	2;"	d
LineFollow	./Robot_Motor/lineFollow.cpp	/^LineFollow::LineFollow(){$/;"	f	class:LineFollow
LineFollow	./Robot_Motor/lineFollow.cpp	/^LineFollow::LineFollow(){$/;"	f	class:LineFollow
LineFollow	./Robot_Motor/LineFollow.h	/^class LineFollow{$/;"	c
LineFollow	./Robot_Motor/LineFollow.h	/^class LineFollow{$/;"	c
lineHeight	./Robot_Control/utility/RobotTextManager.cpp	/^const int TextManager::lineHeight=10;$/;"	m	class:TextManager	file:
lineHeight	./Robot_Control/utility/RobotTextManager.cpp	/^const int TextManager::lineHeight=10;$/;"	m	class:TextManager	file:
lineHeight	./Robot_Control/utility/RobotTextManager.h	/^    static const int lineHeight;\/\/8+2=10$/;"	m	class:TextManager
lineHeight	./Robot_Control/utility/RobotTextManager.h	/^    static const int lineHeight;\/\/8+2=10$/;"	m	class:TextManager
line	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::line(int16_t x1, int16_t y1, int16_t x2, int16_t y2) {$/;"	f	class:Adafruit_GFX
line	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::line(int16_t x1, int16_t y1, int16_t x2, int16_t y2) {$/;"	f	class:Adafruit_GFX
lineStatus	./GSM/GSM3MobileMockupProvider.h	/^		GSM3_modemlinest_e lineStatus;$/;"	m	class:GSM3MobileMockupProvider
lineStatus	./GSM/GSM3MobileMockupProvider.h	/^		GSM3_modemlinest_e lineStatus;$/;"	m	class:GSM3MobileMockupProvider
line	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::line(int16_t x1, int16_t y1, int16_t x2, int16_t y2) {$/;"	f	class:Adafruit_GFX
line	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::line(int16_t x1, int16_t y1, int16_t x2, int16_t y2) {$/;"	f	class:Adafruit_GFX
LiquidCrystal_h	./LiquidCrystal/LiquidCrystal.h	2;"	d
LiquidCrystal_h	./LiquidCrystal/LiquidCrystal.h	2;"	d
LiquidCrystal	./LiquidCrystal/LiquidCrystal.cpp	/^LiquidCrystal::LiquidCrystal(uint8_t rs,  uint8_t enable,$/;"	f	class:LiquidCrystal
LiquidCrystal	./LiquidCrystal/LiquidCrystal.cpp	/^LiquidCrystal::LiquidCrystal(uint8_t rs,  uint8_t enable,$/;"	f	class:LiquidCrystal
LiquidCrystal	./LiquidCrystal/LiquidCrystal.cpp	/^LiquidCrystal::LiquidCrystal(uint8_t rs, uint8_t enable,$/;"	f	class:LiquidCrystal
LiquidCrystal	./LiquidCrystal/LiquidCrystal.cpp	/^LiquidCrystal::LiquidCrystal(uint8_t rs, uint8_t enable,$/;"	f	class:LiquidCrystal
LiquidCrystal	./LiquidCrystal/LiquidCrystal.cpp	/^LiquidCrystal::LiquidCrystal(uint8_t rs, uint8_t rw, uint8_t enable,$/;"	f	class:LiquidCrystal
LiquidCrystal	./LiquidCrystal/LiquidCrystal.cpp	/^LiquidCrystal::LiquidCrystal(uint8_t rs, uint8_t rw, uint8_t enable,$/;"	f	class:LiquidCrystal
LiquidCrystal	./LiquidCrystal/LiquidCrystal.h	/^class LiquidCrystal : public Print {$/;"	c
LiquidCrystal	./LiquidCrystal/LiquidCrystal.h	/^class LiquidCrystal : public Print {$/;"	c
listen	./Ethernet/utility/socket.cpp	/^uint8_t listen(SOCKET s)$/;"	f
listen	./Ethernet/utility/socket.cpp	/^uint8_t listen(SOCKET s)$/;"	f
LISTEN	./Ethernet/utility/w5100.h	/^  static const uint8_t LISTEN      = 0x14;$/;"	m	class:SnSR
LISTEN	./Ethernet/utility/w5100.h	/^  static const uint8_t LISTEN      = 0x14;$/;"	m	class:SnSR
listen	./SoftwareSerial/SoftwareSerial.cpp	/^bool SoftwareSerial::listen()$/;"	f	class:SoftwareSerial
listen	./SoftwareSerial/SoftwareSerial.cpp	/^bool SoftwareSerial::listen()$/;"	f	class:SoftwareSerial
LISTEN	./WiFi/utility/wifi_spi.h	/^  LISTEN      = 1,$/;"	e	enum:wl_tcp_state
LISTEN	./WiFi/utility/wifi_spi.h	/^  LISTEN      = 1,$/;"	e	enum:wl_tcp_state
lng	./TinyGPSPlus/TinyGPS++.cpp	/^double TinyGPSLocation::lng()$/;"	f	class:TinyGPSLocation
lng	./TinyGPSPlus/TinyGPS++.cpp	/^double TinyGPSLocation::lng()$/;"	f	class:TinyGPSLocation
LO4	./Robot_Control/Squawk.cpp	13;"	d	file:
LO4	./Robot_Control/Squawk.cpp	13;"	d	file:
loadImage	./TFT/utility/Adafruit_GFX.h	/^  PImage loadImage(const char * fileName) { return PImage::loadImage(fileName); }$/;"	f	class:Adafruit_GFX
loadImage	./TFT/utility/Adafruit_GFX.h	/^  PImage loadImage(const char * fileName) { return PImage::loadImage(fileName); }$/;"	f	class:Adafruit_GFX
loadImage	./TFT/utility/Adafruit_GFX.h	/^PImage PImage::loadImage(const char * fileName) {$/;"	f	class:PImage
loadImage	./TFT/utility/Adafruit_GFX.h	/^PImage PImage::loadImage(const char * fileName) {$/;"	f	class:PImage
local1Remote0	./GSM/GSM3MobileServerService.h	/^		bool local1Remote0;$/;"	m	class:GSM3MobileServerService
local1Remote0	./GSM/GSM3MobileServerService.h	/^		bool local1Remote0;$/;"	m	class:GSM3MobileServerService
localIP	./Ethernet/Ethernet.cpp	/^IPAddress EthernetClass::localIP()$/;"	f	class:EthernetClass
localIP	./Ethernet/Ethernet.cpp	/^IPAddress EthernetClass::localIP()$/;"	f	class:EthernetClass
local_IP	./GSM/GSM3ShieldV1.h	/^		char* local_IP;				\/\/Local IP.$/;"	m	class:GSM3ShieldV1
local_IP	./GSM/GSM3ShieldV1.h	/^		char* local_IP;				\/\/Local IP.$/;"	m	class:GSM3ShieldV1
local_IP_Length	./GSM/GSM3ShieldV1.h	/^		int local_IP_Length;		\/\/Local IP length.$/;"	m	class:GSM3ShieldV1
local_IP_Length	./GSM/GSM3ShieldV1.h	/^		int local_IP_Length;		\/\/Local IP length.$/;"	m	class:GSM3ShieldV1
_localIp	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_localIp[] = {0};$/;"	m	class:WiFiDrv	file:
_localIp	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_localIp[] = {0};$/;"	m	class:WiFiDrv	file:
_localIp	./WiFi/utility/wifi_drv.h	/^	static uint8_t  _localIp[WL_IPV4_LENGTH];$/;"	m	class:WiFiDrv
_localIp	./WiFi/utility/wifi_drv.h	/^	static uint8_t  _localIp[WL_IPV4_LENGTH];$/;"	m	class:WiFiDrv
localIP	./WiFi/WiFi.cpp	/^IPAddress WiFiClass::localIP()$/;"	f	class:WiFiClass
localIP	./WiFi/WiFi.cpp	/^IPAddress WiFiClass::localIP()$/;"	f	class:WiFiClass
local_port	./Ethernet/utility/socket.cpp	/^static uint16_t local_port;$/;"	v	file:
local_port	./Ethernet/utility/socket.cpp	/^static uint16_t local_port;$/;"	v	file:
local_Port	./GSM/GSM3ShieldV1.h	/^		int local_Port;				\/\/Local Port.$/;"	m	class:GSM3ShieldV1
local_Port	./GSM/GSM3ShieldV1.h	/^		int local_Port;				\/\/Local Port.$/;"	m	class:GSM3ShieldV1
locate	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::locate(const char* reference, byte thishead, byte thistail, byte* from, byte* to)$/;"	f	class:GSM3CircularBuffer
locate	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::locate(const char* reference, byte thishead, byte thistail, byte* from, byte* to)$/;"	f	class:GSM3CircularBuffer
locate	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::locate(const char* reference)$/;"	f	class:GSM3CircularBuffer
locate	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::locate(const char* reference)$/;"	f	class:GSM3CircularBuffer
locationArea	./GSM/GSM3ShieldV1CellManagement.h	/^		char *locationArea;$/;"	m	class:GSM3ShieldV1CellManagement
locationArea	./GSM/GSM3ShieldV1CellManagement.h	/^		char *locationArea;$/;"	m	class:GSM3ShieldV1CellManagement
location	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSLocation location;$/;"	m	class:TinyGPSPlus
location	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSLocation location;$/;"	m	class:TinyGPSPlus
_longitude	./TinyGPS/TinyGPS.h	/^  long _longitude, _new_longitude;$/;"	m	class:TinyGPS
_longitude	./TinyGPS/TinyGPS.h	/^  long _longitude, _new_longitude;$/;"	m	class:TinyGPS
long	./SoftwareSerial/SoftwareSerial.h	106;"	d
long	./SoftwareSerial/SoftwareSerial.h	106;"	d
long	./TinyGPS/TinyGPS.h	150;"	d
long	./TinyGPS/TinyGPS.h	150;"	d
loop	./AFMotor/examples/AFMotor_ConstantSpeed/AFMotor_ConstantSpeed.pde	/^void loop()$/;"	f
loop	./AFMotor/examples/AFMotor_ConstantSpeed/AFMotor_ConstantSpeed.pde	/^void loop()$/;"	f
loop	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void loop()$/;"	f
loop	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void loop()$/;"	f
loop	./AFMotor/examples/MotorParty/MotorParty.pde	/^void loop() {$/;"	f
loop	./AFMotor/examples/MotorParty/MotorParty.pde	/^void loop() {$/;"	f
loop	./AFMotor/examples/MotorTest/MotorTest.pde	/^void loop() {$/;"	f
loop	./AFMotor/examples/MotorTest/MotorTest.pde	/^void loop() {$/;"	f
loop	./AFMotor/examples/StepperTest/StepperTest.pde	/^void loop() {$/;"	f
loop	./AFMotor/examples/StepperTest/StepperTest.pde	/^void loop() {$/;"	f
loop	./SoftwareServo/examples/SerialServo/SerialServo.pde	/^void loop()$/;"	f
loop	./SoftwareServo/examples/SerialServo/SerialServo.pde	/^void loop()$/;"	f
LS_DATE	./Robot_Control/Fat16.h	/^uint8_t const LS_DATE = 1;$/;"	v
LS_DATE	./Robot_Control/Fat16.h	/^uint8_t const LS_DATE = 1;$/;"	v
LS_DATE	./SD/utility/SdFat.h	/^uint8_t const LS_DATE = 1;$/;"	v
LS_DATE	./SD/utility/SdFat.h	/^uint8_t const LS_DATE = 1;$/;"	v
ls	./Robot_Control/Fat16.cpp	/^void Fat16::ls(uint8_t flags) {$/;"	f	class:Fat16
ls	./Robot_Control/Fat16.cpp	/^void Fat16::ls(uint8_t flags) {$/;"	f	class:Fat16
LS_R	./SD/utility/SdFat.h	/^uint8_t const LS_R = 4;$/;"	v
LS_R	./SD/utility/SdFat.h	/^uint8_t const LS_R = 4;$/;"	v
ls	./SD/utility/SdFile.cpp	/^void SdFile::ls(uint8_t flags, uint8_t indent) {$/;"	f	class:SdFile
ls	./SD/utility/SdFile.cpp	/^void SdFile::ls(uint8_t flags, uint8_t indent) {$/;"	f	class:SdFile
LS_SIZE	./Robot_Control/Fat16.h	/^uint8_t const LS_SIZE = 2;$/;"	v
LS_SIZE	./Robot_Control/Fat16.h	/^uint8_t const LS_SIZE = 2;$/;"	v
LS_SIZE	./SD/utility/SdFat.h	/^uint8_t const LS_SIZE = 2;$/;"	v
LS_SIZE	./SD/utility/SdFat.h	/^uint8_t const LS_SIZE = 2;$/;"	v
macAddress	./WiFi/WiFi.cpp	/^uint8_t* WiFiClass::macAddress(uint8_t* mac)$/;"	f	class:WiFiClass
macAddress	./WiFi/WiFi.cpp	/^uint8_t* WiFiClass::macAddress(uint8_t* mac)$/;"	f	class:WiFiClass
MACRAW	./Ethernet/utility/w5100.h	/^  static const uint8_t MACRAW = 0x04;$/;"	m	class:SnMR
MACRAW	./Ethernet/utility/w5100.h	/^  static const uint8_t MACRAW = 0x04;$/;"	m	class:SnMR
MACRAW	./Ethernet/utility/w5100.h	/^  static const uint8_t MACRAW      = 0x42;$/;"	m	class:SnSR
MACRAW	./Ethernet/utility/w5100.h	/^  static const uint8_t MACRAW      = 0x42;$/;"	m	class:SnSR
_mac	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_mac[] = {0};$/;"	m	class:WiFiDrv	file:
_mac	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_mac[] = {0};$/;"	m	class:WiFiDrv	file:
_mac	./WiFi/utility/wifi_drv.h	/^	static uint8_t 	_mac[WL_MAC_ADDR_LENGTH];$/;"	m	class:WiFiDrv
_mac	./WiFi/utility/wifi_drv.h	/^	static uint8_t 	_mac[WL_MAC_ADDR_LENGTH];$/;"	m	class:WiFiDrv
MADCTL_MH	./Robot_Control/Arduino_LCD.cpp	569;"	d	file:
MADCTL_MH	./Robot_Control/Arduino_LCD.cpp	569;"	d	file:
MADCTL_MH	./TFT/utility/Adafruit_ST7735.cpp	458;"	d	file:
MADCTL_MH	./TFT/utility/Adafruit_ST7735.cpp	458;"	d	file:
MADCTL_ML	./Robot_Control/Arduino_LCD.cpp	567;"	d	file:
MADCTL_ML	./Robot_Control/Arduino_LCD.cpp	567;"	d	file:
MADCTL_ML	./TFT/utility/Adafruit_ST7735.cpp	456;"	d	file:
MADCTL_ML	./TFT/utility/Adafruit_ST7735.cpp	456;"	d	file:
MADCTL_MV	./Robot_Control/Arduino_LCD.cpp	566;"	d	file:
MADCTL_MV	./Robot_Control/Arduino_LCD.cpp	566;"	d	file:
MADCTL_MV	./TFT/utility/Adafruit_ST7735.cpp	455;"	d	file:
MADCTL_MV	./TFT/utility/Adafruit_ST7735.cpp	455;"	d	file:
MADCTL_MX	./Robot_Control/Arduino_LCD.cpp	565;"	d	file:
MADCTL_MX	./Robot_Control/Arduino_LCD.cpp	565;"	d	file:
MADCTL_MX	./TFT/utility/Adafruit_ST7735.cpp	454;"	d	file:
MADCTL_MX	./TFT/utility/Adafruit_ST7735.cpp	454;"	d	file:
MADCTL_MY	./Robot_Control/Arduino_LCD.cpp	564;"	d	file:
MADCTL_MY	./Robot_Control/Arduino_LCD.cpp	564;"	d	file:
MADCTL_MY	./TFT/utility/Adafruit_ST7735.cpp	453;"	d	file:
MADCTL_MY	./TFT/utility/Adafruit_ST7735.cpp	453;"	d	file:
MADCTL_RGB	./Robot_Control/Arduino_LCD.cpp	568;"	d	file:
MADCTL_RGB	./Robot_Control/Arduino_LCD.cpp	568;"	d	file:
MADCTL_RGB	./TFT/utility/Adafruit_ST7735.cpp	457;"	d	file:
MADCTL_RGB	./TFT/utility/Adafruit_ST7735.cpp	457;"	d	file:
MAGENTA	./Robot_Control/ArduinoRobot.h	121;"	d
MAGENTA	./Robot_Control/ArduinoRobot.h	121;"	d
MAGIC_COOKIE	./Ethernet/Dhcp.h	44;"	d
MAGIC_COOKIE	./Ethernet/Dhcp.h	44;"	d
maintain	./Ethernet/Ethernet.cpp	/^int EthernetClass::maintain(){$/;"	f	class:EthernetClass
maintain	./Ethernet/Ethernet.cpp	/^int EthernetClass::maintain(){$/;"	f	class:EthernetClass
make83Name	./Robot_Control/Fat16.cpp	/^static uint8_t make83Name(const char* str, uint8_t* name) {$/;"	f	file:
make83Name	./Robot_Control/Fat16.cpp	/^static uint8_t make83Name(const char* str, uint8_t* name) {$/;"	f	file:
make83Name	./SD/utility/SdFile.cpp	/^uint8_t SdFile::make83Name(const char* str, uint8_t* name) {$/;"	f	class:SdFile
make83Name	./SD/utility/SdFile.cpp	/^uint8_t SdFile::make83Name(const char* str, uint8_t* name) {$/;"	f	class:SdFile
makeDir	./SD/utility/SdFat.h	/^  uint8_t makeDir(SdFile& dir, const char* dirName) {  \/\/ NOLINT$/;"	f	class:SdFile
makeDir	./SD/utility/SdFat.h	/^  uint8_t makeDir(SdFile& dir, const char* dirName) {  \/\/ NOLINT$/;"	f	class:SdFile
makeDir	./SD/utility/SdFile.cpp	/^uint8_t SdFile::makeDir(SdFile* dir, const char* dirName) {$/;"	f	class:SdFile
makeDir	./SD/utility/SdFile.cpp	/^uint8_t SdFile::makeDir(SdFile* dir, const char* dirName) {$/;"	f	class:SdFile
manageMsg	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::manageMsg(byte from, byte to)$/;"	f	class:GSM3ShieldV1ModemCore
manageMsg	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::manageMsg(byte from, byte to)$/;"	f	class:GSM3ShieldV1ModemCore
manageMsg	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerialMgr::manageMsg(byte from, byte to){};$/;"	f	class:GSM3SoftSerialMgr
manageMsg	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerialMgr::manageMsg(byte from, byte to){};$/;"	f	class:GSM3SoftSerialMgr
manageMsgNow	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::manageMsgNow(byte from, byte to)$/;"	f	class:GSM3ShieldV1ModemCore
manageMsgNow	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::manageMsgNow(byte from, byte to)$/;"	f	class:GSM3ShieldV1ModemCore
manageReceivedData	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::manageReceivedData()$/;"	f	class:GSM3ShieldV1ModemCore
manageReceivedData	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::manageReceivedData()$/;"	f	class:GSM3ShieldV1ModemCore
manageResponse	./GSM/GSM3ShieldV1AccessProvider.cpp	/^void GSM3ShieldV1AccessProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1AccessProvider
manageResponse	./GSM/GSM3ShieldV1AccessProvider.cpp	/^void GSM3ShieldV1AccessProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1AccessProvider
manageResponse	./GSM/GSM3ShieldV1CellManagement.cpp	/^void GSM3ShieldV1CellManagement::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1CellManagement
manageResponse	./GSM/GSM3ShieldV1CellManagement.cpp	/^void GSM3ShieldV1CellManagement::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1CellManagement
manageResponse	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1ClientProvider
manageResponse	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1ClientProvider
manageResponse	./GSM/GSM3ShieldV1.cpp	/^void GSM3ShieldV1::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1
manageResponse	./GSM/GSM3ShieldV1.cpp	/^void GSM3ShieldV1::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1
manageResponse	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^void GSM3ShieldV1DataNetworkProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
manageResponse	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^void GSM3ShieldV1DataNetworkProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
manageResponse	./GSM/GSM3ShieldV1DirectModemProvider.h	/^			void manageResponse(byte from, byte to){};$/;"	f	class:GSM3ShieldV1DirectModemProvider
manageResponse	./GSM/GSM3ShieldV1DirectModemProvider.h	/^			void manageResponse(byte from, byte to){};$/;"	f	class:GSM3ShieldV1DirectModemProvider
manageResponse	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1MultiClientProvider
manageResponse	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1MultiClientProvider
manageResponse	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^void GSM3ShieldV1MultiServerProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1MultiServerProvider
manageResponse	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^void GSM3ShieldV1MultiServerProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1MultiServerProvider
manageResponse	./GSM/GSM3ShieldV1ServerProvider.cpp	/^void GSM3ShieldV1ServerProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1ServerProvider
manageResponse	./GSM/GSM3ShieldV1ServerProvider.cpp	/^void GSM3ShieldV1ServerProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1ServerProvider
manageResponse	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1SMSProvider
manageResponse	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1SMSProvider
manageResponse	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^void GSM3ShieldV1VoiceProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1VoiceProvider
manageResponse	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^void GSM3ShieldV1VoiceProvider::manageResponse(byte from, byte to)$/;"	f	class:GSM3ShieldV1VoiceProvider
margin_left	./Robot_Control/utility/RobotTextManager.h	/^    int margin_left,margin_top;$/;"	m	class:TextManager
margin_left	./Robot_Control/utility/RobotTextManager.h	/^    int margin_left,margin_top;$/;"	m	class:TextManager
margin_top	./Robot_Control/utility/RobotTextManager.h	/^    int margin_left,margin_top;$/;"	m	class:TextManager
margin_top	./Robot_Control/utility/RobotTextManager.h	/^    int margin_left,margin_top;$/;"	m	class:TextManager
masterBootRecord	./Robot_Control/FatStructs.h	/^struct masterBootRecord {$/;"	s
masterBootRecord	./Robot_Control/FatStructs.h	/^struct masterBootRecord {$/;"	s
masterBootRecord	./SD/utility/FatStructs.h	/^struct masterBootRecord {$/;"	s
masterBootRecord	./SD/utility/FatStructs.h	/^struct masterBootRecord {$/;"	s
max16	./SoftwareServo/SoftwareServo.h	/^    uint8_t max16;       \/\/ maximum pulse, 16uS units, 0-4ms range (default is 150)$/;"	m	class:SoftwareServo
max16	./SoftwareServo/SoftwareServo.h	/^    uint8_t max16;       \/\/ maximum pulse, 16uS units, 0-4ms range (default is 150)$/;"	m	class:SoftwareServo
MAX_CHANNELS	./Esplora/Esplora.h	/^const byte MAX_CHANNELS   = 13;$/;"	v
MAX_CHANNELS	./Esplora/Esplora.h	/^const byte MAX_CHANNELS   = 13;$/;"	v
MAX_COMPONENT_LEN	./SD/SD.cpp	56;"	d	file:
MAX_COMPONENT_LEN	./SD/SD.cpp	56;"	d	file:
MAX_DATA_BYTES	./Firmata/Firmata.h	26;"	d
MAX_DATA_BYTES	./Firmata/Firmata.h	26;"	d
MAX_DHCP_OPT	./Ethernet/Dhcp.h	45;"	d
MAX_DHCP_OPT	./Ethernet/Dhcp.h	45;"	d
MAX_PARAM_NUMS	./WiFi/utility/wifi_spi.h	/^    MAX_PARAM_NUMS$/;"	e	enum:numParams
MAX_PARAM_NUMS	./WiFi/utility/wifi_spi.h	/^    MAX_PARAM_NUMS$/;"	e	enum:numParams
MAX_PARAMS	./WiFi/utility/wifi_spi.h	94;"	d
MAX_PARAMS	./WiFi/utility/wifi_spi.h	94;"	d
MAX_PULSE_WIDTH	./Servo/Servo.h	89;"	d
MAX_PULSE_WIDTH	./Servo/Servo.h	89;"	d
MAX	./Robot_Control/Squawk.cpp	16;"	d	file:
MAX	./Robot_Control/Squawk.cpp	16;"	d	file:
max	./Servo/Servo.h	/^   int8_t max;                       \/\/ maximum is this value times 4 added to MAX_PULSE_WIDTH   $/;"	m	class:Servo
max	./Servo/Servo.h	/^   int8_t max;                       \/\/ maximum is this value times 4 added to MAX_PULSE_WIDTH   $/;"	m	class:Servo
MAX_SERVOS	./Firmata/Boards.h	19;"	d
MAX_SERVOS	./Firmata/Boards.h	19;"	d
MAX_SERVOS	./Servo/Servo.h	94;"	d
MAX_SERVOS	./Servo/Servo.h	94;"	d
maxSocketAsServer	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline int maxSocketAsServer(){return 0;};$/;"	f	class:GSM3MobileNetworkProvider
maxSocketAsServer	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline int maxSocketAsServer(){return 0;};$/;"	f	class:GSM3MobileNetworkProvider
maxSocketAsServer	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		int maxSocketAsServer(){return 4;};$/;"	f	class:GSM3ShieldV1MultiServerProvider
maxSocketAsServer	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		int maxSocketAsServer(){return 4;};$/;"	f	class:GSM3ShieldV1MultiServerProvider
maxSocketAsServer	./GSM/GSM3ShieldV1ServerProvider.h	/^		int maxSocketAsServer(){return 0;};$/;"	f	class:GSM3ShieldV1ServerProvider
maxSocketAsServer	./GSM/GSM3ShieldV1ServerProvider.h	/^		int maxSocketAsServer(){return 0;};$/;"	f	class:GSM3ShieldV1ServerProvider
maxSocket	./GSM/GSM3MobileMockupProvider.h	/^		inline int maxSocket(){return 8;};$/;"	f	class:GSM3MobileMockupProvider
maxSocket	./GSM/GSM3MobileMockupProvider.h	/^		inline int maxSocket(){return 8;};$/;"	f	class:GSM3MobileMockupProvider
maxSocket	./GSM/GSM3ShieldV1ClientProvider.h	/^		int maxSocket(){return 0;};$/;"	f	class:GSM3ShieldV1ClientProvider
maxSocket	./GSM/GSM3ShieldV1ClientProvider.h	/^		int maxSocket(){return 0;};$/;"	f	class:GSM3ShieldV1ClientProvider
maxSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int maxSocket(){return 5;};$/;"	f	class:GSM3ShieldV1MultiClientProvider
maxSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int maxSocket(){return 5;};$/;"	f	class:GSM3ShieldV1MultiClientProvider
MAX_SOCK_NUM	./Ethernet/Ethernet.h	11;"	d
MAX_SOCK_NUM	./Ethernet/Ethernet.h	11;"	d
MAX_SOCK_NUM	./Ethernet/utility/w5100.h	16;"	d
MAX_SOCK_NUM	./Ethernet/utility/w5100.h	16;"	d
MAX_SOCK_NUM	./WiFi/utility/wl_definitions.h	24;"	d
MAX_SOCK_NUM	./WiFi/utility/wl_definitions.h	24;"	d
mbr	./Robot_Control/Fat16.h	/^  mbr_t   mbr;$/;"	m	union:cache16_t
mbr	./Robot_Control/Fat16.h	/^  mbr_t   mbr;$/;"	m	union:cache16_t
mbr	./SD/utility/SdFat.h	/^  mbr_t    mbr;$/;"	m	union:cache_t
mbr	./SD/utility/SdFat.h	/^  mbr_t    mbr;$/;"	m	union:cache_t
mbrSig0	./Robot_Control/FatStructs.h	/^  uint8_t  mbrSig0;$/;"	m	struct:masterBootRecord
mbrSig0	./Robot_Control/FatStructs.h	/^  uint8_t  mbrSig0;$/;"	m	struct:masterBootRecord
mbrSig0	./SD/utility/FatStructs.h	/^  uint8_t  mbrSig0;$/;"	m	struct:masterBootRecord
mbrSig0	./SD/utility/FatStructs.h	/^  uint8_t  mbrSig0;$/;"	m	struct:masterBootRecord
mbrSig1	./Robot_Control/FatStructs.h	/^  uint8_t  mbrSig1;$/;"	m	struct:masterBootRecord
mbrSig1	./Robot_Control/FatStructs.h	/^  uint8_t  mbrSig1;$/;"	m	struct:masterBootRecord
mbrSig1	./SD/utility/FatStructs.h	/^  uint8_t  mbrSig1;$/;"	m	struct:masterBootRecord
mbrSig1	./SD/utility/FatStructs.h	/^  uint8_t  mbrSig1;$/;"	m	struct:masterBootRecord
mbr_t	./Robot_Control/FatStructs.h	/^typedef struct masterBootRecord mbr_t;$/;"	t	typeref:struct:masterBootRecord
mbr_t	./Robot_Control/FatStructs.h	/^typedef struct masterBootRecord mbr_t;$/;"	t	typeref:struct:masterBootRecord
mbr_t	./SD/utility/FatStructs.h	/^typedef struct masterBootRecord mbr_t;$/;"	t	typeref:struct:masterBootRecord
mbr_t	./SD/utility/FatStructs.h	/^typedef struct masterBootRecord mbr_t;$/;"	t	typeref:struct:masterBootRecord
MC	./AFMotor/AFMotor.cpp	/^static AFMotorController MC;$/;"	v	file:
MC	./AFMotor/AFMotor.cpp	/^static AFMotorController MC;$/;"	v	file:
mdt_month	./Robot_Control/SdInfo.h	/^  unsigned mdt_month : 4;$/;"	m	struct:CID
mdt_month	./Robot_Control/SdInfo.h	/^  unsigned mdt_month : 4;$/;"	m	struct:CID
mdt_month	./SD/utility/SdInfo.h	/^  unsigned mdt_month : 4;$/;"	m	struct:CID
mdt_month	./SD/utility/SdInfo.h	/^  unsigned mdt_month : 4;$/;"	m	struct:CID
mdt_year_high	./Robot_Control/SdInfo.h	/^  unsigned mdt_year_high : 4;  \/\/ Manufacturing date$/;"	m	struct:CID
mdt_year_high	./Robot_Control/SdInfo.h	/^  unsigned mdt_year_high : 4;  \/\/ Manufacturing date$/;"	m	struct:CID
mdt_year_high	./SD/utility/SdInfo.h	/^  unsigned mdt_year_high : 4;  \/\/ Manufacturing date$/;"	m	struct:CID
mdt_year_high	./SD/utility/SdInfo.h	/^  unsigned mdt_year_high : 4;  \/\/ Manufacturing date$/;"	m	struct:CID
mdt_year_low	./Robot_Control/SdInfo.h	/^  unsigned mdt_year_low :4;$/;"	m	struct:CID
mdt_year_low	./Robot_Control/SdInfo.h	/^  unsigned mdt_year_low :4;$/;"	m	struct:CID
mdt_year_low	./SD/utility/SdInfo.h	/^  unsigned mdt_year_low :4;$/;"	m	struct:CID
mdt_year_low	./SD/utility/SdInfo.h	/^  unsigned mdt_year_low :4;$/;"	m	struct:CID
mediaType	./Robot_Control/FatStructs.h	/^  uint8_t  mediaType;$/;"	m	struct:biosParmBlock
mediaType	./Robot_Control/FatStructs.h	/^  uint8_t  mediaType;$/;"	m	struct:biosParmBlock
mediaType	./SD/utility/FatStructs.h	/^  uint8_t  mediaType;$/;"	m	struct:biosParmBlock
mediaType	./SD/utility/FatStructs.h	/^  uint8_t  mediaType;$/;"	m	struct:biosParmBlock
MEGA_SOFT_SPI	./SD/utility/Sd2Card.h	42;"	d
MEGA_SOFT_SPI	./SD/utility/Sd2Card.h	42;"	d
melody	./Robot_Control/ArduinoRobot.h	/^		Fat16 melody;$/;"	m	class:RobotControl
melody	./Robot_Control/ArduinoRobot.h	/^		Fat16 melody;$/;"	m	class:RobotControl
Melody	./Robot_Control/Squawk.h	12;"	d
Melody	./Robot_Control/Squawk.h	12;"	d
messageIn	./Robot_Control/ArduinoRobot.h	/^		EasyTransfer2 messageIn;$/;"	m	class:RobotControl
messageIn	./Robot_Control/ArduinoRobot.h	/^		EasyTransfer2 messageIn;$/;"	m	class:RobotControl
messageIn	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		EasyTransfer2 messageIn;$/;"	m	class:RobotMotorBoard
messageIn	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		EasyTransfer2 messageIn;$/;"	m	class:RobotMotorBoard
messageOut	./Robot_Control/ArduinoRobot.h	/^		EasyTransfer2 messageOut;$/;"	m	class:RobotControl
messageOut	./Robot_Control/ArduinoRobot.h	/^		EasyTransfer2 messageOut;$/;"	m	class:RobotControl
messageOut	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		EasyTransfer2 messageOut;$/;"	m	class:RobotMotorBoard
messageOut	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		EasyTransfer2 messageOut;$/;"	m	class:RobotMotorBoard
meters	./TinyGPSPlus/TinyGPS++.h	/^   double meters()       { return value() \/ 100.0; }$/;"	f	struct:TinyGPSAltitude
meters	./TinyGPSPlus/TinyGPS++.h	/^   double meters()       { return value() \/ 100.0; }$/;"	f	struct:TinyGPSAltitude
mgr	./GSM/GSM3SoftSerial.h	/^		GSM3SoftSerialMgr* mgr;$/;"	m	class:GSM3SoftSerial
mgr	./GSM/GSM3SoftSerial.h	/^		GSM3SoftSerialMgr* mgr;$/;"	m	class:GSM3SoftSerial
MICROSTEP	./AFMotor/AFMotor.h	117;"	d
MICROSTEP	./AFMotor/AFMotor.h	117;"	d
microstepcurve	./AFMotor/AFMotor.cpp	/^uint8_t microstepcurve[] = {0, 25, 50, 74, 98, 120, 141, 162, 180, 197, 212, 225, 236, 244, 250, 253, 255};$/;"	v
microstepcurve	./AFMotor/AFMotor.cpp	/^uint8_t microstepcurve[] = {0, 25, 50, 74, 98, 120, 141, 162, 180, 197, 212, 225, 236, 244, 250, 253, 255};$/;"	v
microstepcurve	./AFMotor/AFMotor.cpp	/^uint8_t microstepcurve[] = {0, 50, 98, 142, 180, 212, 236, 250, 255};$/;"	v
microstepcurve	./AFMotor/AFMotor.cpp	/^uint8_t microstepcurve[] = {0, 50, 98, 142, 180, 212, 236, 250, 255};$/;"	v
MICROSTEPS	./AFMotor/AFMotor.h	41;"	d
MICROSTEPS	./AFMotor/AFMotor.h	41;"	d
MICROSTEPS	./AFMotor/AFMotor.h	65;"	d
MICROSTEPS	./AFMotor/AFMotor.h	65;"	d
mid	./Robot_Control/SdInfo.h	/^  uint8_t mid;  \/\/ Manufacturer ID$/;"	m	struct:CID
mid	./Robot_Control/SdInfo.h	/^  uint8_t mid;  \/\/ Manufacturer ID$/;"	m	struct:CID
mid	./SD/utility/SdInfo.h	/^  uint8_t mid;  \/\/ Manufacturer ID$/;"	m	struct:CID
mid	./SD/utility/SdInfo.h	/^  uint8_t mid;  \/\/ Manufacturer ID$/;"	m	struct:CID
miles	./TinyGPSPlus/TinyGPS++.h	/^   double miles()        { return _GPS_MILES_PER_METER * value() \/ 100.0; }$/;"	f	struct:TinyGPSAltitude
miles	./TinyGPSPlus/TinyGPS++.h	/^   double miles()        { return _GPS_MILES_PER_METER * value() \/ 100.0; }$/;"	f	struct:TinyGPSAltitude
milliseconds	./GSM/GSM3ShieldV1ModemCore.h	/^		unsigned long milliseconds;$/;"	m	class:GSM3ShieldV1ModemCore
milliseconds	./GSM/GSM3ShieldV1ModemCore.h	/^		unsigned long milliseconds;$/;"	m	class:GSM3ShieldV1ModemCore
min16	./SoftwareServo/SoftwareServo.h	/^    uint8_t min16;       \/\/ minimum pulse, 16uS units  (default is 34)$/;"	m	class:SoftwareServo
min16	./SoftwareServo/SoftwareServo.h	/^    uint8_t min16;       \/\/ minimum pulse, 16uS units  (default is 34)$/;"	m	class:SoftwareServo
MIN_PULSE_WIDTH	./Servo/Servo.h	88;"	d
MIN_PULSE_WIDTH	./Servo/Servo.h	88;"	d
MIN	./Robot_Control/Squawk.cpp	15;"	d	file:
MIN	./Robot_Control/Squawk.cpp	15;"	d	file:
min	./Servo/Servo.h	/^   int8_t min;                       \/\/ minimum is this value times 4 added to MIN_PULSE_WIDTH    $/;"	m	class:Servo
min	./Servo/Servo.h	/^   int8_t min;                       \/\/ minimum is this value times 4 added to MIN_PULSE_WIDTH    $/;"	m	class:Servo
minSocketAsServer	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline int minSocketAsServer(){return 0;};$/;"	f	class:GSM3MobileNetworkProvider
minSocketAsServer	./GSM/GSM3MobileNetworkProvider.h	/^		virtual inline int minSocketAsServer(){return 0;};$/;"	f	class:GSM3MobileNetworkProvider
minSocketAsServer	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		int minSocketAsServer(){return 0;};$/;"	f	class:GSM3ShieldV1MultiServerProvider
minSocketAsServer	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		int minSocketAsServer(){return 0;};$/;"	f	class:GSM3ShieldV1MultiServerProvider
minSocketAsServer	./GSM/GSM3ShieldV1ServerProvider.h	/^		int minSocketAsServer(){return 0;};$/;"	f	class:GSM3ShieldV1ServerProvider
minSocketAsServer	./GSM/GSM3ShieldV1ServerProvider.h	/^		int minSocketAsServer(){return 0;};$/;"	f	class:GSM3ShieldV1ServerProvider
minSocket	./GSM/GSM3MobileMockupProvider.h	/^		inline int minSocket(){return 1;};$/;"	f	class:GSM3MobileMockupProvider
minSocket	./GSM/GSM3MobileMockupProvider.h	/^		inline int minSocket(){return 1;};$/;"	f	class:GSM3MobileMockupProvider
minSocket	./GSM/GSM3ShieldV1ClientProvider.h	/^		int minSocket(){return 0;};$/;"	f	class:GSM3ShieldV1ClientProvider
minSocket	./GSM/GSM3ShieldV1ClientProvider.h	/^		int minSocket(){return 0;};$/;"	f	class:GSM3ShieldV1ClientProvider
minSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int minSocket(){return 0;};$/;"	f	class:GSM3ShieldV1MultiClientProvider
minSocket	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int minSocket(){return 0;};$/;"	f	class:GSM3ShieldV1MultiClientProvider
minute	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSTime::minute()$/;"	f	class:TinyGPSTime
minute	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSTime::minute()$/;"	f	class:TinyGPSTime
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 12;$/;"	v
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 12;$/;"	v
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 14;$/;"	v
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 14;$/;"	v
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 23;$/;"	v
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 23;$/;"	v
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 50;$/;"	v
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 50;$/;"	v
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 6;$/;"	v
MISO_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MISO_PIN = 6;$/;"	v
mkdir	./SD/SD.cpp	/^boolean SDClass::mkdir(char *filepath) {$/;"	f	class:SDClass
mkdir	./SD/SD.cpp	/^boolean SDClass::mkdir(char *filepath) {$/;"	f	class:SDClass
MODE_ADJUST_MOTOR	./Robot_Control/ArduinoRobot.h	70;"	d
MODE_ADJUST_MOTOR	./Robot_Control/ArduinoRobot.h	70;"	d
MODE_ADJUST_MOTOR	./Robot_Motor/ArduinoRobotMotorBoard.h	42;"	d
MODE_ADJUST_MOTOR	./Robot_Motor/ArduinoRobotMotorBoard.h	42;"	d
MODE_IR_CONTROL	./Robot_Control/ArduinoRobot.h	71;"	d
MODE_IR_CONTROL	./Robot_Control/ArduinoRobot.h	71;"	d
MODE_IR_CONTROL	./Robot_Motor/ArduinoRobotMotorBoard.h	43;"	d
MODE_IR_CONTROL	./Robot_Motor/ArduinoRobotMotorBoard.h	43;"	d
MODE_LINE_FOLLOW	./Robot_Control/ArduinoRobot.h	69;"	d
MODE_LINE_FOLLOW	./Robot_Control/ArduinoRobot.h	69;"	d
MODE_LINE_FOLLOW	./Robot_Motor/ArduinoRobotMotorBoard.h	41;"	d
MODE_LINE_FOLLOW	./Robot_Motor/ArduinoRobotMotorBoard.h	41;"	d
modemAccess	./GSM/GSM3ShieldV1ModemVerification.h	/^		GSM3ShieldV1DirectModemProvider modemAccess;$/;"	m	class:GSM3ShieldV1ModemVerification
modemAccess	./GSM/GSM3ShieldV1ModemVerification.h	/^		GSM3ShieldV1DirectModemProvider modemAccess;$/;"	m	class:GSM3ShieldV1ModemVerification
modemAccess	./GSM/GSM3ShieldV1PinManagement.h	/^		GSM3ShieldV1DirectModemProvider modemAccess; $/;"	m	class:GSM3ShieldV1PinManagement
modemAccess	./GSM/GSM3ShieldV1PinManagement.h	/^		GSM3ShieldV1DirectModemProvider modemAccess; $/;"	m	class:GSM3ShieldV1PinManagement
MODEMCONFIG	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
MODEMCONFIG	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
ModemConfigurationContinue	./GSM/GSM3ShieldV1AccessProvider.cpp	/^void GSM3ShieldV1AccessProvider::ModemConfigurationContinue()$/;"	f	class:GSM3ShieldV1AccessProvider
ModemConfigurationContinue	./GSM/GSM3ShieldV1AccessProvider.cpp	/^void GSM3ShieldV1AccessProvider::ModemConfigurationContinue()$/;"	f	class:GSM3ShieldV1AccessProvider
ModemConfiguration	./GSM/GSM3ShieldV1AccessProvider.cpp	/^int GSM3ShieldV1AccessProvider::ModemConfiguration(char* pin)$/;"	f	class:GSM3ShieldV1AccessProvider
ModemConfiguration	./GSM/GSM3ShieldV1AccessProvider.cpp	/^int GSM3ShieldV1AccessProvider::ModemConfiguration(char* pin)$/;"	f	class:GSM3ShieldV1AccessProvider
modem	./GSM/GSM3ShieldV1BandManagement.h	/^		GSM3ShieldV1DirectModemProvider modem; \/\/ Direct access to modem$/;"	m	class:GSM3ShieldV1BandManagement
modem	./GSM/GSM3ShieldV1BandManagement.h	/^		GSM3ShieldV1DirectModemProvider modem; \/\/ Direct access to modem$/;"	m	class:GSM3ShieldV1BandManagement
modem	./GSM/GSM3ShieldV1ScanNetworks.h	/^		GSM3ShieldV1DirectModemProvider modem;$/;"	m	class:GSM3ShieldV1ScanNetworks
modem	./GSM/GSM3ShieldV1ScanNetworks.h	/^		GSM3ShieldV1DirectModemProvider modem;$/;"	m	class:GSM3ShieldV1ScanNetworks
mode	./Robot_Control/Squawk.cpp	/^  uint8_t mode;$/;"	m	struct:__anon16	file:
mode	./Robot_Control/Squawk.cpp	/^  uint8_t mode;$/;"	m	struct:__anon16	file:
mode	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		uint8_t mode;$/;"	m	class:RobotMotorBoard
mode	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		uint8_t mode;$/;"	m	class:RobotMotorBoard
MODE_SIMPLE	./Robot_Control/ArduinoRobot.h	68;"	d
MODE_SIMPLE	./Robot_Control/ArduinoRobot.h	68;"	d
MODE_SIMPLE	./Robot_Motor/ArduinoRobotMotorBoard.h	40;"	d
MODE_SIMPLE	./Robot_Motor/ArduinoRobotMotorBoard.h	40;"	d
module_status	./GSM_Shield/GSM_Shield.h	/^    byte module_status;$/;"	m	class:GSM
module_status	./GSM_Shield/GSM_Shield.h	/^    byte module_status;$/;"	m	class:GSM
month	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSDate::month()$/;"	f	class:TinyGPSDate
month	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSDate::month()$/;"	f	class:TinyGPSDate
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 11;$/;"	v
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 11;$/;"	v
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 16;$/;"	v
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 16;$/;"	v
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 22;$/;"	v
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 22;$/;"	v
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 51;$/;"	v
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 51;$/;"	v
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 5;$/;"	v
MOSI_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const MOSI_PIN = 5;$/;"	v
MOTOR12_156KHZ	./AFMotor/AFMotor.h	69;"	d
MOTOR12_156KHZ	./AFMotor/AFMotor.h	69;"	d
MOTOR12_19KHZ	./AFMotor/AFMotor.h	72;"	d
MOTOR12_19KHZ	./AFMotor/AFMotor.h	72;"	d
MOTOR12_1KHZ	./AFMotor/AFMotor.h	46;"	d
MOTOR12_1KHZ	./AFMotor/AFMotor.h	46;"	d
MOTOR12_1KHZ	./AFMotor/AFMotor.h	76;"	d
MOTOR12_1KHZ	./AFMotor/AFMotor.h	76;"	d
MOTOR12_2KHZ	./AFMotor/AFMotor.h	45;"	d
MOTOR12_2KHZ	./AFMotor/AFMotor.h	45;"	d
MOTOR12_2KHZ	./AFMotor/AFMotor.h	75;"	d
MOTOR12_2KHZ	./AFMotor/AFMotor.h	75;"	d
MOTOR12_312KHZ	./AFMotor/AFMotor.h	68;"	d
MOTOR12_312KHZ	./AFMotor/AFMotor.h	68;"	d
MOTOR12_39KHZ	./AFMotor/AFMotor.h	71;"	d
MOTOR12_39KHZ	./AFMotor/AFMotor.h	71;"	d
MOTOR12_4_8KHZ	./AFMotor/AFMotor.h	74;"	d
MOTOR12_4_8KHZ	./AFMotor/AFMotor.h	74;"	d
MOTOR12_64KHZ	./AFMotor/AFMotor.h	43;"	d
MOTOR12_64KHZ	./AFMotor/AFMotor.h	43;"	d
MOTOR12_64KHZ	./AFMotor/AFMotor.h	70;"	d
MOTOR12_64KHZ	./AFMotor/AFMotor.h	70;"	d
MOTOR12_8KHZ	./AFMotor/AFMotor.h	44;"	d
MOTOR12_8KHZ	./AFMotor/AFMotor.h	44;"	d
MOTOR12_8KHZ	./AFMotor/AFMotor.h	73;"	d
MOTOR12_8KHZ	./AFMotor/AFMotor.h	73;"	d
MOTOR1_A	./AFMotor/AFMotor.h	98;"	d
MOTOR1_A	./AFMotor/AFMotor.h	98;"	d
MOTOR1_B	./AFMotor/AFMotor.h	99;"	d
MOTOR1_B	./AFMotor/AFMotor.h	99;"	d
MOTOR2_A	./AFMotor/AFMotor.h	100;"	d
MOTOR2_A	./AFMotor/AFMotor.h	100;"	d
MOTOR2_B	./AFMotor/AFMotor.h	101;"	d
MOTOR2_B	./AFMotor/AFMotor.h	101;"	d
MOTOR34_156KHZ	./AFMotor/AFMotor.h	79;"	d
MOTOR34_156KHZ	./AFMotor/AFMotor.h	79;"	d
MOTOR34_19KHZ	./AFMotor/AFMotor.h	82;"	d
MOTOR34_19KHZ	./AFMotor/AFMotor.h	82;"	d
MOTOR34_1KHZ	./AFMotor/AFMotor.h	50;"	d
MOTOR34_1KHZ	./AFMotor/AFMotor.h	50;"	d
MOTOR34_1KHZ	./AFMotor/AFMotor.h	86;"	d
MOTOR34_1KHZ	./AFMotor/AFMotor.h	86;"	d
MOTOR34_2KHZ	./AFMotor/AFMotor.h	85;"	d
MOTOR34_2KHZ	./AFMotor/AFMotor.h	85;"	d
MOTOR34_312KHZ	./AFMotor/AFMotor.h	78;"	d
MOTOR34_312KHZ	./AFMotor/AFMotor.h	78;"	d
MOTOR34_39KHZ	./AFMotor/AFMotor.h	81;"	d
MOTOR34_39KHZ	./AFMotor/AFMotor.h	81;"	d
MOTOR34_4_8KHZ	./AFMotor/AFMotor.h	84;"	d
MOTOR34_4_8KHZ	./AFMotor/AFMotor.h	84;"	d
MOTOR34_64KHZ	./AFMotor/AFMotor.h	48;"	d
MOTOR34_64KHZ	./AFMotor/AFMotor.h	48;"	d
MOTOR34_64KHZ	./AFMotor/AFMotor.h	80;"	d
MOTOR34_64KHZ	./AFMotor/AFMotor.h	80;"	d
MOTOR34_8KHZ	./AFMotor/AFMotor.h	49;"	d
MOTOR34_8KHZ	./AFMotor/AFMotor.h	49;"	d
MOTOR34_8KHZ	./AFMotor/AFMotor.h	83;"	d
MOTOR34_8KHZ	./AFMotor/AFMotor.h	83;"	d
MOTOR3_A	./AFMotor/AFMotor.h	104;"	d
MOTOR3_A	./AFMotor/AFMotor.h	104;"	d
MOTOR3_B	./AFMotor/AFMotor.h	105;"	d
MOTOR3_B	./AFMotor/AFMotor.h	105;"	d
MOTOR4_A	./AFMotor/AFMotor.h	102;"	d
MOTOR4_A	./AFMotor/AFMotor.h	102;"	d
MOTOR4_B	./AFMotor/AFMotor.h	103;"	d
MOTOR4_B	./AFMotor/AFMotor.h	103;"	d
motorAdjustment	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		float motorAdjustment;\/\/-1.0 ~ 1.0, whether left is lowered or right is lowered$/;"	m	class:RobotMotorBoard
motorAdjustment	./Robot_Motor/ArduinoRobotMotorBoard.h	/^		float motorAdjustment;\/\/-1.0 ~ 1.0, whether left is lowered or right is lowered$/;"	m	class:RobotMotorBoard
motorBoardData	./Robot_Control/ArduinoRobot.h	/^		MOTOR_BOARD_DATA motorBoardData;$/;"	m	class:RobotControl
motorBoardData	./Robot_Control/ArduinoRobot.h	/^		MOTOR_BOARD_DATA motorBoardData;$/;"	m	class:RobotControl
MOTOR_BOARD_DATA	./Robot_Control/ArduinoRobot.h	/^struct MOTOR_BOARD_DATA{$/;"	s
MOTOR_BOARD_DATA	./Robot_Control/ArduinoRobot.h	/^struct MOTOR_BOARD_DATA{$/;"	s
MOTORCLK	./AFMotor/AFMotor.h	139;"	d
MOTORCLK	./AFMotor/AFMotor.h	139;"	d
MOTORDATA	./AFMotor/AFMotor.h	141;"	d
MOTORDATA	./AFMotor/AFMotor.h	141;"	d
MOTORENABLE	./AFMotor/AFMotor.h	140;"	d
MOTORENABLE	./AFMotor/AFMotor.h	140;"	d
MOTORLATCH	./AFMotor/AFMotor.h	138;"	d
MOTORLATCH	./AFMotor/AFMotor.h	138;"	d
motornum	./AFMotor/AFMotor.h	/^  uint8_t motornum, pwmfreq;$/;"	m	class:AF_DCMotor
motornum	./AFMotor/AFMotor.h	/^  uint8_t motornum, pwmfreq;$/;"	m	class:AF_DCMotor
motor_pin_1	./Stepper/Stepper.h	/^    int motor_pin_1;$/;"	m	class:Stepper
motor_pin_1	./Stepper/Stepper.h	/^    int motor_pin_1;$/;"	m	class:Stepper
motor_pin_2	./Stepper/Stepper.h	/^    int motor_pin_2;$/;"	m	class:Stepper
motor_pin_2	./Stepper/Stepper.h	/^    int motor_pin_2;$/;"	m	class:Stepper
motor_pin_3	./Stepper/Stepper.h	/^    int motor_pin_3;$/;"	m	class:Stepper
motor_pin_3	./Stepper/Stepper.h	/^    int motor_pin_3;$/;"	m	class:Stepper
motor_pin_4	./Stepper/Stepper.h	/^    int motor_pin_4;$/;"	m	class:Stepper
motor_pin_4	./Stepper/Stepper.h	/^    int motor_pin_4;$/;"	m	class:Stepper
motorsStop	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::motorsStop(){$/;"	f	class:RobotMotorBoard
motorsStop	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::motorsStop(){$/;"	f	class:RobotMotorBoard
motorsWritePct	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::motorsWritePct(int speedLpct, int speedRpct){$/;"	f	class:RobotMotorBoard
motorsWritePct	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::motorsWritePct(int speedLpct, int speedRpct){$/;"	f	class:RobotMotorBoard
motorsWrite	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::motorsWrite(int speedL, int speedR){$/;"	f	class:RobotMotorBoard
motorsWrite	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::motorsWrite(int speedL, int speedR){$/;"	f	class:RobotMotorBoard
mph	./TinyGPSPlus/TinyGPS++.h	/^   double mph()      { return _GPS_MPH_PER_KNOT * value() \/ 100.0; }$/;"	f	struct:TinyGPSSpeed
mph	./TinyGPSPlus/TinyGPS++.h	/^   double mph()      { return _GPS_MPH_PER_KNOT * value() \/ 100.0; }$/;"	f	struct:TinyGPSSpeed
mps	./TinyGPSPlus/TinyGPS++.h	/^   double mps()      { return _GPS_MPS_PER_KNOT * value() \/ 100.0; }$/;"	f	struct:TinyGPSSpeed
mps	./TinyGPSPlus/TinyGPS++.h	/^   double mps()      { return _GPS_MPS_PER_KNOT * value() \/ 100.0; }$/;"	f	struct:TinyGPSSpeed
msgExample	./GSM/GSM3MobileMockupProvider.h	/^		char* msgExample;$/;"	m	class:GSM3MobileMockupProvider
msgExample	./GSM/GSM3MobileMockupProvider.h	/^		char* msgExample;$/;"	m	class:GSM3MobileMockupProvider
msgIndex	./GSM/GSM3MobileMockupProvider.h	/^		int msgIndex;$/;"	m	class:GSM3MobileMockupProvider
msgIndex	./GSM/GSM3MobileMockupProvider.h	/^		int msgIndex;$/;"	m	class:GSM3MobileMockupProvider
multiByteChannel	./Firmata/Firmata.h	/^    byte multiByteChannel; \/\/ channel data for multiByteCommands$/;"	m	class:FirmataClass
multiByteChannel	./Firmata/Firmata.h	/^    byte multiByteChannel; \/\/ channel data for multiByteCommands$/;"	m	class:FirmataClass
MULTI	./Ethernet/utility/w5100.h	/^  static const uint8_t MULTI  = 0x80;$/;"	m	class:SnMR
MULTI	./Ethernet/utility/w5100.h	/^  static const uint8_t MULTI  = 0x80;$/;"	m	class:SnMR
Multiplexer_h	./Robot_Control/Multiplexer.h	2;"	d
Multiplexer_h	./Robot_Control/Multiplexer.h	2;"	d
Multiplexer_h	./Robot_Motor/Multiplexer.h	2;"	d
Multiplexer_h	./Robot_Motor/Multiplexer.h	2;"	d
Multiplexer	./Robot_Control/Multiplexer.h	/^class Multiplexer{$/;"	c
Multiplexer	./Robot_Control/Multiplexer.h	/^class Multiplexer{$/;"	c
Multiplexer	./Robot_Motor/Multiplexer.h	/^class Multiplexer{$/;"	c
Multiplexer	./Robot_Motor/Multiplexer.h	/^class Multiplexer{$/;"	c
MUX_ADDR_PINS	./Esplora/Esplora.cpp	/^const byte MUX_ADDR_PINS[] = { A0, A1, A2, A3 };$/;"	v
MUX_ADDR_PINS	./Esplora/Esplora.cpp	/^const byte MUX_ADDR_PINS[] = { A0, A1, A2, A3 };$/;"	v
MUX_COM_PIN	./Esplora/Esplora.cpp	/^const byte MUX_COM_PIN = A4;$/;"	v
MUX_COM_PIN	./Esplora/Esplora.cpp	/^const byte MUX_COM_PIN = A4;$/;"	v
mvInput	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::mvInput(int dire){$/;"	f	class:TextManager
mvInput	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::mvInput(int dire){$/;"	f	class:TextManager
mySocket	./GSM/GSM3MobileClientService.h	/^		uint8_t mySocket;$/;"	m	class:GSM3MobileClientService
mySocket	./GSM/GSM3MobileClientService.h	/^		uint8_t mySocket;$/;"	m	class:GSM3MobileClientService
mySocket	./GSM/GSM3MobileServerService.h	/^		uint8_t mySocket; \/\/ Actual socket$/;"	m	class:GSM3MobileServerService
mySocket	./GSM/GSM3MobileServerService.h	/^		uint8_t mySocket; \/\/ Actual socket$/;"	m	class:GSM3MobileServerService
name	./Robot_Control/ArduinoRobot.h	/^	char name[8];$/;"	m	struct:EEPROM_BMP
name	./Robot_Control/ArduinoRobot.h	/^	char name[8];$/;"	m	struct:EEPROM_BMP
name	./Robot_Control/FatStructs.h	/^  uint8_t  name[11];$/;"	m	struct:directoryEntry
name	./Robot_Control/FatStructs.h	/^  uint8_t  name[11];$/;"	m	struct:directoryEntry
name	./SD/File.cpp	/^char *File::name(void) {$/;"	f	class:File
name	./SD/File.cpp	/^char *File::name(void) {$/;"	f	class:File
_name	./SD/SD.h	/^  char _name[13]; \/\/ our name$/;"	m	class:File
_name	./SD/SD.h	/^  char _name[13]; \/\/ our name$/;"	m	class:File
name	./SD/utility/FatStructs.h	/^  uint8_t  name[11];$/;"	m	struct:directoryEntry
name	./SD/utility/FatStructs.h	/^  uint8_t  name[11];$/;"	m	struct:directoryEntry
NA_STATE	./WiFi/utility/wl_definitions.h	26;"	d
NA_STATE	./WiFi/utility/wl_definitions.h	26;"	d
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon20
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon20
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;                  $/;"	e	enum:__anon23
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;                  $/;"	e	enum:__anon23
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon21
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon21
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon22
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon22
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
_Nbr_16timers	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
nbr	./Servo/Servo.h	/^  uint8_t nbr        :6 ;             \/\/ a pin number from 0 to 63$/;"	m	struct:__anon24
nbr	./Servo/Servo.h	/^  uint8_t nbr        :6 ;             \/\/ a pin number from 0 to 63$/;"	m	struct:__anon24
__NCLIENTS_MAX__	./GSM/GSM3ShieldV1.cpp	46;"	d	file:
__NCLIENTS_MAX__	./GSM/GSM3ShieldV1.cpp	46;"	d	file:
__NCLIENTS_MAX__	./GSM/GSM3ShieldV1MultiServerProvider.cpp	5;"	d	file:
__NCLIENTS_MAX__	./GSM/GSM3ShieldV1MultiServerProvider.cpp	5;"	d	file:
ND	./Ethernet/utility/w5100.h	/^  static const uint8_t ND     = 0x20;$/;"	m	class:SnMR
ND	./Ethernet/utility/w5100.h	/^  static const uint8_t ND     = 0x20;$/;"	m	class:SnMR
ND	./Ethernet/utility/w5100.h	/^  static const uint8_t ND   = 77;$/;"	m	class:IPPROTO
ND	./Ethernet/utility/w5100.h	/^  static const uint8_t ND   = 77;$/;"	m	class:IPPROTO
negative	./TinyGPSPlus/TinyGPS++.h	/^   bool negative;$/;"	m	struct:RawDegrees
negative	./TinyGPSPlus/TinyGPS++.h	/^   bool negative;$/;"	m	struct:RawDegrees
networkAttach	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		GSM3_NetworkStatus_t networkAttach(char* networkId, char* user, char* pass)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
networkAttach	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		GSM3_NetworkStatus_t networkAttach(char* networkId, char* user, char* pass)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
networkCode	./GSM/GSM3ShieldV1CellManagement.h	/^		char *networkCode;$/;"	m	class:GSM3ShieldV1CellManagement
networkCode	./GSM/GSM3ShieldV1CellManagement.h	/^		char *networkCode;$/;"	m	class:GSM3ShieldV1CellManagement
networkDetach	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		GSM3_NetworkStatus_t networkDetach(){ return detachGPRS();};$/;"	f	class:GSM3ShieldV1DataNetworkProvider
networkDetach	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		GSM3_NetworkStatus_t networkDetach(){ return detachGPRS();};$/;"	f	class:GSM3ShieldV1DataNetworkProvider
_networkEncr	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_networkEncr[WL_NETWORKS_LIST_MAXNUM] = { 0 };$/;"	m	class:WiFiDrv	file:
_networkEncr	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_networkEncr[WL_NETWORKS_LIST_MAXNUM] = { 0 };$/;"	m	class:WiFiDrv	file:
_networkEncr	./WiFi/utility/wifi_drv.h	/^	static uint8_t 	_networkEncr[WL_NETWORKS_LIST_MAXNUM];$/;"	m	class:WiFiDrv
_networkEncr	./WiFi/utility/wifi_drv.h	/^	static uint8_t 	_networkEncr[WL_NETWORKS_LIST_MAXNUM];$/;"	m	class:WiFiDrv
_networkRssi	./WiFi/utility/wifi_drv.cpp	/^int32_t WiFiDrv::_networkRssi[WL_NETWORKS_LIST_MAXNUM] = { 0 };$/;"	m	class:WiFiDrv	file:
_networkRssi	./WiFi/utility/wifi_drv.cpp	/^int32_t WiFiDrv::_networkRssi[WL_NETWORKS_LIST_MAXNUM] = { 0 };$/;"	m	class:WiFiDrv	file:
_networkRssi	./WiFi/utility/wifi_drv.h	/^	static int32_t 	_networkRssi[WL_NETWORKS_LIST_MAXNUM];$/;"	m	class:WiFiDrv
_networkRssi	./WiFi/utility/wifi_drv.h	/^	static int32_t 	_networkRssi[WL_NETWORKS_LIST_MAXNUM];$/;"	m	class:WiFiDrv
_networkSsid	./WiFi/utility/wifi_drv.cpp	/^char 	WiFiDrv::_networkSsid[][WL_SSID_MAX_LENGTH] = {{"1"},{"2"},{"3"},{"4"},{"5"}};$/;"	m	class:WiFiDrv	file:
_networkSsid	./WiFi/utility/wifi_drv.cpp	/^char 	WiFiDrv::_networkSsid[][WL_SSID_MAX_LENGTH] = {{"1"},{"2"},{"3"},{"4"},{"5"}};$/;"	m	class:WiFiDrv	file:
_networkSsid	./WiFi/utility/wifi_drv.h	/^	static char 	_networkSsid[WL_NETWORKS_LIST_MAXNUM][WL_SSID_MAX_LENGTH];$/;"	m	class:WiFiDrv
_networkSsid	./WiFi/utility/wifi_drv.h	/^	static char 	_networkSsid[WL_NETWORKS_LIST_MAXNUM][WL_SSID_MAX_LENGTH];$/;"	m	class:WiFiDrv
_new_altitude	./TinyGPS/TinyGPS.h	/^  long _altitude, _new_altitude;$/;"	m	class:TinyGPS
_new_altitude	./TinyGPS/TinyGPS.h	/^  long _altitude, _new_altitude;$/;"	m	class:TinyGPS
newColor	./Robot_Control/Adafruit_GFX.cpp	/^uint16_t Adafruit_GFX::newColor(uint8_t r, uint8_t g, uint8_t b) {$/;"	f	class:Adafruit_GFX
newColor	./Robot_Control/Adafruit_GFX.cpp	/^uint16_t Adafruit_GFX::newColor(uint8_t r, uint8_t g, uint8_t b) {$/;"	f	class:Adafruit_GFX
newColor	./TFT/utility/Adafruit_GFX.cpp	/^uint16_t Adafruit_GFX::newColor(uint8_t r, uint8_t g, uint8_t b) {$/;"	f	class:Adafruit_GFX
newColor	./TFT/utility/Adafruit_GFX.cpp	/^uint16_t Adafruit_GFX::newColor(uint8_t r, uint8_t g, uint8_t b) {$/;"	f	class:Adafruit_GFX
_new_course	./TinyGPS/TinyGPS.h	/^  unsigned long  _course, _new_course;$/;"	m	class:TinyGPS
_new_course	./TinyGPS/TinyGPS.h	/^  unsigned long  _course, _new_course;$/;"	m	class:TinyGPS
newDate	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t date, newDate;$/;"	m	struct:TinyGPSDate
newDate	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t date, newDate;$/;"	m	struct:TinyGPSDate
_new_date	./TinyGPS/TinyGPS.h	/^  unsigned long _date, _new_date;$/;"	m	class:TinyGPS
_new_date	./TinyGPS/TinyGPS.h	/^  unsigned long _date, _new_date;$/;"	m	class:TinyGPS
_new_hdop	./TinyGPS/TinyGPS.h	/^  unsigned long  _hdop, _new_hdop;$/;"	m	class:TinyGPS
_new_hdop	./TinyGPS/TinyGPS.h	/^  unsigned long  _hdop, _new_hdop;$/;"	m	class:TinyGPS
_new_latitude	./TinyGPS/TinyGPS.h	/^  long _latitude, _new_latitude;$/;"	m	class:TinyGPS
_new_latitude	./TinyGPS/TinyGPS.h	/^  long _latitude, _new_latitude;$/;"	m	class:TinyGPS
_new_longitude	./TinyGPS/TinyGPS.h	/^  long _longitude, _new_longitude;$/;"	m	class:TinyGPS
_new_longitude	./TinyGPS/TinyGPS.h	/^  long _longitude, _new_longitude;$/;"	m	class:TinyGPS
_new_numsats	./TinyGPS/TinyGPS.h	/^  unsigned short _numsats, _new_numsats;$/;"	m	class:TinyGPS
_new_numsats	./TinyGPS/TinyGPS.h	/^  unsigned short _numsats, _new_numsats;$/;"	m	class:TinyGPS
_new_position_fix	./TinyGPS/TinyGPS.h	/^  unsigned long _last_position_fix, _new_position_fix;$/;"	m	class:TinyGPS
_new_position_fix	./TinyGPS/TinyGPS.h	/^  unsigned long _last_position_fix, _new_position_fix;$/;"	m	class:TinyGPS
_new_speed	./TinyGPS/TinyGPS.h	/^  unsigned long  _speed, _new_speed;$/;"	m	class:TinyGPS
_new_speed	./TinyGPS/TinyGPS.h	/^  unsigned long  _speed, _new_speed;$/;"	m	class:TinyGPS
_new_time_fix	./TinyGPS/TinyGPS.h	/^  unsigned long _last_time_fix, _new_time_fix;$/;"	m	class:TinyGPS
_new_time_fix	./TinyGPS/TinyGPS.h	/^  unsigned long _last_time_fix, _new_time_fix;$/;"	m	class:TinyGPS
newTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t time, newTime;$/;"	m	struct:TinyGPSTime
newTime	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t time, newTime;$/;"	m	struct:TinyGPSTime
_new_time	./TinyGPS/TinyGPS.h	/^  unsigned long _time, _new_time;$/;"	m	class:TinyGPS
_new_time	./TinyGPS/TinyGPS.h	/^  unsigned long _time, _new_time;$/;"	m	class:TinyGPS
newval	./TinyGPSPlus/TinyGPS++.h	/^   int32_t val, newval;$/;"	m	struct:TinyGPSDecimal
newval	./TinyGPSPlus/TinyGPS++.h	/^   int32_t val, newval;$/;"	m	struct:TinyGPSDecimal
newval	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t val, newval;$/;"	m	struct:TinyGPSInteger
newval	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t val, newval;$/;"	m	struct:TinyGPSInteger
next	./SoftwareServo/SoftwareServo.h	/^    class SoftwareServo *next;$/;"	m	class:SoftwareServo	typeref:class:SoftwareServo::SoftwareServo
next	./SoftwareServo/SoftwareServo.h	/^    class SoftwareServo *next;$/;"	m	class:SoftwareServo	typeref:class:SoftwareServo::SoftwareServo
nextString	./GSM/GSM3CircularBuffer.cpp	/^char* GSM3CircularBuffer::nextString()$/;"	f	class:GSM3CircularBuffer
nextString	./GSM/GSM3CircularBuffer.cpp	/^char* GSM3CircularBuffer::nextString()$/;"	f	class:GSM3CircularBuffer
next	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSCustom *next;$/;"	m	class:TinyGPSCustom
next	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSCustom *next;$/;"	m	class:TinyGPSCustom
NIVEL_PARA_LINEA	./Robot_Motor/lineFollow.cpp	19;"	d	file:
NIVEL_PARA_LINEA	./Robot_Motor/lineFollow.cpp	19;"	d	file:
NO_ANGLE	./SoftwareServo/SoftwareServo.cpp	5;"	d	file:
NO_ANGLE	./SoftwareServo/SoftwareServo.cpp	5;"	d	file:
noAutoscroll	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::noAutoscroll(void) {$/;"	f	class:LiquidCrystal
noAutoscroll	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::noAutoscroll(void) {$/;"	f	class:LiquidCrystal
noBlink	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::noBlink() {$/;"	f	class:LiquidCrystal
noBlink	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::noBlink() {$/;"	f	class:LiquidCrystal
noCursor	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::noCursor() {$/;"	f	class:LiquidCrystal
noCursor	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::noCursor() {$/;"	f	class:LiquidCrystal
noDisplay	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::noDisplay() {$/;"	f	class:LiquidCrystal
noDisplay	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::noDisplay() {$/;"	f	class:LiquidCrystal
noFill	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::noFill() {$/;"	f	class:Adafruit_GFX
noFill	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::noFill() {$/;"	f	class:Adafruit_GFX
noFill	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::noFill() {$/;"	f	class:Adafruit_GFX
noFill	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::noFill() {$/;"	f	class:Adafruit_GFX
NOINLINE	./Robot_Control/Fat16util.h	37;"	d
NOINLINE	./Robot_Control/Fat16util.h	37;"	d
NOINLINE	./SD/utility/SdFatUtil.h	33;"	d
NOINLINE	./SD/utility/SdFatUtil.h	33;"	d
NO_LAST_PARAM	./WiFi/utility/spi_drv.h	9;"	d
NO_LAST_PARAM	./WiFi/utility/spi_drv.h	9;"	d
NONE	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
NONE	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
nop	./SD/utility/Sd2Card.cpp	38;"	d	file:
nop	./SD/utility/Sd2Card.cpp	38;"	d	file:
NO_SOCKET_AVAIL	./WiFi/utility/wifi_spi.h	16;"	d
NO_SOCKET_AVAIL	./WiFi/utility/wifi_spi.h	16;"	d
noStroke	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::noStroke() {$/;"	f	class:Adafruit_GFX
noStroke	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::noStroke() {$/;"	f	class:Adafruit_GFX
noStroke	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::noStroke() {$/;"	f	class:Adafruit_GFX
noStroke	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::noStroke() {$/;"	f	class:Adafruit_GFX
noTone	./Esplora/Esplora.cpp	/^void _Esplora::noTone() {$/;"	f	class:_Esplora
noTone	./Esplora/Esplora.cpp	/^void _Esplora::noTone() {$/;"	f	class:_Esplora
nParam	./WiFi/utility/wifi_spi.h	/^	unsigned char	nParam;$/;"	m	struct:__anon7
nParam	./WiFi/utility/wifi_spi.h	/^	unsigned char	nParam;$/;"	m	struct:__anon7
nParam	./WiFi/utility/wifi_spi.h	/^	unsigned char	nParam;$/;"	m	struct:__anon8
nParam	./WiFi/utility/wifi_spi.h	/^	unsigned char	nParam;$/;"	m	struct:__anon8
nParam	./WiFi/utility/wifi_spi.h	/^	unsigned char	nParam;$/;"	m	struct:__anon9
nParam	./WiFi/utility/wifi_spi.h	/^	unsigned char	nParam;$/;"	m	struct:__anon9
nsac	./Robot_Control/SdInfo.h	/^  uint8_t nsac;$/;"	m	struct:CSD
nsac	./Robot_Control/SdInfo.h	/^  uint8_t nsac;$/;"	m	struct:CSD
nsac	./SD/utility/SdInfo.h	/^  uint8_t nsac;$/;"	m	struct:CSDV1
nsac	./SD/utility/SdInfo.h	/^  uint8_t nsac;$/;"	m	struct:CSDV1
nsac	./SD/utility/SdInfo.h	/^  uint8_t nsac;$/;"	m	struct:CSDV2
nsac	./SD/utility/SdInfo.h	/^  uint8_t nsac;$/;"	m	struct:CSDV2
ntohl	./Ethernet/util.h	11;"	d
ntohl	./Ethernet/util.h	11;"	d
ntohs	./Ethernet/util.h	5;"	d
ntohs	./Ethernet/util.h	5;"	d
NUMBER_BUTTONS	./Robot_Control/ArduinoRobot.h	26;"	d
NUMBER_BUTTONS	./Robot_Control/ArduinoRobot.h	26;"	d
NUMBEROFBANDS	./GSM/GSM3ShieldV1BandManagement.h	40;"	d
NUMBEROFBANDS	./GSM/GSM3ShieldV1BandManagement.h	40;"	d
number_of_steps	./Stepper/Stepper.h	/^    int number_of_steps;      \/\/ total number of steps this motor can take$/;"	m	class:Stepper
number_of_steps	./Stepper/Stepper.h	/^    int number_of_steps;      \/\/ total number of steps this motor can take$/;"	m	class:Stepper
NUM_EEPROM_BMP	./Robot_Control/ArduinoRobot.h	160;"	d
NUM_EEPROM_BMP	./Robot_Control/ArduinoRobot.h	160;"	d
_numlines	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _numlines,_currline;$/;"	m	class:LiquidCrystal
_numlines	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _numlines,_currline;$/;"	m	class:LiquidCrystal
numParams	./WiFi/utility/wifi_spi.h	/^enum numParams{$/;"	g
numParams	./WiFi/utility/wifi_spi.h	/^enum numParams{$/;"	g
_numsats	./TinyGPS/TinyGPS.h	/^  unsigned short _numsats, _new_numsats;$/;"	m	class:TinyGPS
_numsats	./TinyGPS/TinyGPS.h	/^  unsigned short _numsats, _new_numsats;$/;"	m	class:TinyGPS
O_ACCMODE	./Robot_Control/Fat16.h	/^uint8_t const O_ACCMODE = O_READ | O_WRITE;$/;"	v
O_ACCMODE	./Robot_Control/Fat16.h	/^uint8_t const O_ACCMODE = O_READ | O_WRITE;$/;"	v
O_ACCMODE	./SD/utility/SdFat.h	/^uint8_t const O_ACCMODE = (O_READ | O_WRITE);$/;"	v
O_ACCMODE	./SD/utility/SdFat.h	/^uint8_t const O_ACCMODE = (O_READ | O_WRITE);$/;"	v
O_APPEND	./Robot_Control/Fat16.h	/^uint8_t const O_APPEND  = 0X04;$/;"	v
O_APPEND	./Robot_Control/Fat16.h	/^uint8_t const O_APPEND  = 0X04;$/;"	v
O_APPEND	./SD/utility/SdFat.h	/^uint8_t const O_APPEND = 0X04;$/;"	v
O_APPEND	./SD/utility/SdFat.h	/^uint8_t const O_APPEND = 0X04;$/;"	v
O_CREAT	./Robot_Control/Fat16.h	/^uint8_t const O_CREAT   = 0X10;$/;"	v
O_CREAT	./Robot_Control/Fat16.h	/^uint8_t const O_CREAT   = 0X10;$/;"	v
O_CREAT	./SD/utility/SdFat.h	/^uint8_t const O_CREAT = 0X10;$/;"	v
O_CREAT	./SD/utility/SdFat.h	/^uint8_t const O_CREAT = 0X10;$/;"	v
oemName	./Robot_Control/FatStructs.h	/^  char     oemName[8];$/;"	m	struct:fat32BootSector
oemName	./Robot_Control/FatStructs.h	/^  char     oemName[8];$/;"	m	struct:fat32BootSector
oemName	./SD/utility/FatStructs.h	/^  char     oemName[8];$/;"	m	struct:fat32BootSector
oemName	./SD/utility/FatStructs.h	/^  char     oemName[8];$/;"	m	struct:fat32BootSector
O_EXCL	./Robot_Control/Fat16.h	/^uint8_t const O_EXCL    = 0X20;$/;"	v
O_EXCL	./Robot_Control/Fat16.h	/^uint8_t const O_EXCL    = 0X20;$/;"	v
O_EXCL	./SD/utility/SdFat.h	/^uint8_t const O_EXCL = 0X20;$/;"	v
O_EXCL	./SD/utility/SdFat.h	/^uint8_t const O_EXCL = 0X20;$/;"	v
_offset	./Ethernet/EthernetUdp.h	/^  uint16_t _offset; \/\/ offset into the packet being sent$/;"	m	class:EthernetUDP
_offset	./Ethernet/EthernetUdp.h	/^  uint16_t _offset; \/\/ offset into the packet being sent$/;"	m	class:EthernetUDP
offset	./Robot_Control/Squawk.cpp	/^  uint8_t offset;$/;"	m	struct:__anon16	file:
offset	./Robot_Control/Squawk.cpp	/^  uint8_t offset;$/;"	m	struct:__anon16	file:
offset_	./SD/utility/Sd2Card.h	/^  uint16_t offset_;$/;"	m	class:Sd2Card
offset_	./SD/utility/Sd2Card.h	/^  uint16_t offset_;$/;"	m	class:Sd2Card
oid	./Robot_Control/SdInfo.h	/^  char oid[2];  \/\/ OEM\/Application ID$/;"	m	struct:CID
oid	./Robot_Control/SdInfo.h	/^  char oid[2];  \/\/ OEM\/Application ID$/;"	m	struct:CID
oid	./SD/utility/SdInfo.h	/^  char oid[2];  \/\/ OEM\/Application ID$/;"	m	struct:CID
oid	./SD/utility/SdInfo.h	/^  char oid[2];  \/\/ OEM\/Application ID$/;"	m	struct:CID
__ok__	./GSM/GSM3ShieldV1ModemCore.cpp	/^char* __ok__="OK";$/;"	v
__ok__	./GSM/GSM3ShieldV1ModemCore.cpp	/^char* __ok__="OK";$/;"	v
oldDateTime_	./Robot_Control/Fat16.cpp	/^void (*Fat16::oldDateTime_)(uint16_t& date, uint16_t& time) = NULL;  \/\/ NOLINT$/;"	v
oldDateTime_	./Robot_Control/Fat16.cpp	/^void (*Fat16::oldDateTime_)(uint16_t& date, uint16_t& time) = NULL;  \/\/ NOLINT$/;"	v
oldDateTime_	./Robot_Control/Fat16.h	/^  static void (*oldDateTime_)(uint16_t& date, uint16_t& time);  \/\/ NOLINT$/;"	m	class:Fat16
oldDateTime_	./Robot_Control/Fat16.h	/^  static void (*oldDateTime_)(uint16_t& date, uint16_t& time);  \/\/ NOLINT$/;"	m	class:Fat16
oldDateTime_	./SD/utility/SdFat.h	/^  static void (*oldDateTime_)(uint16_t& date, uint16_t& time);  \/\/ NOLINT$/;"	m	class:SdFile
oldDateTime_	./SD/utility/SdFat.h	/^  static void (*oldDateTime_)(uint16_t& date, uint16_t& time);  \/\/ NOLINT$/;"	m	class:SdFile
oldDateTime_	./SD/utility/SdFile.cpp	/^void (*SdFile::oldDateTime_)(uint16_t& date, uint16_t& time) = NULL;  \/\/ NOLINT$/;"	v
oldDateTime_	./SD/utility/SdFile.cpp	/^void (*SdFile::oldDateTime_)(uint16_t& date, uint16_t& time) = NULL;  \/\/ NOLINT$/;"	v
oldToNew	./Robot_Control/Fat16.h	/^  static void oldToNew(uint16_t *date, uint16_t *time) {$/;"	f	class:Fat16
oldToNew	./Robot_Control/Fat16.h	/^  static void oldToNew(uint16_t *date, uint16_t *time) {$/;"	f	class:Fat16
oldToNew	./SD/utility/SdFat.h	/^  static void oldToNew(uint16_t* date, uint16_t* time) {$/;"	f	class:SdFile
oldToNew	./SD/utility/SdFat.h	/^  static void oldToNew(uint16_t* date, uint16_t* time) {$/;"	f	class:SdFile
onestep	./AFMotor/AFMotor.cpp	/^uint8_t AF_Stepper::onestep(uint8_t dir, uint8_t style) {$/;"	f	class:AF_Stepper
onestep	./AFMotor/AFMotor.cpp	/^uint8_t AF_Stepper::onestep(uint8_t dir, uint8_t style) {$/;"	f	class:AF_Stepper
ongoingCommand	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3_commandType_e ongoingCommand;$/;"	m	class:GSM3ShieldV1ModemCore
ongoingCommand	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3_commandType_e ongoingCommand;$/;"	m	class:GSM3ShieldV1ModemCore
onOff	./Robot_Control/utility/VirtualKeyboard.h	/^		bool onOff;$/;"	m	class:VirtualKeyboard
onOff	./Robot_Control/utility/VirtualKeyboard.h	/^		bool onOff;$/;"	m	class:VirtualKeyboard
onReceive	./Robot_Control/Wire.cpp	/^void TwoWire::onReceive( void (*function)(int) )$/;"	f	class:TwoWire
onReceive	./Robot_Control/Wire.cpp	/^void TwoWire::onReceive( void (*function)(int) )$/;"	f	class:TwoWire
onReceiveService	./Robot_Control/Wire.cpp	/^void TwoWire::onReceiveService(uint8_t* inBytes, int numBytes)$/;"	f	class:TwoWire
onReceiveService	./Robot_Control/Wire.cpp	/^void TwoWire::onReceiveService(uint8_t* inBytes, int numBytes)$/;"	f	class:TwoWire
onReceiveService	./Wire/Wire.cpp	/^void TwoWire::onReceiveService(uint8_t* inBytes, int numBytes)$/;"	f	class:TwoWire
onReceiveService	./Wire/Wire.cpp	/^void TwoWire::onReceiveService(uint8_t* inBytes, int numBytes)$/;"	f	class:TwoWire
onReceive	./Wire/Wire.cpp	/^void TwoWire::onReceive( void (*function)(int) )$/;"	f	class:TwoWire
onReceive	./Wire/Wire.cpp	/^void TwoWire::onReceive( void (*function)(int) )$/;"	f	class:TwoWire
onRequest	./Robot_Control/Wire.cpp	/^void TwoWire::onRequest( void (*function)(void) )$/;"	f	class:TwoWire
onRequest	./Robot_Control/Wire.cpp	/^void TwoWire::onRequest( void (*function)(void) )$/;"	f	class:TwoWire
onRequestService	./Robot_Control/Wire.cpp	/^void TwoWire::onRequestService(void)$/;"	f	class:TwoWire
onRequestService	./Robot_Control/Wire.cpp	/^void TwoWire::onRequestService(void)$/;"	f	class:TwoWire
onRequestService	./Wire/Wire.cpp	/^void TwoWire::onRequestService(void)$/;"	f	class:TwoWire
onRequestService	./Wire/Wire.cpp	/^void TwoWire::onRequestService(void)$/;"	f	class:TwoWire
onRequest	./Wire/Wire.cpp	/^void TwoWire::onRequest( void (*function)(void) )$/;"	f	class:TwoWire
onRequest	./Wire/Wire.cpp	/^void TwoWire::onRequest( void (*function)(void) )$/;"	f	class:TwoWire
OPCODE_INVERSE_QUERY	./Ethernet/Dns.cpp	24;"	d	file:
OPCODE_INVERSE_QUERY	./Ethernet/Dns.cpp	24;"	d	file:
OPCODE_MASK	./Ethernet/Dns.cpp	26;"	d	file:
OPCODE_MASK	./Ethernet/Dns.cpp	26;"	d	file:
OPCODE_STANDARD_QUERY	./Ethernet/Dns.cpp	23;"	d	file:
OPCODE_STANDARD_QUERY	./Ethernet/Dns.cpp	23;"	d	file:
OPCODE_STATUS_REQUEST	./Ethernet/Dns.cpp	25;"	d	file:
OPCODE_STATUS_REQUEST	./Ethernet/Dns.cpp	25;"	d	file:
openCachedEntry	./SD/utility/SdFile.cpp	/^uint8_t SdFile::openCachedEntry(uint8_t dirIndex, uint8_t oflag) {$/;"	f	class:SdFile
openCachedEntry	./SD/utility/SdFile.cpp	/^uint8_t SdFile::openCachedEntry(uint8_t dirIndex, uint8_t oflag) {$/;"	f	class:SdFile
openCommand	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::openCommand(GSM3ShieldV1BaseProvider* provider, GSM3_commandType_e c)$/;"	f	class:GSM3ShieldV1ModemCore
openCommand	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::openCommand(GSM3ShieldV1BaseProvider* provider, GSM3_commandType_e c)$/;"	f	class:GSM3ShieldV1ModemCore
openNextFile	./SD/SD.cpp	/^File File::openNextFile(uint8_t mode) {$/;"	f	class:File
openNextFile	./SD/SD.cpp	/^File File::openNextFile(uint8_t mode) {$/;"	f	class:File
open	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::open(const char* fileName, uint8_t oflag) {$/;"	f	class:Fat16
open	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::open(const char* fileName, uint8_t oflag) {$/;"	f	class:Fat16
open	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::open(uint16_t index, uint8_t oflag) {$/;"	f	class:Fat16
open	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::open(uint16_t index, uint8_t oflag) {$/;"	f	class:Fat16
openRoot	./SD/utility/SdFat.h	/^  uint8_t openRoot(SdVolume& vol) {return openRoot(&vol);}  \/\/ NOLINT$/;"	f	class:SdFile
openRoot	./SD/utility/SdFat.h	/^  uint8_t openRoot(SdVolume& vol) {return openRoot(&vol);}  \/\/ NOLINT$/;"	f	class:SdFile
openRoot	./SD/utility/SdFile.cpp	/^uint8_t SdFile::openRoot(SdVolume* vol) {$/;"	f	class:SdFile
openRoot	./SD/utility/SdFile.cpp	/^uint8_t SdFile::openRoot(SdVolume* vol) {$/;"	f	class:SdFile
open	./SD/SD.cpp	/^File SDClass::open(const char *filepath, uint8_t mode) {$/;"	f	class:SDClass
open	./SD/SD.cpp	/^File SDClass::open(const char *filepath, uint8_t mode) {$/;"	f	class:SDClass
open	./SD/utility/SdFat.h	/^  uint8_t open(SdFile& dirFile, const char* fileName) {  \/\/ NOLINT$/;"	f	class:SdFile
open	./SD/utility/SdFat.h	/^  uint8_t open(SdFile& dirFile, const char* fileName) {  \/\/ NOLINT$/;"	f	class:SdFile
open	./SD/utility/SdFat.h	/^  uint8_t open(SdFile& dirFile, \/\/ NOLINT$/;"	f	class:SdFile
open	./SD/utility/SdFat.h	/^  uint8_t open(SdFile& dirFile, \/\/ NOLINT$/;"	f	class:SdFile
open	./SD/utility/SdFat.h	/^  uint8_t open(SdFile& dirFile, uint16_t index, uint8_t oflag) {  \/\/ NOLINT$/;"	f	class:SdFile
open	./SD/utility/SdFat.h	/^  uint8_t open(SdFile& dirFile, uint16_t index, uint8_t oflag) {  \/\/ NOLINT$/;"	f	class:SdFile
open	./SD/utility/SdFile.cpp	/^uint8_t SdFile::open(SdFile* dirFile, const char* fileName, uint8_t oflag) {$/;"	f	class:SdFile
open	./SD/utility/SdFile.cpp	/^uint8_t SdFile::open(SdFile* dirFile, const char* fileName, uint8_t oflag) {$/;"	f	class:SdFile
open	./SD/utility/SdFile.cpp	/^uint8_t SdFile::open(SdFile* dirFile, uint16_t index, uint8_t oflag) {$/;"	f	class:SdFile
open	./SD/utility/SdFile.cpp	/^uint8_t SdFile::open(SdFile* dirFile, uint16_t index, uint8_t oflag) {$/;"	f	class:SdFile
operator bool	./Ethernet/EthernetClient.cpp	/^EthernetClient::operator bool() {$/;"	f	class:EthernetClient
operator bool	./Ethernet/EthernetClient.cpp	/^EthernetClient::operator bool() {$/;"	f	class:EthernetClient
operator bool	./GSM/GSM3MobileClientService.cpp	/^GSM3MobileClientService::operator bool()$/;"	f	class:GSM3MobileClientService
operator bool	./GSM/GSM3MobileClientService.cpp	/^GSM3MobileClientService::operator bool()$/;"	f	class:GSM3MobileClientService
operator bool	./SD/File.cpp	/^File::operator bool() {$/;"	f	class:File
operator bool	./SD/File.cpp	/^File::operator bool() {$/;"	f	class:File
operator bool	./WiFi/WiFiClient.cpp	/^WiFiClient::operator bool() {$/;"	f	class:WiFiClient
operator bool	./WiFi/WiFiClient.cpp	/^WiFiClient::operator bool() {$/;"	f	class:WiFiClient
operator <<	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSPlus &operator << (char c) {encode(c); return *this;}$/;"	f	class:TinyGPSPlus
operator <<	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSPlus &operator << (char c) {encode(c); return *this;}$/;"	f	class:TinyGPSPlus
operator <<	./TinyGPS/TinyGPS.h	/^  TinyGPS &operator << (char c) {encode(c); return *this;}$/;"	f	class:TinyGPS
operator <<	./TinyGPS/TinyGPS.h	/^  TinyGPS &operator << (char c) {encode(c); return *this;}$/;"	f	class:TinyGPS
op	./Ethernet/Dhcp.h	/^	uint8_t  op; $/;"	m	struct:_RIP_MSG_FIXED
op	./Ethernet/Dhcp.h	/^	uint8_t  op; $/;"	m	struct:_RIP_MSG_FIXED
OPTIMIZE_HARDWARE_SPI	./SD/utility/Sd2Card.h	69;"	d
OPTIMIZE_HARDWARE_SPI	./SD/utility/Sd2Card.h	69;"	d
order_count	./Robot_Control/Squawk.cpp	/^static uint8_t  order_count;$/;"	v	file:
order_count	./Robot_Control/Squawk.cpp	/^static uint8_t  order_count;$/;"	v	file:
order	./Robot_Control/Squawk.cpp	/^static uint8_t  order[64];$/;"	v	file:
order	./Robot_Control/Squawk.cpp	/^static uint8_t  order[64];$/;"	v	file:
O_RDONLY	./Robot_Control/Fat16.h	/^uint8_t const O_RDONLY  = O_READ;$/;"	v
O_RDONLY	./Robot_Control/Fat16.h	/^uint8_t const O_RDONLY  = O_READ;$/;"	v
O_RDONLY	./SD/utility/SdFat.h	/^uint8_t const O_RDONLY = O_READ;$/;"	v
O_RDONLY	./SD/utility/SdFat.h	/^uint8_t const O_RDONLY = O_READ;$/;"	v
O_RDWR	./Robot_Control/Fat16.h	/^uint8_t const O_RDWR    = O_READ | O_WRITE;$/;"	v
O_RDWR	./Robot_Control/Fat16.h	/^uint8_t const O_RDWR    = O_READ | O_WRITE;$/;"	v
O_RDWR	./SD/utility/SdFat.h	/^uint8_t const O_RDWR = (O_READ | O_WRITE);$/;"	v
O_RDWR	./SD/utility/SdFat.h	/^uint8_t const O_RDWR = (O_READ | O_WRITE);$/;"	v
O_READ	./Robot_Control/Fat16.h	/^uint8_t const O_READ    = 0X01;$/;"	v
O_READ	./Robot_Control/Fat16.h	/^uint8_t const O_READ    = 0X01;$/;"	v
O_READ	./SD/utility/SdFat.h	/^uint8_t const O_READ = 0X01;$/;"	v
O_READ	./SD/utility/SdFat.h	/^uint8_t const O_READ = 0X01;$/;"	v
Oscillator	./Robot_Control/Squawk.h	/^typedef osc_t Oscillator;$/;"	t
Oscillator	./Robot_Control/Squawk.h	/^typedef osc_t Oscillator;$/;"	t
OSCILLO_BMP	./Robot_Control/ArduinoRobot.h	40;"	d
OSCILLO_BMP	./Robot_Control/ArduinoRobot.h	40;"	d
osc	./Robot_Control/Squawk.cpp	/^osc_t osc[4];$/;"	v
osc	./Robot_Control/Squawk.cpp	/^osc_t osc[4];$/;"	v
osc_t	./Robot_Control/Squawk.h	/^} osc_t;$/;"	t	typeref:struct:__anon15
osc_t	./Robot_Control/Squawk.h	/^} osc_t;$/;"	t	typeref:struct:__anon15
O_SYNC	./Robot_Control/Fat16.h	/^uint8_t const O_SYNC    = 0X08;$/;"	v
O_SYNC	./Robot_Control/Fat16.h	/^uint8_t const O_SYNC    = 0X08;$/;"	v
O_SYNC	./SD/utility/SdFat.h	/^uint8_t const O_SYNC = 0X08;$/;"	v
O_SYNC	./SD/utility/SdFat.h	/^uint8_t const O_SYNC = 0X08;$/;"	v
O_TRUNC	./Robot_Control/Fat16.h	/^uint8_t const O_TRUNC   = 0X40;$/;"	v
O_TRUNC	./Robot_Control/Fat16.h	/^uint8_t const O_TRUNC   = 0X40;$/;"	v
O_TRUNC	./SD/utility/SdFat.h	/^uint8_t const O_TRUNC = 0X40;$/;"	v
O_TRUNC	./SD/utility/SdFat.h	/^uint8_t const O_TRUNC = 0X40;$/;"	v
overflow	./SoftwareSerial/SoftwareSerial.h	/^  bool overflow() { bool ret = _buffer_overflow; _buffer_overflow = false; return ret; }$/;"	f	class:SoftwareSerial
overflow	./SoftwareSerial/SoftwareSerial.h	/^  bool overflow() { bool ret = _buffer_overflow; _buffer_overflow = false; return ret; }$/;"	f	class:SoftwareSerial
O_WRITE	./Robot_Control/Fat16.h	/^uint8_t const O_WRITE   = 0X02;$/;"	v
O_WRITE	./Robot_Control/Fat16.h	/^uint8_t const O_WRITE   = 0X02;$/;"	v
O_WRITE	./SD/utility/SdFat.h	/^uint8_t const O_WRITE = 0X02;$/;"	v
O_WRITE	./SD/utility/SdFat.h	/^uint8_t const O_WRITE = 0X02;$/;"	v
O_WRONLY	./Robot_Control/Fat16.h	/^uint8_t const O_WRONLY  = O_WRITE;$/;"	v
O_WRONLY	./Robot_Control/Fat16.h	/^uint8_t const O_WRONLY  = O_WRITE;$/;"	v
O_WRONLY	./SD/utility/SdFat.h	/^uint8_t const O_WRONLY = O_WRITE;$/;"	v
O_WRONLY	./SD/utility/SdFat.h	/^uint8_t const O_WRONLY = O_WRITE;$/;"	v
padOption	./Ethernet/Dhcp.h	/^	padOption		=	0,$/;"	e	enum:__anon14
padOption	./Ethernet/Dhcp.h	/^	padOption		=	0,$/;"	e	enum:__anon14
__PARAGRAPHGUARD__	./GSM/GSM3SoftSerial.cpp	64;"	d	file:
__PARAGRAPHGUARD__	./GSM/GSM3SoftSerial.cpp	64;"	d	file:
PARAM_LEN_POS	./WiFi/utility/wifi_spi.h	22;"	d
PARAM_LEN_POS	./WiFi/utility/wifi_spi.h	22;"	d
PARAM_LEN_SIZE	./WiFi/utility/wifi_spi.h	95;"	d
PARAM_LEN_SIZE	./WiFi/utility/wifi_spi.h	95;"	d
paramLen	./WiFi/utility/wifi_spi.h	/^	uint8_t     paramLen;$/;"	m	struct:__anon10
paramLen	./WiFi/utility/wifi_spi.h	/^	uint8_t     paramLen;$/;"	m	struct:__anon10
paramLen	./WiFi/utility/wifi_spi.h	/^	uint8_t     paramLen;$/;"	m	struct:__anon11
paramLen	./WiFi/utility/wifi_spi.h	/^	uint8_t     paramLen;$/;"	m	struct:__anon11
paramLen	./WiFi/utility/wifi_spi.h	/^	uint8_t     paramLen;$/;"	m	struct:__anon12
paramLen	./WiFi/utility/wifi_spi.h	/^	uint8_t     paramLen;$/;"	m	struct:__anon12
paramLen	./WiFi/utility/wifi_spi.h	/^	uint8_t     paramLen;$/;"	m	struct:__anon5
paramLen	./WiFi/utility/wifi_spi.h	/^	uint8_t     paramLen;$/;"	m	struct:__anon5
PARAM_NUMS_0	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_0,$/;"	e	enum:numParams
PARAM_NUMS_0	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_0,$/;"	e	enum:numParams
PARAM_NUMS_1	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_1,$/;"	e	enum:numParams
PARAM_NUMS_1	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_1,$/;"	e	enum:numParams
PARAM_NUMS_2	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_2,$/;"	e	enum:numParams
PARAM_NUMS_2	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_2,$/;"	e	enum:numParams
PARAM_NUMS_3	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_3,$/;"	e	enum:numParams
PARAM_NUMS_3	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_3,$/;"	e	enum:numParams
PARAM_NUMS_4	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_4,$/;"	e	enum:numParams
PARAM_NUMS_4	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_4,$/;"	e	enum:numParams
PARAM_NUMS_5	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_5,$/;"	e	enum:numParams
PARAM_NUMS_5	./WiFi/utility/wifi_spi.h	/^    PARAM_NUMS_5,$/;"	e	enum:numParams
param	./Robot_Control/Squawk.cpp	/^  uint8_t   param;$/;"	m	struct:__anon18	file:
param	./Robot_Control/Squawk.cpp	/^  uint8_t   param;$/;"	m	struct:__anon18	file:
PARAM_SET_0	./GSM_Shield/GSM_Shield.h	50;"	d
PARAM_SET_0	./GSM_Shield/GSM_Shield.h	50;"	d
PARAM_SET_1	./GSM_Shield/GSM_Shield.h	51;"	d
PARAM_SET_1	./GSM_Shield/GSM_Shield.h	51;"	d
params	./WiFi/utility/wifi_spi.h	/^	tDataParam		params[MAX_PARAMS];$/;"	m	struct:__anon8
params	./WiFi/utility/wifi_spi.h	/^	tDataParam		params[MAX_PARAMS];$/;"	m	struct:__anon8
params	./WiFi/utility/wifi_spi.h	/^	tParam	params[MAX_PARAMS];$/;"	m	struct:__anon7
params	./WiFi/utility/wifi_spi.h	/^	tParam	params[MAX_PARAMS];$/;"	m	struct:__anon7
param	./WiFi/utility/wifi_spi.h	/^	char*	    param;$/;"	m	struct:__anon5
param	./WiFi/utility/wifi_spi.h	/^	char*	    param;$/;"	m	struct:__anon5
param	./WiFi/utility/wifi_spi.h	/^	uint16_t	param;$/;"	m	struct:__anon11
param	./WiFi/utility/wifi_spi.h	/^	uint16_t	param;$/;"	m	struct:__anon11
param	./WiFi/utility/wifi_spi.h	/^	uint32_t	param;$/;"	m	struct:__anon10
param	./WiFi/utility/wifi_spi.h	/^	uint32_t	param;$/;"	m	struct:__anon10
param	./WiFi/utility/wifi_spi.h	/^	uint8_t	param;$/;"	m	struct:__anon12
param	./WiFi/utility/wifi_spi.h	/^	uint8_t	param;$/;"	m	struct:__anon12
parity	./TinyGPSPlus/TinyGPS++.h	/^  uint8_t parity;$/;"	m	class:TinyGPSPlus
parity	./TinyGPSPlus/TinyGPS++.h	/^  uint8_t parity;$/;"	m	class:TinyGPSPlus
_parity	./TinyGPS/TinyGPS.h	/^  byte _parity;$/;"	m	class:TinyGPS
_parity	./TinyGPS/TinyGPS.h	/^  byte _parity;$/;"	m	class:TinyGPS
parseCLCC	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^bool GSM3ShieldV1VoiceProvider::parseCLCC(char* number, int nlength)$/;"	f	class:GSM3ShieldV1VoiceProvider
parseCLCC	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^bool GSM3ShieldV1VoiceProvider::parseCLCC(char* number, int nlength)$/;"	f	class:GSM3ShieldV1VoiceProvider
parseCMGL_available	./GSM/GSM3ShieldV1SMSProvider.cpp	/^bool GSM3ShieldV1SMSProvider::parseCMGL_available(bool& rsp)$/;"	f	class:GSM3ShieldV1SMSProvider
parseCMGL_available	./GSM/GSM3ShieldV1SMSProvider.cpp	/^bool GSM3ShieldV1SMSProvider::parseCMGL_available(bool& rsp)$/;"	f	class:GSM3ShieldV1SMSProvider
parseCodename	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^uint8_t RobotMotorBoard::parseCodename(uint8_t codename){$/;"	f	class:RobotMotorBoard
parseCodename	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^uint8_t RobotMotorBoard::parseCodename(uint8_t codename){$/;"	f	class:RobotMotorBoard
parseCommand	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::parseCommand(){$/;"	f	class:RobotMotorBoard
parseCommand	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::parseCommand(){$/;"	f	class:RobotMotorBoard
parseDecimal	./TinyGPSPlus/TinyGPS++.cpp	/^int32_t TinyGPSPlus::parseDecimal(const char *term)$/;"	f	class:TinyGPSPlus
parseDecimal	./TinyGPSPlus/TinyGPS++.cpp	/^int32_t TinyGPSPlus::parseDecimal(const char *term)$/;"	f	class:TinyGPSPlus
parse_decimal	./TinyGPS/TinyGPS.cpp	/^unsigned long TinyGPS::parse_decimal()$/;"	f	class:TinyGPS
parse_decimal	./TinyGPS/TinyGPS.cpp	/^unsigned long TinyGPS::parse_decimal()$/;"	f	class:TinyGPS
parseDegrees	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSPlus::parseDegrees(const char *term, RawDegrees &deg)$/;"	f	class:TinyGPSPlus
parseDegrees	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSPlus::parseDegrees(const char *term, RawDegrees &deg)$/;"	f	class:TinyGPSPlus
parse_degrees	./TinyGPS/TinyGPS.cpp	/^unsigned long TinyGPS::parse_degrees()$/;"	f	class:TinyGPS
parse_degrees	./TinyGPS/TinyGPS.cpp	/^unsigned long TinyGPS::parse_degrees()$/;"	f	class:TinyGPS
parseDHCPResponse	./Ethernet/Dhcp.cpp	/^uint8_t DhcpClass::parseDHCPResponse(unsigned long responseTimeout, uint32_t& transactionId)$/;"	f	class:DhcpClass
parseDHCPResponse	./Ethernet/Dhcp.cpp	/^uint8_t DhcpClass::parseDHCPResponse(unsigned long responseTimeout, uint32_t& transactionId)$/;"	f	class:DhcpClass
parseMBDPort	./Robot_Control/Sensors.cpp	/^int* RobotControl::parseMBDPort(uint8_t port){$/;"	f	class:RobotControl
parseMBDPort	./Robot_Control/Sensors.cpp	/^int* RobotControl::parseMBDPort(uint8_t port){$/;"	f	class:RobotControl
parsePacket	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::parsePacket()$/;"	f	class:EthernetUDP
parsePacket	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::parsePacket()$/;"	f	class:EthernetUDP
parsePacket	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::parsePacket()$/;"	f	class:WiFiUDP
parsePacket	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::parsePacket()$/;"	f	class:WiFiUDP
parseQCCID_available	./GSM/GSM3ShieldV1CellManagement.cpp	/^bool GSM3ShieldV1CellManagement::parseQCCID_available(bool& rsp)$/;"	f	class:GSM3ShieldV1CellManagement
parseQCCID_available	./GSM/GSM3ShieldV1CellManagement.cpp	/^bool GSM3ShieldV1CellManagement::parseQCCID_available(bool& rsp)$/;"	f	class:GSM3ShieldV1CellManagement
parseQENG_available	./GSM/GSM3ShieldV1CellManagement.cpp	/^bool GSM3ShieldV1CellManagement::parseQENG_available(bool& rsp)$/;"	f	class:GSM3ShieldV1CellManagement
parseQENG_available	./GSM/GSM3ShieldV1CellManagement.cpp	/^bool GSM3ShieldV1CellManagement::parseQENG_available(bool& rsp)$/;"	f	class:GSM3ShieldV1CellManagement
parseQILOCIP_rsp	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^bool GSM3ShieldV1DataNetworkProvider::parseQILOCIP_rsp(char* LocalIP, int LocalIPlength, bool& rsp)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
parseQILOCIP_rsp	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^bool GSM3ShieldV1DataNetworkProvider::parseQILOCIP_rsp(char* LocalIP, int LocalIPlength, bool& rsp)$/;"	f	class:GSM3ShieldV1DataNetworkProvider
parseQILOCIP_rsp	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^bool GSM3ShieldV1MultiServerProvider::parseQILOCIP_rsp(char* LocalIP, int LocalIPlength, bool& rsp)$/;"	f	class:GSM3ShieldV1MultiServerProvider
parseQILOCIP_rsp	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^bool GSM3ShieldV1MultiServerProvider::parseQILOCIP_rsp(char* LocalIP, int LocalIPlength, bool& rsp)$/;"	f	class:GSM3ShieldV1MultiServerProvider
parseQIRD_head	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^bool GSM3ShieldV1MultiClientProvider::parseQIRD_head(bool& rsp)$/;"	f	class:GSM3ShieldV1MultiClientProvider
parseQIRD_head	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^bool GSM3ShieldV1MultiClientProvider::parseQIRD_head(bool& rsp)$/;"	f	class:GSM3ShieldV1MultiClientProvider
parsingSysex	./Firmata/Firmata.h	/^    boolean parsingSysex;$/;"	m	class:FirmataClass
parsingSysex	./Firmata/Firmata.h	/^    boolean parsingSysex;$/;"	m	class:FirmataClass
partialBlockRead	./SD/utility/Sd2Card.cpp	/^void Sd2Card::partialBlockRead(uint8_t value) {$/;"	f	class:Sd2Card
partialBlockRead	./SD/utility/Sd2Card.cpp	/^void Sd2Card::partialBlockRead(uint8_t value) {$/;"	f	class:Sd2Card
partialBlockRead_	./SD/utility/Sd2Card.h	/^  uint8_t partialBlockRead_;$/;"	m	class:Sd2Card
partialBlockRead_	./SD/utility/Sd2Card.h	/^  uint8_t partialBlockRead_;$/;"	m	class:Sd2Card
partialBlockRead	./SD/utility/Sd2Card.h	/^  uint8_t partialBlockRead(void) const {return partialBlockRead_;}$/;"	f	class:Sd2Card
partialBlockRead	./SD/utility/Sd2Card.h	/^  uint8_t partialBlockRead(void) const {return partialBlockRead_;}$/;"	f	class:Sd2Card
partitionTable	./Robot_Control/FatStructs.h	/^struct partitionTable {$/;"	s
partitionTable	./Robot_Control/FatStructs.h	/^struct partitionTable {$/;"	s
partitionTable	./SD/utility/FatStructs.h	/^struct partitionTable {$/;"	s
partitionTable	./SD/utility/FatStructs.h	/^struct partitionTable {$/;"	s
part	./Robot_Control/FatStructs.h	/^  part_t   part[4];$/;"	m	struct:masterBootRecord
part	./Robot_Control/FatStructs.h	/^  part_t   part[4];$/;"	m	struct:masterBootRecord
part	./SD/utility/FatStructs.h	/^  part_t   part[4];$/;"	m	struct:masterBootRecord
part	./SD/utility/FatStructs.h	/^  part_t   part[4];$/;"	m	struct:masterBootRecord
part_t	./Robot_Control/FatStructs.h	/^typedef struct partitionTable part_t;$/;"	t	typeref:struct:partitionTable
part_t	./Robot_Control/FatStructs.h	/^typedef struct partitionTable part_t;$/;"	t	typeref:struct:partitionTable
part_t	./SD/utility/FatStructs.h	/^typedef struct partitionTable part_t;$/;"	t	typeref:struct:partitionTable
part_t	./SD/utility/FatStructs.h	/^typedef struct partitionTable part_t;$/;"	t	typeref:struct:partitionTable
passedChecksumCount	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t passedChecksumCount;$/;"	m	class:TinyGPSPlus
passedChecksumCount	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t passedChecksumCount;$/;"	m	class:TinyGPSPlus
passedChecksum	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t passedChecksum()   const { return passedChecksumCount; }$/;"	f	class:TinyGPSPlus
passedChecksum	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t passedChecksum()   const { return passedChecksumCount; }$/;"	f	class:TinyGPSPlus
_passed_checksum	./TinyGPS/TinyGPS.h	/^  unsigned short _passed_checksum;$/;"	m	class:TinyGPS
_passed_checksum	./TinyGPS/TinyGPS.h	/^  unsigned short _passed_checksum;$/;"	m	class:TinyGPS
passwd	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		char* passwd; \/\/ Password for GPRS$/;"	m	class:GSM3ShieldV1DataNetworkProvider
passwd	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		char* passwd; \/\/ Password for GPRS$/;"	m	class:GSM3ShieldV1DataNetworkProvider
passw	./GSM/GSM3ShieldV1.h	/^		char* passw;				\/\/Password.$/;"	m	class:GSM3ShieldV1
passw	./GSM/GSM3ShieldV1.h	/^		char* passw;				\/\/Password.$/;"	m	class:GSM3ShieldV1
PATH_COMPONENT_BUFFER_LEN	./SD/SD.cpp	57;"	d	file:
PATH_COMPONENT_BUFFER_LEN	./SD/SD.cpp	57;"	d	file:
pauseMode	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::pauseMode(bool onOff){$/;"	f	class:RobotMotorBoard
pauseMode	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::pauseMode(bool onOff){$/;"	f	class:RobotMotorBoard
pause	./Robot_Control/Squawk.cpp	/^void SquawkSynth::pause() {$/;"	f	class:SquawkSynth
pause	./Robot_Control/Squawk.cpp	/^void SquawkSynth::pause() {$/;"	f	class:SquawkSynth
pcb	./WiFi/WiFiServer.h	/^  void*     pcb;$/;"	m	class:WiFiServer
pcb	./WiFi/WiFiServer.h	/^  void*     pcb;$/;"	m	class:WiFiServer
pcm	./Robot_Control/Squawk.cpp	/^uint8_t pcm = 128;$/;"	v
pcm	./Robot_Control/Squawk.cpp	/^uint8_t pcm = 128;$/;"	v
p_comm_buf	./GSM_Shield/GSM_Shield.h	/^    byte *p_comm_buf;               \/\/ pointer to the communication buffer$/;"	m	class:GSM
p_comm_buf	./GSM_Shield/GSM_Shield.h	/^    byte *p_comm_buf;               \/\/ pointer to the communication buffer$/;"	m	class:GSM
PCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
PCS_MODE	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
p_cursor	./Robot_Control/Squawk.cpp	/^    uint8_t *p_cursor;$/;"	m	class:StreamROM	file:
p_cursor	./Robot_Control/Squawk.cpp	/^    uint8_t *p_cursor;$/;"	m	class:StreamROM	file:
peek	./Ethernet/EthernetClient.cpp	/^int EthernetClient::peek() {$/;"	f	class:EthernetClient
peek	./Ethernet/EthernetClient.cpp	/^int EthernetClient::peek() {$/;"	f	class:EthernetClient
peek	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::peek()$/;"	f	class:EthernetUDP
peek	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::peek()$/;"	f	class:EthernetUDP
peek	./Ethernet/utility/socket.cpp	/^uint16_t peek(SOCKET s, uint8_t *buf)$/;"	f
peek	./Ethernet/utility/socket.cpp	/^uint16_t peek(SOCKET s, uint8_t *buf)$/;"	f
peek	./GSM/GSM3CircularBuffer.cpp	/^char GSM3CircularBuffer::peek(int increment)$/;"	f	class:GSM3CircularBuffer
peek	./GSM/GSM3CircularBuffer.cpp	/^char GSM3CircularBuffer::peek(int increment)$/;"	f	class:GSM3CircularBuffer
peek	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::peek()$/;"	f	class:GSM3MobileClientService
peek	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::peek()$/;"	f	class:GSM3MobileClientService
peek	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::peek()$/;"	f	class:GSM3MobileMockupProvider
peek	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::peek()$/;"	f	class:GSM3MobileMockupProvider
peek	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^int\/*char*\/ GSM3ShieldV1DirectModemProvider::peek()$/;"	f	class:GSM3ShieldV1DirectModemProvider
peek	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^int\/*char*\/ GSM3ShieldV1DirectModemProvider::peek()$/;"	f	class:GSM3ShieldV1DirectModemProvider
peek	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::peek()$/;"	f	class:GSM3SMSService
peek	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::peek()$/;"	f	class:GSM3SMSService
peek	./Robot_Control/Wire.cpp	/^int TwoWire::peek(void)$/;"	f	class:TwoWire
peek	./Robot_Control/Wire.cpp	/^int TwoWire::peek(void)$/;"	f	class:TwoWire
peek	./SD/File.cpp	/^int File::peek() {$/;"	f	class:File
peek	./SD/File.cpp	/^int File::peek() {$/;"	f	class:File
peekSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int peekSMS(){return 0;};$/;"	f	class:GSM3MobileSMSProvider
peekSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int peekSMS(){return 0;};$/;"	f	class:GSM3MobileSMSProvider
peekSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::peekSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
peekSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::peekSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
peekSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::peekSocket()$/;"	f	class:GSM3ShieldV1ClientProvider
peekSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::peekSocket()$/;"	f	class:GSM3ShieldV1ClientProvider
peekSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::peekSocket()$/;"	f	class:GSM3ShieldV1MultiClientProvider
peekSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::peekSocket()$/;"	f	class:GSM3ShieldV1MultiClientProvider
peek	./SoftwareSerial/SoftwareSerial.cpp	/^int SoftwareSerial::peek()$/;"	f	class:SoftwareSerial
peek	./SoftwareSerial/SoftwareSerial.cpp	/^int SoftwareSerial::peek()$/;"	f	class:SoftwareSerial
peek	./WiFi/WiFiClient.cpp	/^int WiFiClient::peek() {$/;"	f	class:WiFiClient
peek	./WiFi/WiFiClient.cpp	/^int WiFiClient::peek() {$/;"	f	class:WiFiClient
peek	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::peek()$/;"	f	class:WiFiUDP
peek	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::peek()$/;"	f	class:WiFiUDP
peek	./Wire/Wire.cpp	/^int TwoWire::peek(void)$/;"	f	class:TwoWire
peek	./Wire/Wire.cpp	/^int TwoWire::peek(void)$/;"	f	class:TwoWire
PERIOD_MAX	./Robot_Control/Squawk.cpp	10;"	d	file:
PERIOD_MAX	./Robot_Control/Squawk.cpp	10;"	d	file:
PERIOD_MIN	./Robot_Control/Squawk.cpp	9;"	d	file:
PERIOD_MIN	./Robot_Control/Squawk.cpp	9;"	d	file:
period	./Robot_Control/Squawk.cpp	/^  uint16_t  period;$/;"	m	struct:__anon18	file:
period	./Robot_Control/Squawk.cpp	/^  uint16_t  period;$/;"	m	struct:__anon18	file:
perm_write_protect	./Robot_Control/SdInfo.h	/^  unsigned perm_write_protect : 1;$/;"	m	struct:CSD
perm_write_protect	./Robot_Control/SdInfo.h	/^  unsigned perm_write_protect : 1;$/;"	m	struct:CSD
perm_write_protect	./SD/utility/SdInfo.h	/^  unsigned perm_write_protect : 1;$/;"	m	struct:CSDV1
perm_write_protect	./SD/utility/SdInfo.h	/^  unsigned perm_write_protect : 1;$/;"	m	struct:CSDV1
perm_write_protect	./SD/utility/SdInfo.h	/^  unsigned perm_write_protect : 1;$/;"	m	struct:CSDV2
perm_write_protect	./SD/utility/SdInfo.h	/^  unsigned perm_write_protect : 1;$/;"	m	struct:CSDV2
PGMbuffer	./Robot_Control/utility/RobotTextManager.h	/^	char PGMbuffer[85];  \/\/the buffer for storing strings$/;"	m	class:TextManager
PGMbuffer	./Robot_Control/utility/RobotTextManager.h	/^	char PGMbuffer[85];  \/\/the buffer for storing strings$/;"	m	class:TextManager
PgmPrintln	./Robot_Control/Fat16util.h	35;"	d
PgmPrintln	./Robot_Control/Fat16util.h	35;"	d
PgmPrintln	./SD/utility/SdFatUtil.h	31;"	d
PgmPrintln	./SD/utility/SdFatUtil.h	31;"	d
PgmPrint	./Robot_Control/Fat16util.h	33;"	d
PgmPrint	./Robot_Control/Fat16util.h	33;"	d
PgmPrint	./SD/utility/SdFatUtil.h	29;"	d
PgmPrint	./SD/utility/SdFatUtil.h	29;"	d
phase	./Robot_Control/Squawk.h	/^  uint16_t phase;$/;"	m	struct:__anon15
phase	./Robot_Control/Squawk.h	/^  uint16_t phase;$/;"	m	struct:__anon15
phonelength	./GSM/GSM3ShieldV1VoiceProvider.h	/^		int phonelength; \/\/ Phone number length$/;"	m	class:GSM3ShieldV1VoiceProvider
phonelength	./GSM/GSM3ShieldV1VoiceProvider.h	/^		int phonelength; \/\/ Phone number length$/;"	m	class:GSM3ShieldV1VoiceProvider
phoneNumber	./GSM/GSM3ShieldV1ModemCore.h	/^		char* phoneNumber;	$/;"	m	class:GSM3ShieldV1ModemCore
phoneNumber	./GSM/GSM3ShieldV1ModemCore.h	/^		char* phoneNumber;	$/;"	m	class:GSM3ShieldV1ModemCore
PickUp	./GSM_Shield/GSM_Shield.cpp	/^void GSM::PickUp(void)$/;"	f	class:GSM
PickUp	./GSM_Shield/GSM_Shield.cpp	/^void GSM::PickUp(void)$/;"	f	class:GSM
_PIMAGE_H	./TFT/utility/PImage.h	4;"	d
_PIMAGE_H	./TFT/utility/PImage.h	4;"	d
PImage	./TFT/utility/PImage.h	/^class PImage {$/;"	c
PImage	./TFT/utility/PImage.h	/^class PImage {$/;"	c
PImage	./TFT/utility/PImage.h	/^  PImage() : $/;"	f	class:PImage
PImage	./TFT/utility/PImage.h	/^  PImage() : $/;"	f	class:PImage
PImage	./TFT/utility/PImage.h	/^  PImage(File & bmpFile, int bmpWidth, int bmpHeight, uint8_t  bmpDepth, uint32_t bmpImageoffset, uint32_t rowSize, bool     flip) : $/;"	f	class:PImage
PImage	./TFT/utility/PImage.h	/^  PImage(File & bmpFile, int bmpWidth, int bmpHeight, uint8_t  bmpDepth, uint32_t bmpImageoffset, uint32_t rowSize, bool     flip) : $/;"	f	class:PImage
pin13strobe	./Firmata/Firmata.cpp	/^void FirmataClass::pin13strobe(int count, int onInterval, int offInterval) $/;"	f	class:FirmataClass
pin13strobe	./Firmata/Firmata.cpp	/^void FirmataClass::pin13strobe(int count, int onInterval, int offInterval) $/;"	f	class:FirmataClass
pinConfig	./GSM/GSM3ShieldV1.h	/^		const char* pinConfig;		\/\/PIN.$/;"	m	class:GSM3ShieldV1
pinConfig	./GSM/GSM3ShieldV1.h	/^		const char* pinConfig;		\/\/PIN.$/;"	m	class:GSM3ShieldV1
pin_count	./Stepper/Stepper.h	/^    int pin_count;        \/\/ whether you're driving the motor with 2 or 4 pins$/;"	m	class:Stepper
pin_count	./Stepper/Stepper.h	/^    int pin_count;        \/\/ whether you're driving the motor with 2 or 4 pins$/;"	m	class:Stepper
pin_map_t	./SD/utility/Sd2PinMap.h	/^struct pin_map_t {$/;"	s
pin_map_t	./SD/utility/Sd2PinMap.h	/^struct pin_map_t {$/;"	s
pin	./SD/utility/Sd2PinMap.h	/^  volatile uint8_t* pin;$/;"	m	struct:pin_map_t
pin	./SD/utility/Sd2PinMap.h	/^  volatile uint8_t* pin;$/;"	m	struct:pin_map_t
Pin	./Servo/Servo.h	/^  ServoPin_t Pin;$/;"	m	struct:__anon25
Pin	./Servo/Servo.h	/^  ServoPin_t Pin;$/;"	m	struct:__anon25
pin	./SoftwareServo/SoftwareServo.h	/^    uint8_t pin;$/;"	m	class:SoftwareServo
pin	./SoftwareServo/SoftwareServo.h	/^    uint8_t pin;$/;"	m	class:SoftwareServo
PIN_STATE_QUERY	./Firmata/Firmata.h	51;"	d
PIN_STATE_QUERY	./Firmata/Firmata.h	51;"	d
PIN_STATE_RESPONSE	./Firmata/Firmata.h	52;"	d
PIN_STATE_RESPONSE	./Firmata/Firmata.h	52;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	147;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	147;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	162;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	162;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	178;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	178;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	195;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	195;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	211;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	211;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	227;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	227;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	243;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	243;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	259;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	259;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	275;"	d
PIN_TO_ANALOG	./Firmata/Boards.h	275;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	146;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	146;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	161;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	161;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	177;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	177;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	194;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	194;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	210;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	210;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	226;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	226;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	242;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	242;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	258;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	258;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	274;"	d
PIN_TO_DIGITAL	./Firmata/Boards.h	274;"	d
PIN_TO_PWM	./Firmata/Boards.h	148;"	d
PIN_TO_PWM	./Firmata/Boards.h	148;"	d
PIN_TO_PWM	./Firmata/Boards.h	163;"	d
PIN_TO_PWM	./Firmata/Boards.h	163;"	d
PIN_TO_PWM	./Firmata/Boards.h	179;"	d
PIN_TO_PWM	./Firmata/Boards.h	179;"	d
PIN_TO_PWM	./Firmata/Boards.h	196;"	d
PIN_TO_PWM	./Firmata/Boards.h	196;"	d
PIN_TO_PWM	./Firmata/Boards.h	212;"	d
PIN_TO_PWM	./Firmata/Boards.h	212;"	d
PIN_TO_PWM	./Firmata/Boards.h	228;"	d
PIN_TO_PWM	./Firmata/Boards.h	228;"	d
PIN_TO_PWM	./Firmata/Boards.h	244;"	d
PIN_TO_PWM	./Firmata/Boards.h	244;"	d
PIN_TO_PWM	./Firmata/Boards.h	260;"	d
PIN_TO_PWM	./Firmata/Boards.h	260;"	d
PIN_TO_PWM	./Firmata/Boards.h	276;"	d
PIN_TO_PWM	./Firmata/Boards.h	276;"	d
PIN_TO_SERVO	./Firmata/Boards.h	149;"	d
PIN_TO_SERVO	./Firmata/Boards.h	149;"	d
PIN_TO_SERVO	./Firmata/Boards.h	164;"	d
PIN_TO_SERVO	./Firmata/Boards.h	164;"	d
PIN_TO_SERVO	./Firmata/Boards.h	180;"	d
PIN_TO_SERVO	./Firmata/Boards.h	180;"	d
PIN_TO_SERVO	./Firmata/Boards.h	197;"	d
PIN_TO_SERVO	./Firmata/Boards.h	197;"	d
PIN_TO_SERVO	./Firmata/Boards.h	213;"	d
PIN_TO_SERVO	./Firmata/Boards.h	213;"	d
PIN_TO_SERVO	./Firmata/Boards.h	229;"	d
PIN_TO_SERVO	./Firmata/Boards.h	229;"	d
PIN_TO_SERVO	./Firmata/Boards.h	245;"	d
PIN_TO_SERVO	./Firmata/Boards.h	245;"	d
PIN_TO_SERVO	./Firmata/Boards.h	261;"	d
PIN_TO_SERVO	./Firmata/Boards.h	261;"	d
PIN_TO_SERVO	./Firmata/Boards.h	277;"	d
PIN_TO_SERVO	./Firmata/Boards.h	277;"	d
pin_used	./GSM/GSM3ShieldV1PinManagement.h	/^		bool pin_used; \/\/ determines if pin lock is activated $/;"	m	class:GSM3ShieldV1PinManagement
pin_used	./GSM/GSM3ShieldV1PinManagement.h	/^		bool pin_used; \/\/ determines if pin lock is activated $/;"	m	class:GSM3ShieldV1PinManagement
pin_Z	./Robot_Control/Multiplexer.h	/^		uint8_t pin_Z;$/;"	m	class:Multiplexer
pin_Z	./Robot_Control/Multiplexer.h	/^		uint8_t pin_Z;$/;"	m	class:Multiplexer
pin_Z	./Robot_Motor/Multiplexer.h	/^		uint8_t pin_Z;$/;"	m	class:Multiplexer
pin_Z	./Robot_Motor/Multiplexer.h	/^		uint8_t pin_Z;$/;"	m	class:Multiplexer
playFile	./Robot_Control/Melody.cpp	/^void RobotControl::playFile(char* filename){$/;"	f	class:RobotControl
playFile	./Robot_Control/Melody.cpp	/^void RobotControl::playFile(char* filename){$/;"	f	class:RobotControl
playMelody	./Robot_Control/Melody.cpp	/^void RobotControl::playMelody(char* script){$/;"	f	class:RobotControl
playMelody	./Robot_Control/Melody.cpp	/^void RobotControl::playMelody(char* script){$/;"	f	class:RobotControl
playNote	./Robot_Control/Melody.cpp	/^void RobotControl::playNote(byte period, word length, char modifier) {$/;"	f	class:RobotControl
playNote	./Robot_Control/Melody.cpp	/^void RobotControl::playNote(byte period, word length, char modifier) {$/;"	f	class:RobotControl
play	./Robot_Control/Squawk.cpp	/^void SquawkSynth::play(const uint8_t *melody) {$/;"	f	class:SquawkSynth
play	./Robot_Control/Squawk.cpp	/^void SquawkSynth::play(const uint8_t *melody) {$/;"	f	class:SquawkSynth
play	./Robot_Control/Squawk.cpp	/^void SquawkSynth::play() {$/;"	f	class:SquawkSynth
play	./Robot_Control/Squawk.cpp	/^void SquawkSynth::play() {$/;"	f	class:SquawkSynth
play	./Robot_Control/Squawk.cpp	/^void SquawkSynth::play(SquawkStream *melody) {$/;"	f	class:SquawkSynth
play	./Robot_Control/Squawk.cpp	/^void SquawkSynth::play(SquawkStream *melody) {$/;"	f	class:SquawkSynth
play	./Robot_Control/SquawkSD.cpp	/^void SquawkSynthSD::play(Fat16 melody) {$/;"	f	class:SquawkSynthSD
play	./Robot_Control/SquawkSD.cpp	/^void SquawkSynthSD::play(Fat16 melody) {$/;"	f	class:SquawkSynthSD
play	./Robot_Control/SquawkSD.h	/^	  inline void play() { Squawk.play(); };$/;"	f	class:SquawkSynthSD
play	./Robot_Control/SquawkSD.h	/^	  inline void play() { Squawk.play(); };$/;"	f	class:SquawkSynthSD
playroutine_reset	./Robot_Control/Squawk.cpp	/^static void playroutine_reset() {$/;"	f	file:
playroutine_reset	./Robot_Control/Squawk.cpp	/^static void playroutine_reset() {$/;"	f	file:
pnm	./Robot_Control/SdInfo.h	/^  char pnm[5];  \/\/ Product name$/;"	m	struct:CID
pnm	./Robot_Control/SdInfo.h	/^  char pnm[5];  \/\/ Product name$/;"	m	struct:CID
pnm	./SD/utility/SdInfo.h	/^  char pnm[5];  \/\/ Product name$/;"	m	struct:CID
pnm	./SD/utility/SdInfo.h	/^  char pnm[5];  \/\/ Product name$/;"	m	struct:CID
point	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::point(int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
point	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::point(int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
point	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::point(int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
point	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::point(int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
_port	./Ethernet/EthernetServer.h	/^  uint16_t _port;$/;"	m	class:EthernetServer
_port	./Ethernet/EthernetServer.h	/^  uint16_t _port;$/;"	m	class:EthernetServer
_port	./Ethernet/EthernetUdp.h	/^  uint16_t _port; \/\/ local port to listen on$/;"	m	class:EthernetUDP
_port	./Ethernet/EthernetUdp.h	/^  uint16_t _port; \/\/ local port to listen on$/;"	m	class:EthernetUDP
_port	./GSM/GSM3MobileServerService.h	/^		uint8_t _port; \/\/ Port$/;"	m	class:GSM3MobileServerService
_port	./GSM/GSM3MobileServerService.h	/^		uint8_t _port; \/\/ Port$/;"	m	class:GSM3MobileServerService
port	./GSM/GSM3ShieldV1ModemCore.h	/^		int port;$/;"	m	class:GSM3ShieldV1ModemCore
port	./GSM/GSM3ShieldV1ModemCore.h	/^		int port;$/;"	m	class:GSM3ShieldV1ModemCore
port	./SD/utility/Sd2PinMap.h	/^  volatile uint8_t* port;$/;"	m	struct:pin_map_t
port	./SD/utility/Sd2PinMap.h	/^  volatile uint8_t* port;$/;"	m	struct:pin_map_t
port_speed	./Robot_Control/Squawk.cpp	/^  uint8_t   port_speed;$/;"	m	struct:__anon18	file:
port_speed	./Robot_Control/Squawk.cpp	/^  uint8_t   port_speed;$/;"	m	struct:__anon18	file:
port_target	./Robot_Control/Squawk.cpp	/^  uint16_t  port_target;$/;"	m	struct:__anon18	file:
port_target	./Robot_Control/Squawk.cpp	/^  uint16_t  port_target;$/;"	m	struct:__anon18	file:
_portToTopMux	./Robot_Control/Sensors.cpp	/^uint8_t RobotControl::_portToTopMux(uint8_t port){$/;"	f	class:RobotControl
_portToTopMux	./Robot_Control/Sensors.cpp	/^uint8_t RobotControl::_portToTopMux(uint8_t port){$/;"	f	class:RobotControl
_port	./WiFi/WiFiServer.h	/^  uint16_t _port;$/;"	m	class:WiFiServer
_port	./WiFi/WiFiServer.h	/^  uint16_t _port;$/;"	m	class:WiFiServer
_port	./WiFi/WiFiUdp.h	/^  uint16_t _port; \/\/ local port to listen on$/;"	m	class:WiFiUDP
_port	./WiFi/WiFiUdp.h	/^  uint16_t _port; \/\/ local port to listen on$/;"	m	class:WiFiUDP
position	./Robot_Control/EasyTransfer2.h	/^uint8_t position;$/;"	m	class:EasyTransfer2
position	./Robot_Control/EasyTransfer2.h	/^uint8_t position;$/;"	m	class:EasyTransfer2
position	./Robot_Motor/EasyTransfer2.h	/^uint8_t position;$/;"	m	class:EasyTransfer2
position	./Robot_Motor/EasyTransfer2.h	/^uint8_t position;$/;"	m	class:EasyTransfer2
position	./SD/File.cpp	/^uint32_t File::position() {$/;"	f	class:File
position	./SD/File.cpp	/^uint32_t File::position() {$/;"	f	class:File
PPPOE	./Ethernet/utility/w5100.h	/^  static const uint8_t PPPOE  = 0x05;$/;"	m	class:SnMR
PPPOE	./Ethernet/utility/w5100.h	/^  static const uint8_t PPPOE  = 0x05;$/;"	m	class:SnMR
PPPOE	./Ethernet/utility/w5100.h	/^  static const uint8_t PPPOE       = 0x5F;$/;"	m	class:SnSR
PPPOE	./Ethernet/utility/w5100.h	/^  static const uint8_t PPPOE       = 0x5F;$/;"	m	class:SnSR
prepareAuxLocate	./GSM/GSM3ShieldV1BaseProvider.cpp	/^void GSM3ShieldV1BaseProvider::prepareAuxLocate(PROGMEM const prog_char str[], char auxLocate[])$/;"	f	class:GSM3ShieldV1BaseProvider
prepareAuxLocate	./GSM/GSM3ShieldV1BaseProvider.cpp	/^void GSM3ShieldV1BaseProvider::prepareAuxLocate(PROGMEM const prog_char str[], char auxLocate[])$/;"	f	class:GSM3ShieldV1BaseProvider
presend_DHCP	./Ethernet/Dhcp.cpp	/^void DhcpClass::presend_DHCP()$/;"	f	class:DhcpClass
presend_DHCP	./Ethernet/Dhcp.cpp	/^void DhcpClass::presend_DHCP()$/;"	f	class:DhcpClass
PRESSED	./Esplora/Esplora.h	/^const boolean PRESSED   = LOW;$/;"	v
PRESSED	./Esplora/Esplora.h	/^const boolean PRESSED   = LOW;$/;"	v
prev_time	./GSM_Shield/GSM_Shield.h	/^    unsigned long prev_time;        \/\/ previous time in msec.$/;"	m	class:GSM
prev_time	./GSM_Shield/GSM_Shield.h	/^    unsigned long prev_time;        \/\/ previous time in msec.$/;"	m	class:GSM
printByte	./Ethernet/Dhcp.cpp	/^void DhcpClass::printByte(char * buf, uint8_t n ) {$/;"	f	class:DhcpClass
printByte	./Ethernet/Dhcp.cpp	/^void DhcpClass::printByte(char * buf, uint8_t n ) {$/;"	f	class:DhcpClass
printCharDebug	./GSM/GSM3CircularBuffer.cpp	/^void GSM3CircularBuffer::printCharDebug(uint8_t c)$/;"	f	class:GSM3CircularBuffer
printCharDebug	./GSM/GSM3CircularBuffer.cpp	/^void GSM3CircularBuffer::printCharDebug(uint8_t c)$/;"	f	class:GSM3CircularBuffer
printDirName	./Robot_Control/Fat16.cpp	/^void Fat16::printDirName(const dir_t& dir, uint8_t width) {$/;"	f	class:Fat16
printDirName	./Robot_Control/Fat16.cpp	/^void Fat16::printDirName(const dir_t& dir, uint8_t width) {$/;"	f	class:Fat16
printDirName	./SD/utility/SdFile.cpp	/^void SdFile::printDirName(const dir_t& dir, uint8_t width) {$/;"	f	class:SdFile
printDirName	./SD/utility/SdFile.cpp	/^void SdFile::printDirName(const dir_t& dir, uint8_t width) {$/;"	f	class:SdFile
printFatDate	./Robot_Control/Fat16.cpp	/^void Fat16::printFatDate(uint16_t fatDate) {$/;"	f	class:Fat16
printFatDate	./Robot_Control/Fat16.cpp	/^void Fat16::printFatDate(uint16_t fatDate) {$/;"	f	class:Fat16
printFatDate	./SD/utility/SdFile.cpp	/^void SdFile::printFatDate(uint16_t fatDate) {$/;"	f	class:SdFile
printFatDate	./SD/utility/SdFile.cpp	/^void SdFile::printFatDate(uint16_t fatDate) {$/;"	f	class:SdFile
printFatTime	./Robot_Control/Fat16.cpp	/^void Fat16::printFatTime(uint16_t fatTime) {$/;"	f	class:Fat16
printFatTime	./Robot_Control/Fat16.cpp	/^void Fat16::printFatTime(uint16_t fatTime) {$/;"	f	class:Fat16
printFatTime	./SD/utility/SdFile.cpp	/^void SdFile::printFatTime(uint16_t fatTime) {$/;"	f	class:SdFile
printFatTime	./SD/utility/SdFile.cpp	/^void SdFile::printFatTime(uint16_t fatTime) {$/;"	f	class:SdFile
PRINT_FILE_LINE	./WiFi/utility/debug.h	16;"	d
PRINT_FILE_LINE	./WiFi/utility/debug.h	16;"	d
printFirmwareVersion	./Firmata/Firmata.cpp	/^void FirmataClass::printFirmwareVersion(void)$/;"	f	class:FirmataClass
printFirmwareVersion	./Firmata/Firmata.cpp	/^void FirmataClass::printFirmwareVersion(void)$/;"	f	class:FirmataClass
printTwoDigits	./Robot_Control/Fat16.cpp	/^void Fat16::printTwoDigits(uint8_t v) {$/;"	f	class:Fat16
printTwoDigits	./Robot_Control/Fat16.cpp	/^void Fat16::printTwoDigits(uint8_t v) {$/;"	f	class:Fat16
printTwoDigits	./SD/utility/SdFile.cpp	/^void SdFile::printTwoDigits(uint8_t v) {$/;"	f	class:SdFile
printTwoDigits	./SD/utility/SdFile.cpp	/^void SdFile::printTwoDigits(uint8_t v) {$/;"	f	class:SdFile
printVersion	./Firmata/Firmata.cpp	/^void FirmataClass::printVersion(void) {$/;"	f	class:FirmataClass
printVersion	./Firmata/Firmata.cpp	/^void FirmataClass::printVersion(void) {$/;"	f	class:FirmataClass
processInput	./Firmata/Firmata.cpp	/^void FirmataClass::processInput(void)$/;"	f	class:FirmataClass
processInput	./Firmata/Firmata.cpp	/^void FirmataClass::processInput(void)$/;"	f	class:FirmataClass
ProcessResponse	./Ethernet/Dns.cpp	/^uint16_t DNSClient::ProcessResponse(uint16_t aTimeout, IPAddress& aAddress)$/;"	f	class:DNSClient
ProcessResponse	./Ethernet/Dns.cpp	/^uint16_t DNSClient::ProcessResponse(uint16_t aTimeout, IPAddress& aAddress)$/;"	f	class:DNSClient
process	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::process(){$/;"	f	class:RobotMotorBoard
process	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::process(){$/;"	f	class:RobotMotorBoard
processSysexMessage	./Firmata/Firmata.cpp	/^void FirmataClass::processSysexMessage(void)$/;"	f	class:FirmataClass
processSysexMessage	./Firmata/Firmata.cpp	/^void FirmataClass::processSysexMessage(void)$/;"	f	class:FirmataClass
PROGMEM	./GSM/GSM3ShieldV1AccessProvider.cpp	/^const char _command_AT[] PROGMEM = "AT";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1AccessProvider.cpp	/^const char _command_AT[] PROGMEM = "AT";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1AccessProvider.cpp	/^const char _command_CGREG[] PROGMEM = "AT+CGREG?";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1AccessProvider.cpp	/^const char _command_CGREG[] PROGMEM = "AT+CGREG?";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^const char _command_CGATT[] PROGMEM = "AT+CGATT=";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^const char _command_CGATT[] PROGMEM = "AT+CGATT=";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^const char _command_SEPARATOR[] PROGMEM = "\\",\\"";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1DataNetworkProvider.cpp	/^const char _command_SEPARATOR[] PROGMEM = "\\",\\"";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^const char _command_MultiQISRVC[] PROGMEM = "AT+QISRVC=";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^const char _command_MultiQISRVC[] PROGMEM = "AT+QISRVC=";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^const char _command_QILOCIP[] PROGMEM = "AT+QILOCIP";$/;"	v
PROGMEM	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^const char _command_QILOCIP[] PROGMEM = "AT+QILOCIP";$/;"	v
PROGMEM	./GSM/GSM3SoftSerial.cpp	/^static const DELAY_TABLE table[] PROGMEM = $/;"	v	file:
PROGMEM	./GSM/GSM3SoftSerial.cpp	/^static const DELAY_TABLE table[] PROGMEM = $/;"	v	file:
PROGMEM	./Robot_Control/Squawk.cpp	/^const int8_t sine_tbl[32] PROGMEM = {$/;"	v
PROGMEM	./Robot_Control/Squawk.cpp	/^const int8_t sine_tbl[32] PROGMEM = {$/;"	v
PROGMEM	./Robot_Control/Squawk.cpp	/^const uint16_t period_tbl[84] PROGMEM = {$/;"	v
PROGMEM	./Robot_Control/Squawk.cpp	/^const uint16_t period_tbl[84] PROGMEM = {$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script10[] PROGMEM="  Press middle key\\n   to continue...";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script10[] PROGMEM="  Press middle key\\n   to continue...";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script11[] PROGMEM="  Choose \\"enter\\" to\\n\\n  finish the input";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script11[] PROGMEM="  Choose \\"enter\\" to\\n\\n  finish the input";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script1[] PROGMEM="What's your name?";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script1[] PROGMEM="What's your name?";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script2[] PROGMEM="Give me a name!";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script2[] PROGMEM="Give me a name!";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script3[] PROGMEM="And the country?";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script3[] PROGMEM="And the country?";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script4[] PROGMEM="The city you're in?";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script4[] PROGMEM="The city you're in?";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script5[] PROGMEM="  Plug me to\\n\\n  your computer\\n\\n  and start coding!";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script5[] PROGMEM="  Plug me to\\n\\n  your computer\\n\\n  and start coding!";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script6[] PROGMEM="     Hello User!\\n\\n It's me, your robot\\n\\n    I'm alive! <3";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script6[] PROGMEM="     Hello User!\\n\\n It's me, your robot\\n\\n    I'm alive! <3";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script7[] PROGMEM="  First I need some\\n\\n   input from you!";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script7[] PROGMEM="  First I need some\\n\\n   input from you!";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script8[] PROGMEM="     Use the knob\\n\\n   to select letters";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script8[] PROGMEM="     Use the knob\\n\\n   to select letters";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script9[] PROGMEM="   Use L\/R button\\n\\n to move the cursor,\\n\\n  middle to confirm";$/;"	v
PROGMEM	./Robot_Control/utility/scripts_Hello_User.h	/^const prog_char hello_user_script9[] PROGMEM="   Use L\/R button\\n\\n to move the cursor,\\n\\n  middle to confirm";$/;"	v
PROGMEM	./SoftwareSerial/SoftwareSerial.cpp	/^static const DELAY_TABLE table[] PROGMEM = $/;"	v	file:
PROGMEM	./SoftwareSerial/SoftwareSerial.cpp	/^static const DELAY_TABLE table[] PROGMEM = $/;"	v	file:
prv_m	./Robot_Control/SdInfo.h	/^  unsigned prv_m : 4;  \/\/ Product revision n.m$/;"	m	struct:CID
prv_m	./Robot_Control/SdInfo.h	/^  unsigned prv_m : 4;  \/\/ Product revision n.m$/;"	m	struct:CID
prv_m	./SD/utility/SdInfo.h	/^  unsigned prv_m : 4;  \/\/ Product revision n.m$/;"	m	struct:CID
prv_m	./SD/utility/SdInfo.h	/^  unsigned prv_m : 4;  \/\/ Product revision n.m$/;"	m	struct:CID
prv_n	./Robot_Control/SdInfo.h	/^  unsigned prv_n : 4;$/;"	m	struct:CID
prv_n	./Robot_Control/SdInfo.h	/^  unsigned prv_n : 4;$/;"	m	struct:CID
prv_n	./SD/utility/SdInfo.h	/^  unsigned prv_n : 4;$/;"	m	struct:CID
prv_n	./SD/utility/SdInfo.h	/^  unsigned prv_n : 4;$/;"	m	struct:CID
psn	./Robot_Control/SdInfo.h	/^  uint32_t psn;  \/\/ Product serial number$/;"	m	struct:CID
psn	./Robot_Control/SdInfo.h	/^  uint32_t psn;  \/\/ Product serial number$/;"	m	struct:CID
psn	./SD/utility/SdInfo.h	/^  uint32_t psn;  \/\/ Product serial number$/;"	m	struct:CID
psn	./SD/utility/SdInfo.h	/^  uint32_t psn;  \/\/ Product serial number$/;"	m	struct:CID
p_start	./Robot_Control/Squawk.cpp	/^    uint8_t *p_start;$/;"	m	class:StreamROM	file:
p_start	./Robot_Control/Squawk.cpp	/^    uint8_t *p_start;$/;"	m	class:StreamROM	file:
pto_t	./Robot_Control/Squawk.cpp	/^} pto_t;$/;"	t	typeref:struct:__anon16	file:
pto_t	./Robot_Control/Squawk.cpp	/^} pto_t;$/;"	t	typeref:struct:__anon16	file:
pul_max	./Robot_Control/keyboard.cpp	/^int pul_max[]={10,153,339,514,752};$/;"	v
pul_max	./Robot_Control/keyboard.cpp	/^int pul_max[]={10,153,339,514,752};$/;"	v
pul_min	./Robot_Control/keyboard.cpp	/^int pul_min[]={0,133,319,494,732};$/;"	v
pul_min	./Robot_Control/keyboard.cpp	/^int pul_min[]={0,133,319,494,732};$/;"	v
pulse0	./SoftwareServo/SoftwareServo.h	/^    uint16_t pulse0;     \/\/ pulse width in TCNT0 counts$/;"	m	class:SoftwareServo
pulse0	./SoftwareServo/SoftwareServo.h	/^    uint16_t pulse0;     \/\/ pulse width in TCNT0 counts$/;"	m	class:SoftwareServo
pulseEnable	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::pulseEnable(void) {$/;"	f	class:LiquidCrystal
pulseEnable	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::pulseEnable(void) {$/;"	f	class:LiquidCrystal
PUP	./Ethernet/utility/w5100.h	/^  static const uint8_t PUP  = 12;$/;"	m	class:IPPROTO
PUP	./Ethernet/utility/w5100.h	/^  static const uint8_t PUP  = 12;$/;"	m	class:IPPROTO
pushColor	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::pushColor(uint16_t color) {$/;"	f	class:Arduino_LCD
pushColor	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::pushColor(uint16_t color) {$/;"	f	class:Arduino_LCD
pushColor	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::pushColor(uint16_t color) {$/;"	f	class:Adafruit_ST7735
pushColor	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::pushColor(uint16_t color) {$/;"	f	class:Adafruit_ST7735
pushInput	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::pushInput(int code){$/;"	f	class:TextManager
pushInput	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::pushInput(int code){$/;"	f	class:TextManager
PWM	./Firmata/Firmata.h	71;"	d
PWM	./Firmata/Firmata.h	71;"	d
pwmfreq	./AFMotor/AFMotor.h	/^  uint8_t motornum, pwmfreq;$/;"	m	class:AF_DCMotor
pwmfreq	./AFMotor/AFMotor.h	/^  uint8_t motornum, pwmfreq;$/;"	m	class:AF_DCMotor
quectelStrings	./GSM/GSM3ShieldV1BandManagement.h	/^		char* quectelStrings[NUMBEROFBANDS];\/\/ = {"\\"EGSM_MODE\\"", "\\"DCS_MODE\\"", "\\"PCS_MODE\\"",$/;"	m	class:GSM3ShieldV1BandManagement
quectelStrings	./GSM/GSM3ShieldV1BandManagement.h	/^		char* quectelStrings[NUMBEROFBANDS];\/\/ = {"\\"EGSM_MODE\\"", "\\"DCS_MODE\\"", "\\"PCS_MODE\\"",$/;"	m	class:GSM3ShieldV1BandManagement
QUERY_FLAG	./Ethernet/Dns.cpp	20;"	d	file:
QUERY_FLAG	./Ethernet/Dns.cpp	20;"	d	file:
QUERY_RESPONSE_MASK	./Ethernet/Dns.cpp	22;"	d	file:
QUERY_RESPONSE_MASK	./Ethernet/Dns.cpp	22;"	d	file:
R1_IDLE_STATE	./Robot_Control/SdCard.cpp	/^uint8_t const R1_IDLE_STATE  = 1;$/;"	v
R1_IDLE_STATE	./Robot_Control/SdCard.cpp	/^uint8_t const R1_IDLE_STATE  = 1;$/;"	v
R1_IDLE_STATE	./SD/utility/SdInfo.h	/^uint8_t const R1_IDLE_STATE = 0X01;$/;"	v
R1_IDLE_STATE	./SD/utility/SdInfo.h	/^uint8_t const R1_IDLE_STATE = 0X01;$/;"	v
R1_ILLEGAL_COMMAND	./SD/utility/SdInfo.h	/^uint8_t const R1_ILLEGAL_COMMAND = 0X04;$/;"	v
R1_ILLEGAL_COMMAND	./SD/utility/SdInfo.h	/^uint8_t const R1_ILLEGAL_COMMAND = 0X04;$/;"	v
R1_READY_STATE	./Robot_Control/SdCard.cpp	/^uint8_t const R1_READY_STATE = 0;$/;"	v
R1_READY_STATE	./Robot_Control/SdCard.cpp	/^uint8_t const R1_READY_STATE = 0;$/;"	v
R1_READY_STATE	./SD/utility/SdInfo.h	/^uint8_t const R1_READY_STATE = 0X00;$/;"	v
R1_READY_STATE	./SD/utility/SdInfo.h	/^uint8_t const R1_READY_STATE = 0X00;$/;"	v
r2w_factor	./Robot_Control/SdInfo.h	/^  unsigned r2w_factor : 3;$/;"	m	struct:CSD
r2w_factor	./Robot_Control/SdInfo.h	/^  unsigned r2w_factor : 3;$/;"	m	struct:CSD
r2w_factor	./SD/utility/SdInfo.h	/^  unsigned r2w_factor : 3;$/;"	m	struct:CSDV1
r2w_factor	./SD/utility/SdInfo.h	/^  unsigned r2w_factor : 3;$/;"	m	struct:CSDV1
r2w_factor	./SD/utility/SdInfo.h	/^  unsigned r2w_factor : 3;$/;"	m	struct:CSDV2
r2w_factor	./SD/utility/SdInfo.h	/^  unsigned r2w_factor : 3;$/;"	m	struct:CSDV2
RawDegrees	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees() : deg(0), billionths(0), negative(false)$/;"	f	struct:RawDegrees
RawDegrees	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees() : deg(0), billionths(0), negative(false)$/;"	f	struct:RawDegrees
RawDegrees	./TinyGPSPlus/TinyGPS++.h	/^struct RawDegrees$/;"	s
RawDegrees	./TinyGPSPlus/TinyGPS++.h	/^struct RawDegrees$/;"	s
rawDev_	./Robot_Control/Fat16.cpp	/^SdCard *Fat16::rawDev_ = 0;             \/\/ class for block read and write$/;"	m	class:Fat16	file:
rawDev_	./Robot_Control/Fat16.cpp	/^SdCard *Fat16::rawDev_ = 0;             \/\/ class for block read and write$/;"	m	class:Fat16	file:
rawDev_	./Robot_Control/Fat16.h	/^  static SdCard *rawDev_;             \/\/ Device$/;"	m	class:Fat16
rawDev_	./Robot_Control/Fat16.h	/^  static SdCard *rawDev_;             \/\/ Device$/;"	m	class:Fat16
RAW	./Ethernet/utility/w5100.h	/^  static const uint8_t RAW  = 255;$/;"	m	class:IPPROTO
RAW	./Ethernet/utility/w5100.h	/^  static const uint8_t RAW  = 255;$/;"	m	class:IPPROTO
rawLatData	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees rawLatData, rawLngData, rawNewLatData, rawNewLngData;$/;"	m	struct:TinyGPSLocation
rawLatData	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees rawLatData, rawLngData, rawNewLatData, rawNewLngData;$/;"	m	struct:TinyGPSLocation
rawLat	./TinyGPSPlus/TinyGPS++.h	/^   const RawDegrees &rawLat()     { updated = false; return rawLatData; }$/;"	f	struct:TinyGPSLocation
rawLat	./TinyGPSPlus/TinyGPS++.h	/^   const RawDegrees &rawLat()     { updated = false; return rawLatData; }$/;"	f	struct:TinyGPSLocation
rawLngData	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees rawLatData, rawLngData, rawNewLatData, rawNewLngData;$/;"	m	struct:TinyGPSLocation
rawLngData	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees rawLatData, rawLngData, rawNewLatData, rawNewLngData;$/;"	m	struct:TinyGPSLocation
rawLng	./TinyGPSPlus/TinyGPS++.h	/^   const RawDegrees &rawLng()     { updated = false; return rawLngData; }$/;"	f	struct:TinyGPSLocation
rawLng	./TinyGPSPlus/TinyGPS++.h	/^   const RawDegrees &rawLng()     { updated = false; return rawLngData; }$/;"	f	struct:TinyGPSLocation
rawNewLatData	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees rawLatData, rawLngData, rawNewLatData, rawNewLngData;$/;"	m	struct:TinyGPSLocation
rawNewLatData	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees rawLatData, rawLngData, rawNewLatData, rawNewLngData;$/;"	m	struct:TinyGPSLocation
rawNewLngData	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees rawLatData, rawLngData, rawNewLatData, rawNewLngData;$/;"	m	struct:TinyGPSLocation
rawNewLngData	./TinyGPSPlus/TinyGPS++.h	/^   RawDegrees rawLatData, rawLngData, rawNewLatData, rawNewLngData;$/;"	m	struct:TinyGPSLocation
RAW_SOCKET	./WiFi/utility/socket.h	13;"	d
RAW_SOCKET	./WiFi/utility/socket.h	13;"	d
RBASE	./Ethernet/utility/w5100.h	/^  uint16_t RBASE[SOCKETS]; \/\/ Rx buffer base address$/;"	m	class:W5100Class
RBASE	./Ethernet/utility/w5100.h	/^  uint16_t RBASE[SOCKETS]; \/\/ Rx buffer base address$/;"	m	class:W5100Class
Rcmd1	./Robot_Control/Arduino_LCD.cpp	/^Rcmd1[] = {                   \/\/ Init for 7735R, part 1 (red or green tab)$/;"	v
Rcmd1	./Robot_Control/Arduino_LCD.cpp	/^Rcmd1[] = {                   \/\/ Init for 7735R, part 1 (red or green tab)$/;"	v
Rcmd1	./TFT/utility/Adafruit_ST7735.cpp	/^  Rcmd1[] = {                 \/\/ Init for 7735R, part 1 (red or green tab)$/;"	v	file:
Rcmd1	./TFT/utility/Adafruit_ST7735.cpp	/^  Rcmd1[] = {                 \/\/ Init for 7735R, part 1 (red or green tab)$/;"	v	file:
Rcmd2green	./Robot_Control/Arduino_LCD.cpp	/^  Rcmd2green[] = {            \/\/ Init for 7735R, part 2 (green tab only)$/;"	v
Rcmd2green	./Robot_Control/Arduino_LCD.cpp	/^  Rcmd2green[] = {            \/\/ Init for 7735R, part 2 (green tab only)$/;"	v
Rcmd2green	./TFT/utility/Adafruit_ST7735.cpp	/^  Rcmd2green[] = {            \/\/ Init for 7735R, part 2 (green tab only)$/;"	v	file:
Rcmd2green	./TFT/utility/Adafruit_ST7735.cpp	/^  Rcmd2green[] = {            \/\/ Init for 7735R, part 2 (green tab only)$/;"	v	file:
Rcmd2red	./Robot_Control/Arduino_LCD.cpp	/^  Rcmd2red[] = {              \/\/ Init for 7735R, part 2 (red tab only)$/;"	v
Rcmd2red	./Robot_Control/Arduino_LCD.cpp	/^  Rcmd2red[] = {              \/\/ Init for 7735R, part 2 (red tab only)$/;"	v
Rcmd2red	./TFT/utility/Adafruit_ST7735.cpp	/^  Rcmd2red[] = {              \/\/ Init for 7735R, part 2 (red tab only)$/;"	v	file:
Rcmd2red	./TFT/utility/Adafruit_ST7735.cpp	/^  Rcmd2red[] = {              \/\/ Init for 7735R, part 2 (red tab only)$/;"	v	file:
Rcmd3	./Robot_Control/Arduino_LCD.cpp	/^  Rcmd3[] = {                 \/\/ Init for 7735R, part 3 (red or green tab)$/;"	v
Rcmd3	./Robot_Control/Arduino_LCD.cpp	/^  Rcmd3[] = {                 \/\/ Init for 7735R, part 3 (red or green tab)$/;"	v
Rcmd3	./TFT/utility/Adafruit_ST7735.cpp	/^  Rcmd3[] = {                 \/\/ Init for 7735R, part 3 (red or green tab)$/;"	v	file:
Rcmd3	./TFT/utility/Adafruit_ST7735.cpp	/^  Rcmd3[] = {                 \/\/ Init for 7735R, part 3 (red or green tab)$/;"	v	file:
read16	./Robot_Control/lcd.cpp	/^uint16_t read16(Fat16& f) {$/;"	f
read16	./Robot_Control/lcd.cpp	/^uint16_t read16(Fat16& f) {$/;"	f
read16	./TFT/utility/Adafruit_GFX.h	/^uint16_t PImage::read16(File f) {$/;"	f	class:PImage
read16	./TFT/utility/Adafruit_GFX.h	/^uint16_t PImage::read16(File f) {$/;"	f	class:PImage
read32	./Robot_Control/lcd.cpp	/^uint32_t read32(Fat16& f) {$/;"	f
read32	./Robot_Control/lcd.cpp	/^uint32_t read32(Fat16& f) {$/;"	f
read32	./TFT/utility/Adafruit_GFX.h	/^uint32_t PImage::read32(File f) {$/;"	f	class:PImage
read32	./TFT/utility/Adafruit_GFX.h	/^uint32_t PImage::read32(File f) {$/;"	f	class:PImage
readAccelerometer	./Esplora/Esplora.cpp	/^int _Esplora::readAccelerometer(const byte axis) {$/;"	f	class:_Esplora
readAccelerometer	./Esplora/Esplora.cpp	/^int _Esplora::readAccelerometer(const byte axis) {$/;"	f	class:_Esplora
readAndCheckChar	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::readAndCheckChar(char checkChar, char* readChar)$/;"	f	class:SpiDrv
readAndCheckChar	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::readAndCheckChar(char checkChar, char* readChar)$/;"	f	class:SpiDrv
read_blk_misalign	./Robot_Control/SdInfo.h	/^  unsigned read_blk_misalign :1;$/;"	m	struct:CSD
read_blk_misalign	./Robot_Control/SdInfo.h	/^  unsigned read_blk_misalign :1;$/;"	m	struct:CSD
read_blk_misalign	./SD/utility/SdInfo.h	/^  unsigned read_blk_misalign :1;$/;"	m	struct:CSDV1
read_blk_misalign	./SD/utility/SdInfo.h	/^  unsigned read_blk_misalign :1;$/;"	m	struct:CSDV1
read_blk_misalign	./SD/utility/SdInfo.h	/^  unsigned read_blk_misalign :1;$/;"	m	struct:CSDV2
read_blk_misalign	./SD/utility/SdInfo.h	/^  unsigned read_blk_misalign :1;$/;"	m	struct:CSDV2
read_bl_len	./Robot_Control/SdInfo.h	/^  unsigned read_bl_len : 4;$/;"	m	struct:CSD
read_bl_len	./Robot_Control/SdInfo.h	/^  unsigned read_bl_len : 4;$/;"	m	struct:CSD
read_bl_len	./SD/utility/SdInfo.h	/^  unsigned read_bl_len : 4;$/;"	m	struct:CSDV1
read_bl_len	./SD/utility/SdInfo.h	/^  unsigned read_bl_len : 4;$/;"	m	struct:CSDV1
read_bl_len	./SD/utility/SdInfo.h	/^  unsigned read_bl_len : 4;$/;"	m	struct:CSDV2
read_bl_len	./SD/utility/SdInfo.h	/^  unsigned read_bl_len : 4;$/;"	m	struct:CSDV2
readBlock	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::readBlock(uint32_t blockNumber, uint8_t* dst) {$/;"	f	class:SdCard
readBlock	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::readBlock(uint32_t blockNumber, uint8_t* dst) {$/;"	f	class:SdCard
readBlock	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::readBlock(uint32_t block, uint8_t* dst) {$/;"	f	class:Sd2Card
readBlock	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::readBlock(uint32_t block, uint8_t* dst) {$/;"	f	class:Sd2Card
readBlock	./SD/utility/SdFat.h	/^  uint8_t readBlock(uint32_t block, uint8_t* dst) {$/;"	f	class:SdVolume
readBlock	./SD/utility/SdFat.h	/^  uint8_t readBlock(uint32_t block, uint8_t* dst) {$/;"	f	class:SdVolume
read_bl_partial	./Robot_Control/SdInfo.h	/^  unsigned read_bl_partial : 1;$/;"	m	struct:CSD
read_bl_partial	./Robot_Control/SdInfo.h	/^  unsigned read_bl_partial : 1;$/;"	m	struct:CSD
read_bl_partial	./SD/utility/SdInfo.h	/^  unsigned read_bl_partial : 1;$/;"	m	struct:CSDV1
read_bl_partial	./SD/utility/SdInfo.h	/^  unsigned read_bl_partial : 1;$/;"	m	struct:CSDV1
read_bl_partial	./SD/utility/SdInfo.h	/^  unsigned read_bl_partial : 1;$/;"	m	struct:CSDV2
read_bl_partial	./SD/utility/SdInfo.h	/^  unsigned read_bl_partial : 1;$/;"	m	struct:CSDV2
readBuffer	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::readBuffer(unsigned int eeaddress, byte *buffer, int length ){$/;"	f	class:EEPROM_I2C
readBuffer	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::readBuffer(unsigned int eeaddress, byte *buffer, int length ){$/;"	f	class:EEPROM_I2C
readButton	./Esplora/Esplora.cpp	/^boolean _Esplora::readButton(byte ch) {$/;"	f	class:_Esplora
readButton	./Esplora/Esplora.cpp	/^boolean _Esplora::readButton(byte ch) {$/;"	f	class:_Esplora
readByte	./Robot_Control/EasyTransfer2.cpp	/^uint8_t EasyTransfer2::readByte(){$/;"	f	class:EasyTransfer2
readByte	./Robot_Control/EasyTransfer2.cpp	/^uint8_t EasyTransfer2::readByte(){$/;"	f	class:EasyTransfer2
readByte	./Robot_Control/EEPROM_I2C.cpp	/^byte EEPROM_I2C::readByte(unsigned int eeaddress){$/;"	f	class:EEPROM_I2C
readByte	./Robot_Control/EEPROM_I2C.cpp	/^byte EEPROM_I2C::readByte(unsigned int eeaddress){$/;"	f	class:EEPROM_I2C
readByte	./Robot_Motor/EasyTransfer2.cpp	/^uint8_t EasyTransfer2::readByte(){$/;"	f	class:EasyTransfer2
readByte	./Robot_Motor/EasyTransfer2.cpp	/^uint8_t EasyTransfer2::readByte(){$/;"	f	class:EasyTransfer2
readChannel	./Esplora/Esplora.cpp	/^unsigned int _Esplora::readChannel(byte channel) {$/;"	f	class:_Esplora
readChannel	./Esplora/Esplora.cpp	/^unsigned int _Esplora::readChannel(byte channel) {$/;"	f	class:_Esplora
readChar	./WiFi/utility/spi_drv.cpp	/^char SpiDrv::readChar()$/;"	f	class:SpiDrv
readChar	./WiFi/utility/spi_drv.cpp	/^char SpiDrv::readChar()$/;"	f	class:SpiDrv
readCID	./Robot_Control/SdCard.h	/^  uint8_t readCID(cid_t* cid) {$/;"	f	class:SdCard
readCID	./Robot_Control/SdCard.h	/^  uint8_t readCID(cid_t* cid) {$/;"	f	class:SdCard
readCID	./SD/utility/Sd2Card.h	/^  uint8_t readCID(cid_t* cid) {$/;"	f	class:Sd2Card
readCID	./SD/utility/Sd2Card.h	/^  uint8_t readCID(cid_t* cid) {$/;"	f	class:Sd2Card
readCSD	./SD/utility/Sd2Card.h	/^  uint8_t readCSD(csd_t* csd) {$/;"	f	class:Sd2Card
readCSD	./SD/utility/Sd2Card.h	/^  uint8_t readCSD(csd_t* csd) {$/;"	f	class:Sd2Card
read_data	./Ethernet/utility/w5100.cpp	/^void W5100Class::read_data(SOCKET s, volatile uint8_t *src, volatile uint8_t *dst, uint16_t len)$/;"	f	class:W5100Class
read_data	./Ethernet/utility/w5100.cpp	/^void W5100Class::read_data(SOCKET s, volatile uint8_t *src, volatile uint8_t *dst, uint16_t len)$/;"	f	class:W5100Class
readData	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::readData(uint32_t block,$/;"	f	class:Sd2Card
readData	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::readData(uint32_t block,$/;"	f	class:Sd2Card
readData	./SD/utility/SdFat.h	/^  uint8_t readData(uint32_t block, uint16_t offset,$/;"	f	class:SdVolume
readData	./SD/utility/SdFat.h	/^  uint8_t readData(uint32_t block, uint16_t offset,$/;"	f	class:SdVolume
readDirCache	./SD/utility/SdFile.cpp	/^dir_t* SdFile::readDirCache(void) {$/;"	f	class:SdFile
readDirCache	./SD/utility/SdFile.cpp	/^dir_t* SdFile::readDirCache(void) {$/;"	f	class:SdFile
readDir	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::readDir(dir_t* dir, uint16_t* index, uint8_t skip) {$/;"	f	class:Fat16
readDir	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::readDir(dir_t* dir, uint16_t* index, uint8_t skip) {$/;"	f	class:Fat16
readDir	./Robot_Control/Fat16.h	/^  static uint8_t readDir(dir_t& dir, uint16_t& index,  \/\/ NOLINT$/;"	f	class:Fat16
readDir	./Robot_Control/Fat16.h	/^  static uint8_t readDir(dir_t& dir, uint16_t& index,  \/\/ NOLINT$/;"	f	class:Fat16
readDir	./SD/utility/SdFat.h	/^  int8_t readDir(dir_t& dir) {return readDir(&dir);}  \/\/ NOLINT$/;"	f	class:SdFile
readDir	./SD/utility/SdFat.h	/^  int8_t readDir(dir_t& dir) {return readDir(&dir);}  \/\/ NOLINT$/;"	f	class:SdFile
readDir	./SD/utility/SdFile.cpp	/^int8_t SdFile::readDir(dir_t* dir) {$/;"	f	class:SdFile
readDir	./SD/utility/SdFile.cpp	/^int8_t SdFile::readDir(dir_t* dir) {$/;"	f	class:SdFile
read	./EEPROM/EEPROM.cpp	/^uint8_t EEPROMClass::read(int address)$/;"	f	class:EEPROMClass
read	./EEPROM/EEPROM.cpp	/^uint8_t EEPROMClass::read(int address)$/;"	f	class:EEPROMClass
readEnd	./SD/utility/Sd2Card.cpp	/^void Sd2Card::readEnd(void) {$/;"	f	class:Sd2Card
readEnd	./SD/utility/Sd2Card.cpp	/^void Sd2Card::readEnd(void) {$/;"	f	class:Sd2Card
read	./Ethernet/EthernetClient.cpp	/^int EthernetClient::read() {$/;"	f	class:EthernetClient
read	./Ethernet/EthernetClient.cpp	/^int EthernetClient::read() {$/;"	f	class:EthernetClient
read	./Ethernet/EthernetClient.cpp	/^int EthernetClient::read(uint8_t *buf, size_t size) {$/;"	f	class:EthernetClient
read	./Ethernet/EthernetClient.cpp	/^int EthernetClient::read(uint8_t *buf, size_t size) {$/;"	f	class:EthernetClient
read	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::read()$/;"	f	class:EthernetUDP
read	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::read()$/;"	f	class:EthernetUDP
read	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::read(unsigned char* buffer, size_t len)$/;"	f	class:EthernetUDP
read	./Ethernet/EthernetUdp.cpp	/^int EthernetUDP::read(unsigned char* buffer, size_t len)$/;"	f	class:EthernetUDP
read	./Ethernet/EthernetUdp.h	/^  virtual int read(char* buffer, size_t len) { return read((unsigned char*)buffer, len); };$/;"	f	class:EthernetUDP
read	./Ethernet/EthernetUdp.h	/^  virtual int read(char* buffer, size_t len) { return read((unsigned char*)buffer, len); };$/;"	f	class:EthernetUDP
read	./Ethernet/utility/w5100.cpp	/^uint16_t W5100Class::read(uint16_t _addr, uint8_t *_buf, uint16_t _len)$/;"	f	class:W5100Class
read	./Ethernet/utility/w5100.cpp	/^uint16_t W5100Class::read(uint16_t _addr, uint8_t *_buf, uint16_t _len)$/;"	f	class:W5100Class
read	./Ethernet/utility/w5100.cpp	/^uint8_t W5100Class::read(uint16_t _addr)$/;"	f	class:W5100Class
read	./Ethernet/utility/w5100.cpp	/^uint8_t W5100Class::read(uint16_t _addr)$/;"	f	class:W5100Class
read	./GSM/GSM3CircularBuffer.cpp	/^char GSM3CircularBuffer::read()$/;"	f	class:GSM3CircularBuffer
read	./GSM/GSM3CircularBuffer.cpp	/^char GSM3CircularBuffer::read()$/;"	f	class:GSM3CircularBuffer
read	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::read()$/;"	f	class:GSM3MobileClientService
read	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::read()$/;"	f	class:GSM3MobileClientService
read	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::read(uint8_t *buf, size_t size)$/;"	f	class:GSM3MobileClientService
read	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::read(uint8_t *buf, size_t size)$/;"	f	class:GSM3MobileClientService
read	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^int\/*char*\/ GSM3ShieldV1DirectModemProvider::read()$/;"	f	class:GSM3ShieldV1DirectModemProvider
read	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^int\/*char*\/ GSM3ShieldV1DirectModemProvider::read()$/;"	f	class:GSM3ShieldV1DirectModemProvider
read	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::read()$/;"	f	class:GSM3SMSService
read	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::read()$/;"	f	class:GSM3SMSService
readInt	./GSM/GSM3CircularBuffer.cpp	/^int GSM3CircularBuffer::readInt()$/;"	f	class:GSM3CircularBuffer
readInt	./GSM/GSM3CircularBuffer.cpp	/^int GSM3CircularBuffer::readInt()$/;"	f	class:GSM3CircularBuffer
readInt	./Robot_Control/EasyTransfer2.cpp	/^int EasyTransfer2::readInt(){$/;"	f	class:EasyTransfer2
readInt	./Robot_Control/EasyTransfer2.cpp	/^int EasyTransfer2::readInt(){$/;"	f	class:EasyTransfer2
readInt	./Robot_Motor/EasyTransfer2.cpp	/^int EasyTransfer2::readInt(){$/;"	f	class:EasyTransfer2
readInt	./Robot_Motor/EasyTransfer2.cpp	/^int EasyTransfer2::readInt(){$/;"	f	class:EasyTransfer2
_readIR	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_readIR(){$/;"	f	class:RobotMotorBoard
_readIR	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_readIR(){$/;"	f	class:RobotMotorBoard
readJoystickButton	./Esplora/Esplora.cpp	/^boolean _Esplora::readJoystickButton() {$/;"	f	class:_Esplora
readJoystickButton	./Esplora/Esplora.cpp	/^boolean _Esplora::readJoystickButton() {$/;"	f	class:_Esplora
readJoystickSwitch	./Esplora/Esplora.h	/^  inline unsigned int readJoystickSwitch() { return readChannel(CH_JOYSTICK_SW); }$/;"	f	class:_Esplora
readJoystickSwitch	./Esplora/Esplora.h	/^  inline unsigned int readJoystickSwitch() { return readChannel(CH_JOYSTICK_SW); }$/;"	f	class:_Esplora
readJoystickX	./Esplora/Esplora.h	/^  inline int readJoystickX() { $/;"	f	class:_Esplora
readJoystickX	./Esplora/Esplora.h	/^  inline int readJoystickX() { $/;"	f	class:_Esplora
readJoystickY	./Esplora/Esplora.h	/^  inline int readJoystickY() {$/;"	f	class:_Esplora
readJoystickY	./Esplora/Esplora.h	/^  inline int readJoystickY() {$/;"	f	class:_Esplora
readLightSensor	./Esplora/Esplora.h	/^  inline unsigned int readLightSensor() { return readChannel(CH_LIGHT); }$/;"	f	class:_Esplora
readLightSensor	./Esplora/Esplora.h	/^  inline unsigned int readLightSensor() { return readChannel(CH_LIGHT); }$/;"	f	class:_Esplora
readMicrophone	./Esplora/Esplora.h	/^  inline unsigned int readMicrophone() { return readChannel(CH_MIC); }$/;"	f	class:_Esplora
readMicrophone	./Esplora/Esplora.h	/^  inline unsigned int readMicrophone() { return readChannel(CH_MIC); }$/;"	f	class:_Esplora
readMicroseconds	./Servo/Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo
readMicroseconds	./Servo/Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo
readNetworks	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^String GSM3ShieldV1ScanNetworks::readNetworks()$/;"	f	class:GSM3ShieldV1ScanNetworks
readNetworks	./GSM/GSM3ShieldV1ScanNetworks.cpp	/^String GSM3ShieldV1ScanNetworks::readNetworks()$/;"	f	class:GSM3ShieldV1ScanNetworks
readParamLen16	./WiFi/utility/spi_drv.cpp	/^uint16_t SpiDrv::readParamLen16(uint16_t* param_len)$/;"	f	class:SpiDrv
readParamLen16	./WiFi/utility/spi_drv.cpp	/^uint16_t SpiDrv::readParamLen16(uint16_t* param_len)$/;"	f	class:SpiDrv
readParamLen8	./WiFi/utility/spi_drv.cpp	/^uint8_t SpiDrv::readParamLen8(uint8_t* param_len)$/;"	f	class:SpiDrv
readParamLen8	./WiFi/utility/spi_drv.cpp	/^uint8_t SpiDrv::readParamLen8(uint8_t* param_len)$/;"	f	class:SpiDrv
readPort	./Firmata/Boards.h	/^static inline unsigned char readPort(byte port, byte bitmask)$/;"	f
readPort	./Firmata/Boards.h	/^static inline unsigned char readPort(byte port, byte bitmask)$/;"	f
readRegister	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::readRegister(uint8_t cmd, void* buf) {$/;"	f	class:Sd2Card
readRegister	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::readRegister(uint8_t cmd, void* buf) {$/;"	f	class:Sd2Card
readReg	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::readReg(uint8_t cmd, void* buf) {$/;"	f	class:SdCard
readReg	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::readReg(uint8_t cmd, void* buf) {$/;"	f	class:SdCard
read	./Robot_Control/Fat16.cpp	/^int16_t Fat16::read(void* buf, uint16_t nbyte) {$/;"	f	class:Fat16
read	./Robot_Control/Fat16.cpp	/^int16_t Fat16::read(void* buf, uint16_t nbyte) {$/;"	f	class:Fat16
read	./Robot_Control/Fat16.cpp	/^int16_t Fat16::read(void) {$/;"	f	class:Fat16
read	./Robot_Control/Fat16.cpp	/^int16_t Fat16::read(void) {$/;"	f	class:Fat16
read	./Robot_Control/Squawk.cpp	/^    uint8_t read() { return pgm_read_byte(p_cursor++); }$/;"	f	class:StreamROM
read	./Robot_Control/Squawk.cpp	/^    uint8_t read() { return pgm_read_byte(p_cursor++); }$/;"	f	class:StreamROM
read	./Robot_Control/SquawkSD.cpp	/^    uint8_t read() { return f.read(); }$/;"	f	class:StreamFile
read	./Robot_Control/SquawkSD.cpp	/^    uint8_t read() { return f.read(); }$/;"	f	class:StreamFile
read	./Robot_Control/Wire.cpp	/^int TwoWire::read(void)$/;"	f	class:TwoWire
read	./Robot_Control/Wire.cpp	/^int TwoWire::read(void)$/;"	f	class:TwoWire
read	./SD/File.cpp	/^int File::read() {$/;"	f	class:File
read	./SD/File.cpp	/^int File::read() {$/;"	f	class:File
read	./SD/File.cpp	/^int File::read(void *buf, uint16_t nbyte) {$/;"	f	class:File
read	./SD/File.cpp	/^int File::read(void *buf, uint16_t nbyte) {$/;"	f	class:File
read	./SD/utility/SdFat.h	/^  int16_t read(void) {$/;"	f	class:SdFile
read	./SD/utility/SdFat.h	/^  int16_t read(void) {$/;"	f	class:SdFile
read	./SD/utility/SdFile.cpp	/^int16_t SdFile::read(void* buf, uint16_t nbyte) {$/;"	f	class:SdFile
read	./SD/utility/SdFile.cpp	/^int16_t SdFile::read(void* buf, uint16_t nbyte) {$/;"	f	class:SdFile
read	./Servo/Servo.cpp	/^int Servo::read() \/\/ return the value as degrees$/;"	f	class:Servo
read	./Servo/Servo.cpp	/^int Servo::read() \/\/ return the value as degrees$/;"	f	class:Servo
readSlider	./Esplora/Esplora.h	/^  inline unsigned int readSlider() { return readChannel(CH_SLIDER); }$/;"	f	class:_Esplora
readSlider	./Esplora/Esplora.h	/^  inline unsigned int readSlider() { return readChannel(CH_SLIDER); }$/;"	f	class:_Esplora
readSMS	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::readSMS()$/;"	f	class:GSM3MobileMockupProvider
readSMS	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::readSMS()$/;"	f	class:GSM3MobileMockupProvider
readSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int readSMS(){return 0;};$/;"	f	class:GSM3MobileSMSProvider
readSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int readSMS(){return 0;};$/;"	f	class:GSM3MobileSMSProvider
readSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::readSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
readSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::readSMS()$/;"	f	class:GSM3ShieldV1SMSProvider
readSn	./Ethernet/utility/w5100.h	/^uint16_t W5100Class::readSn(SOCKET _s, uint16_t _addr, uint8_t *_buf, uint16_t _len) {$/;"	f	class:W5100Class
readSn	./Ethernet/utility/w5100.h	/^uint16_t W5100Class::readSn(SOCKET _s, uint16_t _addr, uint8_t *_buf, uint16_t _len) {$/;"	f	class:W5100Class
readSn	./Ethernet/utility/w5100.h	/^uint8_t W5100Class::readSn(SOCKET _s, uint16_t _addr) {$/;"	f	class:W5100Class
readSn	./Ethernet/utility/w5100.h	/^uint8_t W5100Class::readSn(SOCKET _s, uint16_t _addr) {$/;"	f	class:W5100Class
readSocket	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::readSocket(int idsocket, bool advance)$/;"	f	class:GSM3MobileMockupProvider
readSocket	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::readSocket(int idsocket, bool advance)$/;"	f	class:GSM3MobileMockupProvider
readSocket	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::readSocket(uint8_t *buf, size_t size, int idsocket)$/;"	f	class:GSM3MobileMockupProvider
readSocket	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::readSocket(uint8_t *buf, size_t size, int idsocket)$/;"	f	class:GSM3MobileMockupProvider
readSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::readSocket()$/;"	f	class:GSM3ShieldV1ClientProvider
readSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^int GSM3ShieldV1ClientProvider::readSocket()$/;"	f	class:GSM3ShieldV1ClientProvider
readSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::readSocket()$/;"	f	class:GSM3ShieldV1MultiClientProvider
readSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^int GSM3ShieldV1MultiClientProvider::readSocket()$/;"	f	class:GSM3ShieldV1MultiClientProvider
read	./SoftwareSerial/SoftwareSerial.cpp	/^int SoftwareSerial::read()$/;"	f	class:SoftwareSerial
read	./SoftwareSerial/SoftwareSerial.cpp	/^int SoftwareSerial::read()$/;"	f	class:SoftwareSerial
read	./SoftwareServo/SoftwareServo.cpp	/^uint8_t SoftwareServo::read()$/;"	f	class:SoftwareServo
read	./SoftwareServo/SoftwareServo.cpp	/^uint8_t SoftwareServo::read()$/;"	f	class:SoftwareServo
readTemperature	./Esplora/Esplora.cpp	/^int _Esplora::readTemperature(const byte scale) {$/;"	f	class:_Esplora
readTemperature	./Esplora/Esplora.cpp	/^int _Esplora::readTemperature(const byte scale) {$/;"	f	class:_Esplora
readTransfer	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::readTransfer(uint8_t* dst, uint16_t count) {$/;"	f	class:SdCard
readTransfer	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::readTransfer(uint8_t* dst, uint16_t count) {$/;"	f	class:SdCard
_readTrim	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_readTrim(){$/;"	f	class:RobotMotorBoard
_readTrim	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_readTrim(){$/;"	f	class:RobotMotorBoard
read	./WiFi/WiFiClient.cpp	/^int WiFiClient::read() {$/;"	f	class:WiFiClient
read	./WiFi/WiFiClient.cpp	/^int WiFiClient::read() {$/;"	f	class:WiFiClient
read	./WiFi/WiFiClient.cpp	/^int WiFiClient::read(uint8_t* buf, size_t size) {$/;"	f	class:WiFiClient
read	./WiFi/WiFiClient.cpp	/^int WiFiClient::read(uint8_t* buf, size_t size) {$/;"	f	class:WiFiClient
read	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::read()$/;"	f	class:WiFiUDP
read	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::read()$/;"	f	class:WiFiUDP
read	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::read(unsigned char* buffer, size_t len)$/;"	f	class:WiFiUDP
read	./WiFi/WiFiUdp.cpp	/^int WiFiUDP::read(unsigned char* buffer, size_t len)$/;"	f	class:WiFiUDP
read	./WiFi/WiFiUdp.h	/^  virtual int read(char* buffer, size_t len) { return read((unsigned char*)buffer, len); };$/;"	f	class:WiFiUDP
read	./WiFi/WiFiUdp.h	/^  virtual int read(char* buffer, size_t len) { return read((unsigned char*)buffer, len); };$/;"	f	class:WiFiUDP
read	./Wire/Wire.cpp	/^int TwoWire::read(void)$/;"	f	class:TwoWire
read	./Wire/Wire.cpp	/^int TwoWire::read(void)$/;"	f	class:TwoWire
ready	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::ready()$/;"	f	class:GSM3MobileClientService
ready	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::ready()$/;"	f	class:GSM3MobileClientService
ready	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::ready()$/;"	f	class:GSM3MobileMockupProvider
ready	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::ready()$/;"	f	class:GSM3MobileMockupProvider
ready	./GSM/GSM3MobileServerService.cpp	/^int GSM3MobileServerService::ready()$/;"	f	class:GSM3MobileServerService
ready	./GSM/GSM3MobileServerService.cpp	/^int GSM3MobileServerService::ready()$/;"	f	class:GSM3MobileServerService
ready	./GSM/GSM3ShieldV1AccessProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1AccessProvider
ready	./GSM/GSM3ShieldV1AccessProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1AccessProvider
ready	./GSM/GSM3ShieldV1BaseProvider.cpp	/^int GSM3ShieldV1BaseProvider::ready() $/;"	f	class:GSM3ShieldV1BaseProvider
ready	./GSM/GSM3ShieldV1BaseProvider.cpp	/^int GSM3ShieldV1BaseProvider::ready() $/;"	f	class:GSM3ShieldV1BaseProvider
ready	./GSM/GSM3ShieldV1CellManagement.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1CellManagement
ready	./GSM/GSM3ShieldV1CellManagement.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1CellManagement
ready	./GSM/GSM3ShieldV1ClientProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1ClientProvider
ready	./GSM/GSM3ShieldV1ClientProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1ClientProvider
ready	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1DataNetworkProvider
ready	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1DataNetworkProvider
ready	./GSM/GSM3ShieldV1.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1
ready	./GSM/GSM3ShieldV1.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1
ready	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1MultiClientProvider
ready	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1MultiClientProvider
ready	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1MultiServerProvider
ready	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1MultiServerProvider
ready	./GSM/GSM3ShieldV1ServerProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1ServerProvider
ready	./GSM/GSM3ShieldV1ServerProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1ServerProvider
ready	./GSM/GSM3ShieldV1SMSProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1SMSProvider
ready	./GSM/GSM3ShieldV1SMSProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1SMSProvider
ready	./GSM/GSM3ShieldV1VoiceProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1VoiceProvider
ready	./GSM/GSM3ShieldV1VoiceProvider.h	/^		int ready(){return GSM3ShieldV1BaseProvider::ready();};$/;"	f	class:GSM3ShieldV1VoiceProvider
ready	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::ready()$/;"	f	class:GSM3SMSService
ready	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::ready()$/;"	f	class:GSM3SMSService
ready	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::ready()$/;"	f	class:GSM3VoiceCallService
ready	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::ready()$/;"	f	class:GSM3VoiceCallService
_rebindInSec	./Ethernet/Dhcp.h	/^  signed long _rebindInSec;$/;"	m	class:DhcpClass
_rebindInSec	./Ethernet/Dhcp.h	/^  signed long _rebindInSec;$/;"	m	class:DhcpClass
_receiveBitMask	./GSM/GSM3SoftSerial.h	/^		uint8_t _receiveBitMask;$/;"	m	class:GSM3SoftSerial
_receiveBitMask	./GSM/GSM3SoftSerial.h	/^		uint8_t _receiveBitMask;$/;"	m	class:GSM3SoftSerial
_receiveBitMask	./SoftwareSerial/SoftwareSerial.h	/^  uint8_t _receiveBitMask;$/;"	m	class:SoftwareSerial
_receiveBitMask	./SoftwareSerial/SoftwareSerial.h	/^  uint8_t _receiveBitMask;$/;"	m	class:SoftwareSerial
_receive_buffer_head	./SoftwareSerial/SoftwareSerial.cpp	/^volatile uint8_t SoftwareSerial::_receive_buffer_head = 0;$/;"	m	class:SoftwareSerial	file:
_receive_buffer_head	./SoftwareSerial/SoftwareSerial.cpp	/^volatile uint8_t SoftwareSerial::_receive_buffer_head = 0;$/;"	m	class:SoftwareSerial	file:
_receive_buffer_head	./SoftwareSerial/SoftwareSerial.h	/^  static volatile uint8_t _receive_buffer_head;$/;"	m	class:SoftwareSerial
_receive_buffer_head	./SoftwareSerial/SoftwareSerial.h	/^  static volatile uint8_t _receive_buffer_head;$/;"	m	class:SoftwareSerial
_receive_buffer	./SoftwareSerial/SoftwareSerial.cpp	/^char SoftwareSerial::_receive_buffer[_SS_MAX_RX_BUFF]; $/;"	m	class:SoftwareSerial	file:
_receive_buffer	./SoftwareSerial/SoftwareSerial.cpp	/^char SoftwareSerial::_receive_buffer[_SS_MAX_RX_BUFF]; $/;"	m	class:SoftwareSerial	file:
_receive_buffer	./SoftwareSerial/SoftwareSerial.h	/^  static char _receive_buffer[_SS_MAX_RX_BUFF]; $/;"	m	class:SoftwareSerial
_receive_buffer	./SoftwareSerial/SoftwareSerial.h	/^  static char _receive_buffer[_SS_MAX_RX_BUFF]; $/;"	m	class:SoftwareSerial
_receive_buffer_tail	./SoftwareSerial/SoftwareSerial.cpp	/^volatile uint8_t SoftwareSerial::_receive_buffer_tail = 0;$/;"	m	class:SoftwareSerial	file:
_receive_buffer_tail	./SoftwareSerial/SoftwareSerial.cpp	/^volatile uint8_t SoftwareSerial::_receive_buffer_tail = 0;$/;"	m	class:SoftwareSerial	file:
_receive_buffer_tail	./SoftwareSerial/SoftwareSerial.h	/^  static volatile uint8_t _receive_buffer_tail;$/;"	m	class:SoftwareSerial
_receive_buffer_tail	./SoftwareSerial/SoftwareSerial.h	/^  static volatile uint8_t _receive_buffer_tail;$/;"	m	class:SoftwareSerial
receiveData	./Robot_Control/EasyTransfer2.cpp	/^boolean EasyTransfer2::receiveData(){$/;"	f	class:EasyTransfer2
receiveData	./Robot_Control/EasyTransfer2.cpp	/^boolean EasyTransfer2::receiveData(){$/;"	f	class:EasyTransfer2
receiveData	./Robot_Motor/EasyTransfer2.cpp	/^boolean EasyTransfer2::receiveData(){$/;"	f	class:EasyTransfer2
receiveData	./Robot_Motor/EasyTransfer2.cpp	/^boolean EasyTransfer2::receiveData(){$/;"	f	class:EasyTransfer2
_receivePin	./SoftwareSerial/SoftwareSerial.h	/^  uint8_t _receivePin;$/;"	m	class:SoftwareSerial
_receivePin	./SoftwareSerial/SoftwareSerial.h	/^  uint8_t _receivePin;$/;"	m	class:SoftwareSerial
_receivePortRegister	./GSM/GSM3SoftSerial.h	/^		volatile uint8_t *_receivePortRegister;$/;"	m	class:GSM3SoftSerial
_receivePortRegister	./GSM/GSM3SoftSerial.h	/^		volatile uint8_t *_receivePortRegister;$/;"	m	class:GSM3SoftSerial
_receivePortRegister	./SoftwareSerial/SoftwareSerial.h	/^  volatile uint8_t *_receivePortRegister;$/;"	m	class:SoftwareSerial
_receivePortRegister	./SoftwareSerial/SoftwareSerial.h	/^  volatile uint8_t *_receivePortRegister;$/;"	m	class:SoftwareSerial
RECEIVINGCALL	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	e	enum:GSM3_voiceCall_st
RECEIVINGCALL	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	e	enum:GSM3_voiceCall_st
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1BaseProvider.h	/^	virtual bool recognizeUnsolicitedEvent(byte from){return false;};$/;"	f	class:GSM3ShieldV1BaseProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1BaseProvider.h	/^	virtual bool recognizeUnsolicitedEvent(byte from){return false;};$/;"	f	class:GSM3ShieldV1BaseProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1ClientProvider.cpp	/^bool GSM3ShieldV1ClientProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1ClientProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1ClientProvider.cpp	/^bool GSM3ShieldV1ClientProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1ClientProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1.cpp	/^bool GSM3ShieldV1::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1.cpp	/^bool GSM3ShieldV1::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1DirectModemProvider.h	/^			bool recognizeUnsolicitedEvent(byte from){return false;};$/;"	f	class:GSM3ShieldV1DirectModemProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1DirectModemProvider.h	/^			bool recognizeUnsolicitedEvent(byte from){return false;};$/;"	f	class:GSM3ShieldV1DirectModemProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^bool GSM3ShieldV1MultiClientProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1MultiClientProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^bool GSM3ShieldV1MultiClientProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1MultiClientProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^bool GSM3ShieldV1MultiServerProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1MultiServerProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^bool GSM3ShieldV1MultiServerProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1MultiServerProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1ServerProvider.cpp	/^bool GSM3ShieldV1ServerProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1ServerProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1ServerProvider.cpp	/^bool GSM3ShieldV1ServerProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1ServerProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^bool GSM3ShieldV1VoiceProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1VoiceProvider
recognizeUnsolicitedEvent	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^bool GSM3ShieldV1VoiceProvider::recognizeUnsolicitedEvent(byte oldTail)$/;"	f	class:GSM3ShieldV1VoiceProvider
rect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::rect(int16_t x, int16_t y, int16_t width, int16_t height) {$/;"	f	class:Adafruit_GFX
rect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::rect(int16_t x, int16_t y, int16_t width, int16_t height) {$/;"	f	class:Adafruit_GFX
rect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::rect(int16_t x, int16_t y, int16_t width, int16_t height, int16_t radius) {$/;"	f	class:Adafruit_GFX
rect	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::rect(int16_t x, int16_t y, int16_t width, int16_t height, int16_t radius) {$/;"	f	class:Adafruit_GFX
rect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::rect(int16_t x, int16_t y, int16_t width, int16_t height) {$/;"	f	class:Adafruit_GFX
rect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::rect(int16_t x, int16_t y, int16_t width, int16_t height) {$/;"	f	class:Adafruit_GFX
rect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::rect(int16_t x, int16_t y, int16_t width, int16_t height, int16_t radius) {$/;"	f	class:Adafruit_GFX
rect	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::rect(int16_t x, int16_t y, int16_t width, int16_t height, int16_t radius) {$/;"	f	class:Adafruit_GFX
RECURSION_AVAILABLE_FLAG	./Ethernet/Dns.cpp	30;"	d	file:
RECURSION_AVAILABLE_FLAG	./Ethernet/Dns.cpp	30;"	d	file:
RECURSION_DESIRED_FLAG	./Ethernet/Dns.cpp	29;"	d	file:
RECURSION_DESIRED_FLAG	./Ethernet/Dns.cpp	29;"	d	file:
recv_data_processing	./Ethernet/utility/w5100.cpp	/^void W5100Class::recv_data_processing(SOCKET s, uint8_t *data, uint16_t len, uint8_t peek)$/;"	f	class:W5100Class
recv_data_processing	./Ethernet/utility/w5100.cpp	/^void W5100Class::recv_data_processing(SOCKET s, uint8_t *data, uint16_t len, uint8_t peek)$/;"	f	class:W5100Class
recv	./Ethernet/utility/socket.cpp	/^int16_t recv(SOCKET s, uint8_t *buf, int16_t len)$/;"	f
recv	./Ethernet/utility/socket.cpp	/^int16_t recv(SOCKET s, uint8_t *buf, int16_t len)$/;"	f
RECV	./Ethernet/utility/w5100.h	/^  static const uint8_t RECV    = 0x04;$/;"	m	class:SnIR
RECV	./Ethernet/utility/w5100.h	/^  static const uint8_t RECV    = 0x04;$/;"	m	class:SnIR
recvfrom	./Ethernet/utility/socket.cpp	/^uint16_t recvfrom(SOCKET s, uint8_t *buf, uint16_t len, uint8_t *addr, uint16_t *port)$/;"	f
recvfrom	./Ethernet/utility/socket.cpp	/^uint16_t recvfrom(SOCKET s, uint8_t *buf, uint16_t len, uint8_t *addr, uint16_t *port)$/;"	f
recv	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::recv()$/;"	f	class:GSM3SoftSerial
recv	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::recv()$/;"	f	class:GSM3SoftSerial
recv	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::recv()$/;"	f	class:SoftwareSerial
recv	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::recv()$/;"	f	class:SoftwareSerial
RED_PIN	./Esplora/Esplora.cpp	/^const byte RED_PIN    = 5;$/;"	v
RED_PIN	./Esplora/Esplora.cpp	/^const byte RED_PIN    = 5;$/;"	v
RED	./Robot_Control/ArduinoRobot.h	118;"	d
RED	./Robot_Control/ArduinoRobot.h	118;"	d
refreshCurrentLetter	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::refreshCurrentLetter(char letter){$/;"	f	class:TextManager
refreshCurrentLetter	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::refreshCurrentLetter(char letter){$/;"	f	class:TextManager
REFRESH_INTERVAL	./Servo/Servo.h	91;"	d
REFRESH_INTERVAL	./Servo/Servo.h	91;"	d
_refreshMotorAdjustment	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_refreshMotorAdjustment(){$/;"	f	class:RobotMotorBoard
_refreshMotorAdjustment	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::_refreshMotorAdjustment(){$/;"	f	class:RobotMotorBoard
refresh	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::refresh()$/;"	f	class:SoftwareServo
refresh	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::refresh()$/;"	f	class:SoftwareServo
REG_COMM_LINE_BUSY	./GSM_Shield/GSM_Shield.h	/^  REG_COMM_LINE_BUSY,$/;"	e	enum:registration_ret_val_enum
REG_COMM_LINE_BUSY	./GSM_Shield/GSM_Shield.h	/^  REG_COMM_LINE_BUSY,$/;"	e	enum:registration_ret_val_enum
registerActiveProvider	./GSM/GSM3ShieldV1ModemCore.h	/^		void registerActiveProvider(GSM3ShieldV1BaseProvider* provider){activeProvider=provider;};$/;"	f	class:GSM3ShieldV1ModemCore
registerActiveProvider	./GSM/GSM3ShieldV1ModemCore.h	/^		void registerActiveProvider(GSM3ShieldV1BaseProvider* provider){activeProvider=provider;};$/;"	f	class:GSM3ShieldV1ModemCore
registerMgr	./GSM/GSM3SoftSerial.h	/^		inline void registerMgr(GSM3SoftSerialMgr* manager){mgr=manager;};$/;"	f	class:GSM3SoftSerial
registerMgr	./GSM/GSM3SoftSerial.h	/^		inline void registerMgr(GSM3SoftSerialMgr* manager){mgr=manager;};$/;"	f	class:GSM3SoftSerial
registerMobileNetworkProvider	./GSM/GSM3MobileNetworkRegistry.cpp	/^void GSM3MobileNetworkRegistry::registerMobileNetworkProvider(GSM3MobileNetworkProvider* provider)$/;"	f	class:GSM3MobileNetworkRegistry
registerMobileNetworkProvider	./GSM/GSM3MobileNetworkRegistry.cpp	/^void GSM3MobileNetworkRegistry::registerMobileNetworkProvider(GSM3MobileNetworkProvider* provider)$/;"	f	class:GSM3MobileNetworkRegistry
registerUMProvider	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::registerUMProvider(GSM3ShieldV1BaseProvider* provider)$/;"	f	class:GSM3ShieldV1ModemCore
registerUMProvider	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::registerUMProvider(GSM3ShieldV1BaseProvider* provider)$/;"	f	class:GSM3ShieldV1ModemCore
registration_ret_val_enum	./GSM_Shield/GSM_Shield.h	/^enum registration_ret_val_enum $/;"	g
registration_ret_val_enum	./GSM_Shield/GSM_Shield.h	/^enum registration_ret_val_enum $/;"	g
REG_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  REG_LAST_ITEM$/;"	e	enum:registration_ret_val_enum
REG_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  REG_LAST_ITEM$/;"	e	enum:registration_ret_val_enum
REG_NO_RESPONSE	./GSM_Shield/GSM_Shield.h	/^  REG_NO_RESPONSE,$/;"	e	enum:registration_ret_val_enum
REG_NO_RESPONSE	./GSM_Shield/GSM_Shield.h	/^  REG_NO_RESPONSE,$/;"	e	enum:registration_ret_val_enum
REG_NOT_REGISTERED	./GSM_Shield/GSM_Shield.h	/^  REG_NOT_REGISTERED = 0,$/;"	e	enum:registration_ret_val_enum
REG_NOT_REGISTERED	./GSM_Shield/GSM_Shield.h	/^  REG_NOT_REGISTERED = 0,$/;"	e	enum:registration_ret_val_enum
REG_REGISTERED	./GSM_Shield/GSM_Shield.h	/^  REG_REGISTERED,$/;"	e	enum:registration_ret_val_enum
REG_REGISTERED	./GSM_Shield/GSM_Shield.h	/^  REG_REGISTERED,$/;"	e	enum:registration_ret_val_enum
release	./AFMotor/AFMotor.cpp	/^void AF_Stepper::release(void) {$/;"	f	class:AF_Stepper
release	./AFMotor/AFMotor.cpp	/^void AF_Stepper::release(void) {$/;"	f	class:AF_Stepper
RELEASE	./AFMotor/AFMotor.h	111;"	d
RELEASE	./AFMotor/AFMotor.h	111;"	d
RELEASED	./Esplora/Esplora.h	/^const boolean RELEASED  = HIGH;$/;"	v
RELEASED	./Esplora/Esplora.h	/^const boolean RELEASED  = HIGH;$/;"	v
releaseSocket	./GSM/GSM3MobileNetworkProvider.h	/^		void releaseSocket(int socket){};$/;"	f	class:GSM3MobileNetworkProvider
releaseSocket	./GSM/GSM3MobileNetworkProvider.h	/^		void releaseSocket(int socket){};$/;"	f	class:GSM3MobileNetworkProvider
releaseSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::releaseSocket(int socket)$/;"	f	class:GSM3ShieldV1ClientProvider
releaseSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::releaseSocket(int socket)$/;"	f	class:GSM3ShieldV1ClientProvider
releaseSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::releaseSocket(int socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
releaseSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::releaseSocket(int socket)$/;"	f	class:GSM3ShieldV1MultiClientProvider
releaseSocket	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^void GSM3ShieldV1MultiServerProvider::releaseSocket(int socket)$/;"	f	class:GSM3ShieldV1MultiServerProvider
releaseSocket	./GSM/GSM3ShieldV1MultiServerProvider.cpp	/^void GSM3ShieldV1MultiServerProvider::releaseSocket(int socket)$/;"	f	class:GSM3ShieldV1MultiServerProvider
releaseSocket	./GSM/GSM3ShieldV1ServerProvider.cpp	/^void GSM3ShieldV1ServerProvider::releaseSocket(int socket)$/;"	f	class:GSM3ShieldV1ServerProvider
releaseSocket	./GSM/GSM3ShieldV1ServerProvider.cpp	/^void GSM3ShieldV1ServerProvider::releaseSocket(int socket)$/;"	f	class:GSM3ShieldV1ServerProvider
_remaining	./Ethernet/EthernetUdp.h	/^  uint16_t _remaining; \/\/ remaining bytes of incoming packet yet to be processed$/;"	m	class:EthernetUDP
_remaining	./Ethernet/EthernetUdp.h	/^  uint16_t _remaining; \/\/ remaining bytes of incoming packet yet to be processed$/;"	m	class:EthernetUDP
remoteID	./GSM/GSM3ShieldV1.h	/^		const char* remoteID;		\/\/Server.$/;"	m	class:GSM3ShieldV1
remoteID	./GSM/GSM3ShieldV1.h	/^		const char* remoteID;		\/\/Server.$/;"	m	class:GSM3ShieldV1
_remoteIP	./Ethernet/EthernetUdp.h	/^  IPAddress _remoteIP; \/\/ remote IP address for the incoming packet whilst it's being processed$/;"	m	class:EthernetUDP
_remoteIP	./Ethernet/EthernetUdp.h	/^  IPAddress _remoteIP; \/\/ remote IP address for the incoming packet whilst it's being processed$/;"	m	class:EthernetUDP
remoteIP	./Ethernet/EthernetUdp.h	/^  virtual IPAddress remoteIP() { return _remoteIP; };$/;"	f	class:EthernetUDP
remoteIP	./Ethernet/EthernetUdp.h	/^  virtual IPAddress remoteIP() { return _remoteIP; };$/;"	f	class:EthernetUDP
remoteIP	./GSM/GSM3ShieldV1ClientProvider.h	/^		IPAddress remoteIP;        	\/\/ Remote IP address$/;"	m	class:GSM3ShieldV1ClientProvider
remoteIP	./GSM/GSM3ShieldV1ClientProvider.h	/^		IPAddress remoteIP;        	\/\/ Remote IP address$/;"	m	class:GSM3ShieldV1ClientProvider
remoteIP	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		IPAddress remoteIP; \/\/ Remote IP address$/;"	m	class:GSM3ShieldV1MultiClientProvider
remoteIP	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		IPAddress remoteIP; \/\/ Remote IP address$/;"	m	class:GSM3ShieldV1MultiClientProvider
remoteIP	./WiFi/WiFiUdp.cpp	/^IPAddress  WiFiUDP::remoteIP()$/;"	f	class:WiFiUDP
remoteIP	./WiFi/WiFiUdp.cpp	/^IPAddress  WiFiUDP::remoteIP()$/;"	f	class:WiFiUDP
remoteNumber	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::remoteNumber(char* number, int nlength)$/;"	f	class:GSM3SMSService
remoteNumber	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::remoteNumber(char* number, int nlength)$/;"	f	class:GSM3SMSService
_remotePort	./Ethernet/EthernetUdp.h	/^  uint16_t _remotePort; \/\/ remote port for the incoming packet whilst it's being processed$/;"	m	class:EthernetUDP
_remotePort	./Ethernet/EthernetUdp.h	/^  uint16_t _remotePort; \/\/ remote port for the incoming packet whilst it's being processed$/;"	m	class:EthernetUDP
remotePort	./Ethernet/EthernetUdp.h	/^  virtual uint16_t remotePort() { return _remotePort; };$/;"	f	class:EthernetUDP
remotePort	./Ethernet/EthernetUdp.h	/^  virtual uint16_t remotePort() { return _remotePort; };$/;"	f	class:EthernetUDP
remotePort	./GSM/GSM3ShieldV1ClientProvider.h	/^		int remotePort;				\/\/Current operation remote port.$/;"	m	class:GSM3ShieldV1ClientProvider
remotePort	./GSM/GSM3ShieldV1ClientProvider.h	/^		int remotePort;				\/\/Current operation remote port.$/;"	m	class:GSM3ShieldV1ClientProvider
remotePort	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int remotePort;		\/\/ Current operation remote port$/;"	m	class:GSM3ShieldV1MultiClientProvider
remotePort	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		int remotePort;		\/\/ Current operation remote port$/;"	m	class:GSM3ShieldV1MultiClientProvider
remotePort	./WiFi/WiFiUdp.cpp	/^uint16_t  WiFiUDP::remotePort()$/;"	f	class:WiFiUDP
remotePort	./WiFi/WiFiUdp.cpp	/^uint16_t  WiFiUDP::remotePort()$/;"	f	class:WiFiUDP
remoteSMSNumber	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::remoteSMSNumber(char* number, int nlength)$/;"	f	class:GSM3MobileMockupProvider
remoteSMSNumber	./GSM/GSM3MobileMockupProvider.cpp	/^int GSM3MobileMockupProvider::remoteSMSNumber(char* number, int nlength)$/;"	f	class:GSM3MobileMockupProvider
remoteSMSNumber	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int remoteSMSNumber(char* number, int nlength){return 0;}; $/;"	f	class:GSM3MobileSMSProvider
remoteSMSNumber	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline int remoteSMSNumber(char* number, int nlength){return 0;}; $/;"	f	class:GSM3MobileSMSProvider
remoteSMSNumber	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::remoteSMSNumber(char* number, int nlength)$/;"	f	class:GSM3ShieldV1SMSProvider
remoteSMSNumber	./GSM/GSM3ShieldV1SMSProvider.cpp	/^int GSM3ShieldV1SMSProvider::remoteSMSNumber(char* number, int nlength)$/;"	f	class:GSM3ShieldV1SMSProvider
remove	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::remove(const char* fileName) {$/;"	f	class:Fat16
remove	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::remove(const char* fileName) {$/;"	f	class:Fat16
remove	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::remove(void) {$/;"	f	class:Fat16
remove	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::remove(void) {$/;"	f	class:Fat16
remove	./SD/SD.cpp	/^boolean SDClass::remove(char *filepath) {$/;"	f	class:SDClass
remove	./SD/SD.cpp	/^boolean SDClass::remove(char *filepath) {$/;"	f	class:SDClass
remove	./SD/utility/SdFat.h	/^  static uint8_t remove(SdFile& dirFile, const char* fileName) {  \/\/ NOLINT$/;"	f	class:SdFile
remove	./SD/utility/SdFat.h	/^  static uint8_t remove(SdFile& dirFile, const char* fileName) {  \/\/ NOLINT$/;"	f	class:SdFile
remove	./SD/utility/SdFile.cpp	/^uint8_t SdFile::remove(SdFile* dirFile, const char* fileName) {$/;"	f	class:SdFile
remove	./SD/utility/SdFile.cpp	/^uint8_t SdFile::remove(SdFile* dirFile, const char* fileName) {$/;"	f	class:SdFile
remove	./SD/utility/SdFile.cpp	/^uint8_t SdFile::remove(void) {$/;"	f	class:SdFile
remove	./SD/utility/SdFile.cpp	/^uint8_t SdFile::remove(void) {$/;"	f	class:SdFile
_renewInSec	./Ethernet/Dhcp.h	/^  signed long _renewInSec;$/;"	m	class:DhcpClass
_renewInSec	./Ethernet/Dhcp.h	/^  signed long _renewInSec;$/;"	m	class:DhcpClass
REPLY_FLAG	./WiFi/utility/wifi_spi.h	7;"	d
REPLY_FLAG	./WiFi/utility/wifi_spi.h	7;"	d
reportActionDone	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::reportActionDone(){$/;"	f	class:RobotMotorBoard
reportActionDone	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::reportActionDone(){$/;"	f	class:RobotMotorBoard
REPORT_ANALOG	./Firmata/Firmata.h	31;"	d
REPORT_ANALOG	./Firmata/Firmata.h	31;"	d
REPORT_DIGITAL	./Firmata/Firmata.h	32;"	d
REPORT_DIGITAL	./Firmata/Firmata.h	32;"	d
REPORT_FIRMWARE	./Firmata/Firmata.h	57;"	d
REPORT_FIRMWARE	./Firmata/Firmata.h	57;"	d
REPORT_VERSION	./Firmata/Firmata.h	36;"	d
REPORT_VERSION	./Firmata/Firmata.h	36;"	d
REQ_HOST_BY_NAME_CMD	./WiFi/utility/wifi_spi.h	/^	REQ_HOST_BY_NAME_CMD= 0x34,$/;"	e	enum:__anon4
REQ_HOST_BY_NAME_CMD	./WiFi/utility/wifi_spi.h	/^	REQ_HOST_BY_NAME_CMD= 0x34,$/;"	e	enum:__anon4
reqHostByName	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::reqHostByName(const char* aHostname)$/;"	f	class:WiFiDrv
reqHostByName	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::reqHostByName(const char* aHostname)$/;"	f	class:WiFiDrv
_requestAnalogRead	./Robot_Control/Sensors.cpp	/^int RobotControl::_requestAnalogRead(uint8_t port){$/;"	f	class:RobotControl
_requestAnalogRead	./Robot_Control/Sensors.cpp	/^int RobotControl::_requestAnalogRead(uint8_t port){$/;"	f	class:RobotControl
request_DHCP_lease	./Ethernet/Dhcp.cpp	/^int DhcpClass::request_DHCP_lease(){$/;"	f	class:DhcpClass
request_DHCP_lease	./Ethernet/Dhcp.cpp	/^int DhcpClass::request_DHCP_lease(){$/;"	f	class:DhcpClass
_requestDigitalRead	./Robot_Control/Sensors.cpp	/^bool RobotControl::_requestDigitalRead(uint8_t port){$/;"	f	class:RobotControl
_requestDigitalRead	./Robot_Control/Sensors.cpp	/^bool RobotControl::_requestDigitalRead(uint8_t port){$/;"	f	class:RobotControl
_requestDigitalWrite	./Robot_Control/Sensors.cpp	/^void RobotControl::_requestDigitalWrite(uint8_t selector, uint8_t value){$/;"	f	class:RobotControl
_requestDigitalWrite	./Robot_Control/Sensors.cpp	/^void RobotControl::_requestDigitalWrite(uint8_t selector, uint8_t value){$/;"	f	class:RobotControl
requestFrom	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::requestFrom(int address, int quantity)$/;"	f	class:TwoWire
requestFrom	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::requestFrom(int address, int quantity)$/;"	f	class:TwoWire
requestFrom	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::requestFrom(int address, int quantity, int sendStop)$/;"	f	class:TwoWire
requestFrom	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::requestFrom(int address, int quantity, int sendStop)$/;"	f	class:TwoWire
requestFrom	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity)$/;"	f	class:TwoWire
requestFrom	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity)$/;"	f	class:TwoWire
requestFrom	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity, uint8_t sendStop)$/;"	f	class:TwoWire
requestFrom	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity, uint8_t sendStop)$/;"	f	class:TwoWire
requestFrom	./Wire/Wire.cpp	/^uint8_t TwoWire::requestFrom(int address, int quantity)$/;"	f	class:TwoWire
requestFrom	./Wire/Wire.cpp	/^uint8_t TwoWire::requestFrom(int address, int quantity)$/;"	f	class:TwoWire
requestFrom	./Wire/Wire.cpp	/^uint8_t TwoWire::requestFrom(int address, int quantity, int sendStop)$/;"	f	class:TwoWire
requestFrom	./Wire/Wire.cpp	/^uint8_t TwoWire::requestFrom(int address, int quantity, int sendStop)$/;"	f	class:TwoWire
requestFrom	./Wire/Wire.cpp	/^uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity)$/;"	f	class:TwoWire
requestFrom	./Wire/Wire.cpp	/^uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity)$/;"	f	class:TwoWire
requestFrom	./Wire/Wire.cpp	/^uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity, uint8_t sendStop)$/;"	f	class:TwoWire
requestFrom	./Wire/Wire.cpp	/^uint8_t TwoWire::requestFrom(uint8_t address, uint8_t quantity, uint8_t sendStop)$/;"	f	class:TwoWire
reserved1	./Robot_Control/FatStructs.h	/^  uint8_t  reserved1;$/;"	m	struct:fat32BootSector
reserved1	./Robot_Control/FatStructs.h	/^  uint8_t  reserved1;$/;"	m	struct:fat32BootSector
reserved1	./Robot_Control/SdInfo.h	/^  unsigned reserved1 : 6;$/;"	m	struct:CSD
reserved1	./Robot_Control/SdInfo.h	/^  unsigned reserved1 : 6;$/;"	m	struct:CSD
reserved1	./SD/utility/FatStructs.h	/^  uint8_t  reserved1;$/;"	m	struct:fat32BootSector
reserved1	./SD/utility/FatStructs.h	/^  uint8_t  reserved1;$/;"	m	struct:fat32BootSector
reserved1	./SD/utility/SdInfo.h	/^  unsigned reserved1 : 6;$/;"	m	struct:CSDV1
reserved1	./SD/utility/SdInfo.h	/^  unsigned reserved1 : 6;$/;"	m	struct:CSDV1
reserved1	./SD/utility/SdInfo.h	/^  unsigned reserved1 : 6;$/;"	m	struct:CSDV2
reserved1	./SD/utility/SdInfo.h	/^  unsigned reserved1 : 6;$/;"	m	struct:CSDV2
reserved2	./Robot_Control/SdInfo.h	/^  unsigned reserved2 : 2;$/;"	m	struct:CSD
reserved2	./Robot_Control/SdInfo.h	/^  unsigned reserved2 : 2;$/;"	m	struct:CSD
reserved2	./SD/utility/SdInfo.h	/^  unsigned reserved2 : 2;$/;"	m	struct:CSDV1
reserved2	./SD/utility/SdInfo.h	/^  unsigned reserved2 : 2;$/;"	m	struct:CSDV1
reserved2	./SD/utility/SdInfo.h	/^  unsigned reserved2 : 4;$/;"	m	struct:CSDV2
reserved2	./SD/utility/SdInfo.h	/^  unsigned reserved2 : 4;$/;"	m	struct:CSDV2
reserved3	./Robot_Control/SdInfo.h	/^  unsigned reserved3 : 2;$/;"	m	struct:CSD
reserved3	./Robot_Control/SdInfo.h	/^  unsigned reserved3 : 2;$/;"	m	struct:CSD
reserved3	./SD/utility/SdInfo.h	/^  unsigned reserved3 : 2;$/;"	m	struct:CSDV1
reserved3	./SD/utility/SdInfo.h	/^  unsigned reserved3 : 2;$/;"	m	struct:CSDV1
reserved3	./SD/utility/SdInfo.h	/^  unsigned reserved3 : 2;$/;"	m	struct:CSDV2
reserved3	./SD/utility/SdInfo.h	/^  unsigned reserved3 : 2;$/;"	m	struct:CSDV2
reserved4	./Robot_Control/SdInfo.h	/^  unsigned reserved4 : 5;$/;"	m	struct:CSD
reserved4	./Robot_Control/SdInfo.h	/^  unsigned reserved4 : 5;$/;"	m	struct:CSD
reserved4	./SD/utility/SdInfo.h	/^  unsigned reserved4 : 1;$/;"	m	struct:CSDV2
reserved4	./SD/utility/SdInfo.h	/^  unsigned reserved4 : 1;$/;"	m	struct:CSDV2
reserved4	./SD/utility/SdInfo.h	/^  unsigned reserved4 : 5;$/;"	m	struct:CSDV1
reserved4	./SD/utility/SdInfo.h	/^  unsigned reserved4 : 5;$/;"	m	struct:CSDV1
reserved5	./Robot_Control/SdInfo.h	/^  unsigned reserved5: 2;$/;"	m	struct:CSD
reserved5	./Robot_Control/SdInfo.h	/^  unsigned reserved5: 2;$/;"	m	struct:CSD
reserved5	./SD/utility/SdInfo.h	/^  unsigned reserved5: 2;$/;"	m	struct:CSDV1
reserved5	./SD/utility/SdInfo.h	/^  unsigned reserved5: 2;$/;"	m	struct:CSDV1
reserved5	./SD/utility/SdInfo.h	/^  unsigned reserved5 : 2;$/;"	m	struct:CSDV2
reserved5	./SD/utility/SdInfo.h	/^  unsigned reserved5 : 2;$/;"	m	struct:CSDV2
reserved6	./SD/utility/SdInfo.h	/^  unsigned reserved6 : 5;$/;"	m	struct:CSDV2
reserved6	./SD/utility/SdInfo.h	/^  unsigned reserved6 : 5;$/;"	m	struct:CSDV2
reserved7	./SD/utility/SdInfo.h	/^  unsigned reserved7: 2;$/;"	m	struct:CSDV2
reserved7	./SD/utility/SdInfo.h	/^  unsigned reserved7: 2;$/;"	m	struct:CSDV2
reservedNT	./Robot_Control/FatStructs.h	/^  uint8_t  reservedNT;$/;"	m	struct:directoryEntry
reservedNT	./Robot_Control/FatStructs.h	/^  uint8_t  reservedNT;$/;"	m	struct:directoryEntry
reservedNT	./SD/utility/FatStructs.h	/^  uint8_t  reservedNT;$/;"	m	struct:directoryEntry
reservedNT	./SD/utility/FatStructs.h	/^  uint8_t  reservedNT;$/;"	m	struct:directoryEntry
reserved	./Robot_Control/SdInfo.h	/^  unsigned reserved : 4;$/;"	m	struct:CID
reserved	./Robot_Control/SdInfo.h	/^  unsigned reserved : 4;$/;"	m	struct:CID
reserved	./SD/utility/SdInfo.h	/^  unsigned reserved : 4;$/;"	m	struct:CID
reserved	./SD/utility/SdInfo.h	/^  unsigned reserved : 4;$/;"	m	struct:CID
reservedSectorCount	./Robot_Control/FatStructs.h	/^  uint16_t reservedSectorCount;$/;"	m	struct:biosParmBlock
reservedSectorCount	./Robot_Control/FatStructs.h	/^  uint16_t reservedSectorCount;$/;"	m	struct:biosParmBlock
reservedSectorCount	./SD/utility/FatStructs.h	/^  uint16_t reservedSectorCount;$/;"	m	struct:biosParmBlock
reservedSectorCount	./SD/utility/FatStructs.h	/^  uint16_t reservedSectorCount;$/;"	m	struct:biosParmBlock
resetData	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::resetData(){$/;"	f	class:EasyTransfer2
resetData	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::resetData(){$/;"	f	class:EasyTransfer2
resetData	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::resetData(){$/;"	f	class:EasyTransfer2
resetData	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::resetData(){$/;"	f	class:EasyTransfer2
reset_DHCP_lease	./Ethernet/Dhcp.cpp	/^void DhcpClass::reset_DHCP_lease(){$/;"	f	class:DhcpClass
reset_DHCP_lease	./Ethernet/Dhcp.cpp	/^void DhcpClass::reset_DHCP_lease(){$/;"	f	class:DhcpClass
__RESETPIN__	./GSM/GSM3ShieldV1AccessProvider.cpp	4;"	d	file:
__RESETPIN__	./GSM/GSM3ShieldV1AccessProvider.cpp	4;"	d	file:
__RESETPIN__	./GSM/GSM3ShieldV1.cpp	38;"	d	file:
__RESETPIN__	./GSM/GSM3ShieldV1.cpp	38;"	d	file:
__RESETPIN__	./GSM/GSM3ShieldV1DirectModemProvider.cpp	39;"	d	file:
__RESETPIN__	./GSM/GSM3ShieldV1DirectModemProvider.cpp	39;"	d	file:
resetSS	./Ethernet/utility/w5100.h	/^  inline static void resetSS()   { PORTB |=  _BV(0); }; $/;"	f	class:W5100Class
resetSS	./Ethernet/utility/w5100.h	/^  inline static void resetSS()   { PORTB |=  _BV(0); }; $/;"	f	class:W5100Class
resetSS	./Ethernet/utility/w5100.h	/^  inline static void resetSS()   { PORTB |=  _BV(2); };$/;"	f	class:W5100Class
resetSS	./Ethernet/utility/w5100.h	/^  inline static void resetSS()   { PORTB |=  _BV(2); };$/;"	f	class:W5100Class
resetSS	./Ethernet/utility/w5100.h	/^  inline static void resetSS()   { PORTB |=  _BV(4); };$/;"	f	class:W5100Class
resetSS	./Ethernet/utility/w5100.h	/^  inline static void resetSS()   { PORTB |=  _BV(4); };$/;"	f	class:W5100Class
resetSS	./Ethernet/utility/w5100.h	/^  inline static void resetSS()   { PORTB |=  _BV(6); }; $/;"	f	class:W5100Class
resetSS	./Ethernet/utility/w5100.h	/^  inline static void resetSS()   { PORTB |=  _BV(6); }; $/;"	f	class:W5100Class
RESP_FORMAT_ERROR	./Ethernet/Dns.cpp	32;"	d	file:
RESP_FORMAT_ERROR	./Ethernet/Dns.cpp	32;"	d	file:
RESP_MASK	./Ethernet/Dns.cpp	37;"	d	file:
RESP_MASK	./Ethernet/Dns.cpp	37;"	d	file:
RESP_NAME_ERROR	./Ethernet/Dns.cpp	34;"	d	file:
RESP_NAME_ERROR	./Ethernet/Dns.cpp	34;"	d	file:
RESP_NO_ERROR	./Ethernet/Dns.cpp	31;"	d	file:
RESP_NO_ERROR	./Ethernet/Dns.cpp	31;"	d	file:
RESP_NOT_IMPLEMENTED	./Ethernet/Dns.cpp	35;"	d	file:
RESP_NOT_IMPLEMENTED	./Ethernet/Dns.cpp	35;"	d	file:
RESPONSE_FLAG	./Ethernet/Dns.cpp	21;"	d	file:
RESPONSE_FLAG	./Ethernet/Dns.cpp	21;"	d	file:
_responseTimeout	./Ethernet/Dhcp.h	/^  unsigned long _responseTimeout;$/;"	m	class:DhcpClass
_responseTimeout	./Ethernet/Dhcp.h	/^  unsigned long _responseTimeout;$/;"	m	class:DhcpClass
RESP_REFUSED	./Ethernet/Dns.cpp	36;"	d	file:
RESP_REFUSED	./Ethernet/Dns.cpp	36;"	d	file:
RESP_SERVER_FAILURE	./Ethernet/Dns.cpp	33;"	d	file:
RESP_SERVER_FAILURE	./Ethernet/Dns.cpp	33;"	d	file:
restartModem	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::restartModem()$/;"	f	class:GSM3ShieldV1DirectModemProvider
restartModem	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^void GSM3ShieldV1DirectModemProvider::restartModem()$/;"	f	class:GSM3ShieldV1DirectModemProvider
retrieveBuffer	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::retrieveBuffer(char* buffer, int bufsize, int& SizeWritten)$/;"	f	class:GSM3CircularBuffer
retrieveBuffer	./GSM/GSM3CircularBuffer.cpp	/^bool GSM3CircularBuffer::retrieveBuffer(char* buffer, int bufsize, int& SizeWritten)$/;"	f	class:GSM3CircularBuffer
retrieveCallingNumberContinue	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^void GSM3ShieldV1VoiceProvider::retrieveCallingNumberContinue()$/;"	f	class:GSM3ShieldV1VoiceProvider
retrieveCallingNumberContinue	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^void GSM3ShieldV1VoiceProvider::retrieveCallingNumberContinue()$/;"	f	class:GSM3ShieldV1VoiceProvider
retrieveCallingNumber	./GSM/GSM3MobileMockupProvider.h	/^		inline int retrieveCallingNumber(char* buffer, int*& bufsize){return 0;};$/;"	f	class:GSM3MobileMockupProvider
retrieveCallingNumber	./GSM/GSM3MobileMockupProvider.h	/^		inline int retrieveCallingNumber(char* buffer, int*& bufsize){return 0;};$/;"	f	class:GSM3MobileMockupProvider
RETRIEVECALLINGNUMBER	./GSM/GSM3ShieldV1BaseProvider.h	/^	VOICECALL, ANSWERCALL, HANGCALL, RETRIEVECALLINGNUMBER, $/;"	e	enum:GSM3_commandType_e
RETRIEVECALLINGNUMBER	./GSM/GSM3ShieldV1BaseProvider.h	/^	VOICECALL, ANSWERCALL, HANGCALL, RETRIEVECALLINGNUMBER, $/;"	e	enum:GSM3_commandType_e
retrieveCallingNumber	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^int GSM3ShieldV1VoiceProvider::retrieveCallingNumber (char* buffer, int bufsize)$/;"	f	class:GSM3ShieldV1VoiceProvider
retrieveCallingNumber	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^int GSM3ShieldV1VoiceProvider::retrieveCallingNumber (char* buffer, int bufsize)$/;"	f	class:GSM3ShieldV1VoiceProvider
retrieveCallingNumber	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::retrieveCallingNumber(char* buffer, int bufsize)$/;"	f	class:GSM3VoiceCallService
retrieveCallingNumber	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::retrieveCallingNumber(char* buffer, int bufsize)$/;"	f	class:GSM3VoiceCallService
revsteps	./AFMotor/AFMotor.h	/^  uint16_t revsteps; \/\/ # steps per revolution$/;"	m	class:AF_Stepper
revsteps	./AFMotor/AFMotor.h	/^  uint16_t revsteps; \/\/ # steps per revolution$/;"	m	class:AF_Stepper
rewindDirectory	./SD/SD.cpp	/^void File::rewindDirectory(void) {  $/;"	f	class:File
rewindDirectory	./SD/SD.cpp	/^void File::rewindDirectory(void) {  $/;"	f	class:File
rewind	./Robot_Control/Fat16.h	/^  void rewind(void) {curPosition_ = curCluster_ = 0;}$/;"	f	class:Fat16
rewind	./Robot_Control/Fat16.h	/^  void rewind(void) {curPosition_ = curCluster_ = 0;}$/;"	f	class:Fat16
rewind	./SD/utility/SdFat.h	/^  void rewind(void) {$/;"	f	class:SdFile
rewind	./SD/utility/SdFat.h	/^  void rewind(void) {$/;"	f	class:SdFile
RGB_FUNC	./Esplora/Esplora.cpp	129;"	d	file:
RGB_FUNC	./Esplora/Esplora.cpp	129;"	d	file:
rightToLeft	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::rightToLeft(void) {$/;"	f	class:LiquidCrystal
rightToLeft	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::rightToLeft(void) {$/;"	f	class:LiquidCrystal
RIP_MSG_FIXED	./Ethernet/Dhcp.h	/^}RIP_MSG_FIXED;$/;"	t	typeref:struct:_RIP_MSG_FIXED
RIP_MSG_FIXED	./Ethernet/Dhcp.h	/^}RIP_MSG_FIXED;$/;"	t	typeref:struct:_RIP_MSG_FIXED
_RIP_MSG_FIXED	./Ethernet/Dhcp.h	/^typedef struct _RIP_MSG_FIXED$/;"	s
_RIP_MSG_FIXED	./Ethernet/Dhcp.h	/^typedef struct _RIP_MSG_FIXED$/;"	s
RMASK	./Ethernet/utility/w5100.h	/^  static const uint16_t RMASK = 0x07FF; \/\/ Rx buffer MASK$/;"	m	class:W5100Class
RMASK	./Ethernet/utility/w5100.h	/^  static const uint16_t RMASK = 0x07FF; \/\/ Rx buffer MASK$/;"	m	class:W5100Class
rmdir	./SD/SD.cpp	/^boolean SDClass::rmdir(char *filepath) {$/;"	f	class:SDClass
rmdir	./SD/SD.cpp	/^boolean SDClass::rmdir(char *filepath) {$/;"	f	class:SDClass
rmDir	./SD/utility/SdFile.cpp	/^uint8_t SdFile::rmDir(void) {$/;"	f	class:SdFile
rmDir	./SD/utility/SdFile.cpp	/^uint8_t SdFile::rmDir(void) {$/;"	f	class:SdFile
rmRfStar	./SD/utility/SdFile.cpp	/^uint8_t SdFile::rmRfStar(void) {$/;"	f	class:SdFile
rmRfStar	./SD/utility/SdFile.cpp	/^uint8_t SdFile::rmRfStar(void) {$/;"	f	class:SdFile
RobotControl	./Robot_Control/ArduinoRobot.cpp	/^RobotControl::RobotControl():Arduino_LCD(LCD_CS,DC_LCD,RST_LCD){$/;"	f	class:RobotControl
RobotControl	./Robot_Control/ArduinoRobot.cpp	/^RobotControl::RobotControl():Arduino_LCD(LCD_CS,DC_LCD,RST_LCD){$/;"	f	class:RobotControl
RobotControl	./Robot_Control/ArduinoRobot.h	/^class RobotControl:public Multiplexer, $/;"	c
RobotControl	./Robot_Control/ArduinoRobot.h	/^class RobotControl:public Multiplexer, $/;"	c
RobotMotorBoard	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^RobotMotorBoard::RobotMotorBoard(){$/;"	f	class:RobotMotorBoard
RobotMotorBoard	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^RobotMotorBoard::RobotMotorBoard(){$/;"	f	class:RobotMotorBoard
RobotMotorBoard	./Robot_Motor/ArduinoRobotMotorBoard.h	/^class RobotMotorBoard:public LineFollow{$/;"	c
RobotMotorBoard	./Robot_Motor/ArduinoRobotMotorBoard.h	/^class RobotMotorBoard:public LineFollow{$/;"	c
RobotMotor	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^RobotMotorBoard RobotMotor=RobotMotorBoard();/;"	v
RobotMotor	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^RobotMotorBoard RobotMotor=RobotMotorBoard();/;"	v
robotNameRead	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::robotNameRead(char* container){$/;"	f	class:RobotControl
robotNameRead	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::robotNameRead(char* container){$/;"	f	class:RobotControl
ROBOTNAME	./Robot_Control/utility/RobotTextManager.h	5;"	d
ROBOTNAME	./Robot_Control/utility/RobotTextManager.h	5;"	d
robotNameWrite	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::robotNameWrite(char* text){$/;"	f	class:RobotControl
robotNameWrite	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::robotNameWrite(char* text){$/;"	f	class:RobotControl
Robot	./Robot_Control/ArduinoRobot.cpp	/^RobotControl Robot=RobotControl();/;"	v
Robot	./Robot_Control/ArduinoRobot.cpp	/^RobotControl Robot=RobotControl();/;"	v
robotSpeed	./Robot_Motor/LineFollow.h	/^		uint8_t robotSpeed; \/\/percentage$/;"	m	class:LineFollow
robotSpeed	./Robot_Motor/LineFollow.h	/^		uint8_t robotSpeed; \/\/percentage$/;"	m	class:LineFollow
ROBOTTEXTMANAGER_H	./Robot_Control/utility/RobotTextManager.h	2;"	d
ROBOTTEXTMANAGER_H	./Robot_Control/utility/RobotTextManager.h	2;"	d
rom	./Robot_Control/Squawk.cpp	/^static StreamROM rom;$/;"	v	file:
rom	./Robot_Control/Squawk.cpp	/^static StreamROM rom;$/;"	v	file:
rootDirEntryCount_	./Robot_Control/Fat16.cpp	/^uint16_t Fat16::rootDirEntryCount_;      \/\/ should be 512 for FAT16$/;"	m	class:Fat16	file:
rootDirEntryCount_	./Robot_Control/Fat16.cpp	/^uint16_t Fat16::rootDirEntryCount_;      \/\/ should be 512 for FAT16$/;"	m	class:Fat16	file:
rootDirEntryCount_	./Robot_Control/Fat16.h	/^  static uint16_t rootDirEntryCount_;  \/\/ should be 512 for FAT16$/;"	m	class:Fat16
rootDirEntryCount_	./Robot_Control/Fat16.h	/^  static uint16_t rootDirEntryCount_;  \/\/ should be 512 for FAT16$/;"	m	class:Fat16
rootDirEntryCount	./Robot_Control/Fat16.h	/^  static uint16_t rootDirEntryCount(void) {return rootDirEntryCount_;}$/;"	f	class:Fat16
rootDirEntryCount	./Robot_Control/Fat16.h	/^  static uint16_t rootDirEntryCount(void) {return rootDirEntryCount_;}$/;"	f	class:Fat16
rootDirEntryCount	./Robot_Control/FatStructs.h	/^  uint16_t rootDirEntryCount;$/;"	m	struct:biosParmBlock
rootDirEntryCount	./Robot_Control/FatStructs.h	/^  uint16_t rootDirEntryCount;$/;"	m	struct:biosParmBlock
rootDirEntryCount	./SD/utility/FatStructs.h	/^  uint16_t rootDirEntryCount;$/;"	m	struct:biosParmBlock
rootDirEntryCount	./SD/utility/FatStructs.h	/^  uint16_t rootDirEntryCount;$/;"	m	struct:biosParmBlock
rootDirEntryCount_	./SD/utility/SdFat.h	/^  uint16_t rootDirEntryCount_;  \/\/ number of entries in FAT16 root dir$/;"	m	class:SdVolume
rootDirEntryCount_	./SD/utility/SdFat.h	/^  uint16_t rootDirEntryCount_;  \/\/ number of entries in FAT16 root dir$/;"	m	class:SdVolume
rootDirEntryCount	./SD/utility/SdFat.h	/^  uint32_t rootDirEntryCount(void) const {return rootDirEntryCount_;}$/;"	f	class:SdVolume
rootDirEntryCount	./SD/utility/SdFat.h	/^  uint32_t rootDirEntryCount(void) const {return rootDirEntryCount_;}$/;"	f	class:SdVolume
rootDirStartBlock_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::rootDirStartBlock_;      \/\/ start of root dir$/;"	m	class:Fat16	file:
rootDirStartBlock_	./Robot_Control/Fat16.cpp	/^uint32_t Fat16::rootDirStartBlock_;      \/\/ start of root dir$/;"	m	class:Fat16	file:
rootDirStartBlock_	./Robot_Control/Fat16.h	/^  static uint32_t rootDirStartBlock_;  \/\/ start of root dir$/;"	m	class:Fat16
rootDirStartBlock_	./Robot_Control/Fat16.h	/^  static uint32_t rootDirStartBlock_;  \/\/ start of root dir$/;"	m	class:Fat16
rootDirStart_	./SD/utility/SdFat.h	/^  uint32_t rootDirStart_;       \/\/ root start block for FAT16, cluster for FAT32$/;"	m	class:SdVolume
rootDirStart_	./SD/utility/SdFat.h	/^  uint32_t rootDirStart_;       \/\/ root start block for FAT16, cluster for FAT32$/;"	m	class:SdVolume
rootDirStart	./SD/utility/SdFat.h	/^  uint32_t rootDirStart(void) const {return rootDirStart_;}$/;"	f	class:SdVolume
rootDirStart	./SD/utility/SdFat.h	/^  uint32_t rootDirStart(void) const {return rootDirStart_;}$/;"	f	class:SdVolume
root	./SD/SD.h	/^  SdFile root;$/;"	m	class:SDClass
root	./SD/SD.h	/^  SdFile root;$/;"	m	class:SDClass
rotation	./Robot_Control/Adafruit_GFX.h	/^  uint8_t  rotation;$/;"	m	class:Adafruit_GFX
rotation	./Robot_Control/Adafruit_GFX.h	/^  uint8_t  rotation;$/;"	m	class:Adafruit_GFX
rotation	./TFT/utility/Adafruit_GFX.h	/^  uint8_t  rotation;$/;"	m	class:Adafruit_GFX
rotation	./TFT/utility/Adafruit_GFX.h	/^  uint8_t  rotation;$/;"	m	class:Adafruit_GFX
round	./SoftwareSerial/SoftwareSerial.h	110;"	d
round	./SoftwareSerial/SoftwareSerial.h	110;"	d
round	./TinyGPS/TinyGPS.h	154;"	d
round	./TinyGPS/TinyGPS.h	154;"	d
routersOnSubnet	./Ethernet/Dhcp.h	/^	routersOnSubnet		=	3,$/;"	e	enum:__anon14
routersOnSubnet	./Ethernet/Dhcp.h	/^	routersOnSubnet		=	3,$/;"	e	enum:__anon14
row_delay	./Robot_Control/Squawk.cpp	/^static uint8_t  row_delay;$/;"	v	file:
row_delay	./Robot_Control/Squawk.cpp	/^static uint8_t  row_delay;$/;"	v	file:
_rowSize	./TFT/utility/PImage.h	/^  uint32_t _rowSize;               \/\/ Not always = bmpWidth; may have padding$/;"	m	class:PImage
_rowSize	./TFT/utility/PImage.h	/^  uint32_t _rowSize;               \/\/ Not always = bmpWidth; may have padding$/;"	m	class:PImage
rowstart	./Robot_Control/Arduino_LCD.h	/^           colstart, rowstart; \/\/ some displays need this changed$/;"	m	class:Arduino_LCD
rowstart	./Robot_Control/Arduino_LCD.h	/^           colstart, rowstart; \/\/ some displays need this changed$/;"	m	class:Arduino_LCD
rowstart	./TFT/utility/Adafruit_ST7735.h	/^           colstart, rowstart; \/\/ some displays need this changed$/;"	m	class:Adafruit_ST7735
rowstart	./TFT/utility/Adafruit_ST7735.h	/^           colstart, rowstart; \/\/ some displays need this changed$/;"	m	class:Adafruit_ST7735
RSIZE	./Ethernet/utility/w5100.h	/^  static const uint16_t RSIZE = 2048; \/\/ Max Rx buffer size$/;"	m	class:W5100Class
RSIZE	./Ethernet/utility/w5100.h	/^  static const uint16_t RSIZE = 2048; \/\/ Max Rx buffer size$/;"	m	class:W5100Class
_rs_pin	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _rs_pin; \/\/ LOW: command.  HIGH: character.$/;"	m	class:LiquidCrystal
_rs_pin	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _rs_pin; \/\/ LOW: command.  HIGH: character.$/;"	m	class:LiquidCrystal
rspinmask	./Robot_Control/Arduino_LCD.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Arduino_LCD
rspinmask	./Robot_Control/Arduino_LCD.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Arduino_LCD
rspinmask	./TFT/utility/Adafruit_ST7735.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Adafruit_ST7735
rspinmask	./TFT/utility/Adafruit_ST7735.h	/^           datapinmask, clkpinmask, cspinmask, rspinmask,$/;"	m	class:Adafruit_ST7735
rsport	./Robot_Control/Arduino_LCD.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Arduino_LCD
rsport	./Robot_Control/Arduino_LCD.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Arduino_LCD
rsport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint32_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
rsport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint32_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
rsport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
rsport	./TFT/utility/Adafruit_ST7735.h	/^  volatile uint8_t *dataport, *clkport, *csport, *rsport;$/;"	m	class:Adafruit_ST7735
_rs	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
_rs	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
RSSI	./WiFi/WiFi.cpp	/^int32_t WiFiClass::RSSI()$/;"	f	class:WiFiClass
RSSI	./WiFi/WiFi.cpp	/^int32_t WiFiClass::RSSI()$/;"	f	class:WiFiClass
RSSI	./WiFi/WiFi.cpp	/^int32_t WiFiClass::RSSI(uint8_t networkItem)$/;"	f	class:WiFiClass
RSSI	./WiFi/WiFi.cpp	/^int32_t WiFiClass::RSSI(uint8_t networkItem)$/;"	f	class:WiFiClass
RST	./Ethernet/utility/w5100.h	/^  static const uint8_t  RST = 7; \/\/ Reset BIT$/;"	m	class:W5100Class
RST	./Ethernet/utility/w5100.h	/^  static const uint8_t  RST = 7; \/\/ Reset BIT$/;"	m	class:W5100Class
_rs	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_rs	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_rs	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_rs	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_rst	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
_rst	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
_rst	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_rst	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_rst	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_rst	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
RST_TRIGGER	./WiFi/utility/debug.h	60;"	d
RST_TRIGGER	./WiFi/utility/debug.h	60;"	d
RST_TRIGGER	./WiFi/utility/debug.h	72;"	d
RST_TRIGGER	./WiFi/utility/debug.h	72;"	d
run	./AFMotor/AFMotor.cpp	/^void AF_DCMotor::run(uint8_t cmd) {$/;"	f	class:AF_DCMotor
run	./AFMotor/AFMotor.cpp	/^void AF_DCMotor::run(uint8_t cmd) {$/;"	f	class:AF_DCMotor
runLineFollow	./Robot_Motor/lineFollow.cpp	/^void LineFollow::runLineFollow(){$/;"	f	class:LineFollow
runLineFollow	./Robot_Motor/lineFollow.cpp	/^void LineFollow::runLineFollow(){$/;"	f	class:LineFollow
run	./Robot_Control/utility/VirtualKeyboard.cpp	/^void VirtualKeyboard::run(){$/;"	f	class:VirtualKeyboard
run	./Robot_Control/utility/VirtualKeyboard.cpp	/^void VirtualKeyboard::run(){$/;"	f	class:VirtualKeyboard
_rw_pin	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _rw_pin; \/\/ LOW: write to LCD.  HIGH: read from LCD.$/;"	m	class:LiquidCrystal
_rw_pin	./LiquidCrystal/LiquidCrystal.h	/^  uint8_t _rw_pin; \/\/ LOW: write to LCD.  HIGH: read from LCD.$/;"	m	class:LiquidCrystal
RX_ALREADY_STARTED	./GSM_Shield/GSM_Shield.h	47;"	d
RX_ALREADY_STARTED	./GSM_Shield/GSM_Shield.h	47;"	d
rx_array_inx	./Robot_Control/EasyTransfer2.h	/^uint8_t rx_array_inx;  \/\/index for RX parsing buffer$/;"	m	class:EasyTransfer2
rx_array_inx	./Robot_Control/EasyTransfer2.h	/^uint8_t rx_array_inx;  \/\/index for RX parsing buffer$/;"	m	class:EasyTransfer2
rx_array_inx	./Robot_Motor/EasyTransfer2.h	/^uint8_t rx_array_inx;  \/\/index for RX parsing buffer$/;"	m	class:EasyTransfer2
rx_array_inx	./Robot_Motor/EasyTransfer2.h	/^uint8_t rx_array_inx;  \/\/index for RX parsing buffer$/;"	m	class:EasyTransfer2
RXBUF_BASE	./Ethernet/utility/w5100.cpp	24;"	d	file:
RXBUF_BASE	./Ethernet/utility/w5100.cpp	24;"	d	file:
RX_BUF	./Ethernet/utility/w5100.cpp	21;"	d	file:
RX_BUF	./Ethernet/utility/w5100.cpp	21;"	d	file:
rxBufferIndex	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::rxBufferIndex = 0;$/;"	m	class:TwoWire	file:
rxBufferIndex	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::rxBufferIndex = 0;$/;"	m	class:TwoWire	file:
rxBufferIndex	./Robot_Control/Wire.h	/^    static uint8_t rxBufferIndex;$/;"	m	class:TwoWire
rxBufferIndex	./Robot_Control/Wire.h	/^    static uint8_t rxBufferIndex;$/;"	m	class:TwoWire
rxBufferIndex	./Wire/Wire.cpp	/^uint8_t TwoWire::rxBufferIndex = 0;$/;"	m	class:TwoWire	file:
rxBufferIndex	./Wire/Wire.cpp	/^uint8_t TwoWire::rxBufferIndex = 0;$/;"	m	class:TwoWire	file:
rxBufferIndex	./Wire/Wire.h	/^    static uint8_t rxBufferIndex;$/;"	m	class:TwoWire
rxBufferIndex	./Wire/Wire.h	/^    static uint8_t rxBufferIndex;$/;"	m	class:TwoWire
rxBufferLength	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::rxBufferLength = 0;$/;"	m	class:TwoWire	file:
rxBufferLength	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::rxBufferLength = 0;$/;"	m	class:TwoWire	file:
rxBufferLength	./Robot_Control/Wire.h	/^    static uint8_t rxBufferLength;$/;"	m	class:TwoWire
rxBufferLength	./Robot_Control/Wire.h	/^    static uint8_t rxBufferLength;$/;"	m	class:TwoWire
rxBufferLength	./Wire/Wire.cpp	/^uint8_t TwoWire::rxBufferLength = 0;$/;"	m	class:TwoWire	file:
rxBufferLength	./Wire/Wire.cpp	/^uint8_t TwoWire::rxBufferLength = 0;$/;"	m	class:TwoWire	file:
rxBufferLength	./Wire/Wire.h	/^    static uint8_t rxBufferLength;$/;"	m	class:TwoWire
rxBufferLength	./Wire/Wire.h	/^    static uint8_t rxBufferLength;$/;"	m	class:TwoWire
rxBuffer	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::rxBuffer[BUFFER_LENGTH];$/;"	m	class:TwoWire	file:
rxBuffer	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::rxBuffer[BUFFER_LENGTH];$/;"	m	class:TwoWire	file:
rxBuffer	./Robot_Control/Wire.h	/^    static uint8_t rxBuffer[];$/;"	m	class:TwoWire
rxBuffer	./Robot_Control/Wire.h	/^    static uint8_t rxBuffer[];$/;"	m	class:TwoWire
rxBuffer	./Wire/Wire.cpp	/^uint8_t TwoWire::rxBuffer[BUFFER_LENGTH];$/;"	m	class:TwoWire	file:
rxBuffer	./Wire/Wire.cpp	/^uint8_t TwoWire::rxBuffer[BUFFER_LENGTH];$/;"	m	class:TwoWire	file:
rxBuffer	./Wire/Wire.h	/^    static uint8_t rxBuffer[];$/;"	m	class:TwoWire
rxBuffer	./Wire/Wire.h	/^    static uint8_t rxBuffer[];$/;"	m	class:TwoWire
rx_delay_centering	./GSM/GSM3SoftSerial.cpp	/^  unsigned short rx_delay_centering;$/;"	m	struct:_DELAY_TABLE	file:
rx_delay_centering	./GSM/GSM3SoftSerial.cpp	/^  unsigned short rx_delay_centering;$/;"	m	struct:_DELAY_TABLE	file:
_rx_delay_centering	./GSM/GSM3SoftSerial.h	/^		uint16_t _rx_delay_centering;$/;"	m	class:GSM3SoftSerial
_rx_delay_centering	./GSM/GSM3SoftSerial.h	/^		uint16_t _rx_delay_centering;$/;"	m	class:GSM3SoftSerial
rx_delay_centering	./SoftwareSerial/SoftwareSerial.cpp	/^  unsigned short rx_delay_centering;$/;"	m	struct:_DELAY_TABLE	file:
rx_delay_centering	./SoftwareSerial/SoftwareSerial.cpp	/^  unsigned short rx_delay_centering;$/;"	m	struct:_DELAY_TABLE	file:
_rx_delay_centering	./SoftwareSerial/SoftwareSerial.h	/^  uint16_t _rx_delay_centering;$/;"	m	class:SoftwareSerial
_rx_delay_centering	./SoftwareSerial/SoftwareSerial.h	/^  uint16_t _rx_delay_centering;$/;"	m	class:SoftwareSerial
rx_delay_intrabit	./GSM/GSM3SoftSerial.cpp	/^  unsigned short rx_delay_intrabit;$/;"	m	struct:_DELAY_TABLE	file:
rx_delay_intrabit	./GSM/GSM3SoftSerial.cpp	/^  unsigned short rx_delay_intrabit;$/;"	m	struct:_DELAY_TABLE	file:
_rx_delay_intrabit	./GSM/GSM3SoftSerial.h	/^		uint16_t _rx_delay_intrabit;$/;"	m	class:GSM3SoftSerial
_rx_delay_intrabit	./GSM/GSM3SoftSerial.h	/^		uint16_t _rx_delay_intrabit;$/;"	m	class:GSM3SoftSerial
rx_delay_intrabit	./SoftwareSerial/SoftwareSerial.cpp	/^  unsigned short rx_delay_intrabit;$/;"	m	struct:_DELAY_TABLE	file:
rx_delay_intrabit	./SoftwareSerial/SoftwareSerial.cpp	/^  unsigned short rx_delay_intrabit;$/;"	m	struct:_DELAY_TABLE	file:
_rx_delay_intrabit	./SoftwareSerial/SoftwareSerial.h	/^  uint16_t _rx_delay_intrabit;$/;"	m	class:SoftwareSerial
_rx_delay_intrabit	./SoftwareSerial/SoftwareSerial.h	/^  uint16_t _rx_delay_intrabit;$/;"	m	class:SoftwareSerial
rx_delay_stopbit	./GSM/GSM3SoftSerial.cpp	/^  unsigned short rx_delay_stopbit;$/;"	m	struct:_DELAY_TABLE	file:
rx_delay_stopbit	./GSM/GSM3SoftSerial.cpp	/^  unsigned short rx_delay_stopbit;$/;"	m	struct:_DELAY_TABLE	file:
_rx_delay_stopbit	./GSM/GSM3SoftSerial.h	/^		uint16_t _rx_delay_stopbit;$/;"	m	class:GSM3SoftSerial
_rx_delay_stopbit	./GSM/GSM3SoftSerial.h	/^		uint16_t _rx_delay_stopbit;$/;"	m	class:GSM3SoftSerial
rx_delay_stopbit	./SoftwareSerial/SoftwareSerial.cpp	/^  unsigned short rx_delay_stopbit;$/;"	m	struct:_DELAY_TABLE	file:
rx_delay_stopbit	./SoftwareSerial/SoftwareSerial.cpp	/^  unsigned short rx_delay_stopbit;$/;"	m	struct:_DELAY_TABLE	file:
_rx_delay_stopbit	./SoftwareSerial/SoftwareSerial.h	/^  uint16_t _rx_delay_stopbit;$/;"	m	class:SoftwareSerial
_rx_delay_stopbit	./SoftwareSerial/SoftwareSerial.h	/^  uint16_t _rx_delay_stopbit;$/;"	m	class:SoftwareSerial
RX_FINISHED	./GSM_Shield/GSM_Shield.h	/^  RX_FINISHED,              \/\/ finished, some character was received$/;"	e	enum:rx_state_enum
RX_FINISHED	./GSM_Shield/GSM_Shield.h	/^  RX_FINISHED,              \/\/ finished, some character was received$/;"	e	enum:rx_state_enum
RX_FINISHED_STR_NOT_RECV	./GSM_Shield/GSM_Shield.h	/^  RX_FINISHED_STR_NOT_RECV, \/\/ finished, but expected string not received$/;"	e	enum:rx_state_enum
RX_FINISHED_STR_NOT_RECV	./GSM_Shield/GSM_Shield.h	/^  RX_FINISHED_STR_NOT_RECV, \/\/ finished, but expected string not received$/;"	e	enum:rx_state_enum
RX_FINISHED_STR_RECV	./GSM_Shield/GSM_Shield.h	/^  RX_FINISHED_STR_RECV,     \/\/ finished and expected string received$/;"	e	enum:rx_state_enum
RX_FINISHED_STR_RECV	./GSM_Shield/GSM_Shield.h	/^  RX_FINISHED_STR_RECV,     \/\/ finished and expected string received$/;"	e	enum:rx_state_enum
RxInit	./GSM_Shield/GSM_Shield.cpp	/^void GSM::RxInit(uint16_t start_comm_tmout, uint16_t max_interchar_tmout)$/;"	f	class:GSM
RxInit	./GSM_Shield/GSM_Shield.cpp	/^void GSM::RxInit(uint16_t start_comm_tmout, uint16_t max_interchar_tmout)$/;"	f	class:GSM
__RXINT__	./GSM/GSM3SoftSerial.cpp	44;"	d	file:
__RXINT__	./GSM/GSM3SoftSerial.cpp	44;"	d	file:
__RXINT__	./GSM/GSM3SoftSerial.cpp	48;"	d	file:
__RXINT__	./GSM/GSM3SoftSerial.cpp	48;"	d	file:
__RXINT__	./GSM/GSM3SoftSerial.cpp	52;"	d	file:
__RXINT__	./GSM/GSM3SoftSerial.cpp	52;"	d	file:
RX_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  RX_LAST_ITEM$/;"	e	enum:rx_state_enum
RX_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  RX_LAST_ITEM$/;"	e	enum:rx_state_enum
rx_len	./Robot_Control/EasyTransfer2.h	/^uint8_t rx_len;		\/\/RX packet length according to the packet$/;"	m	class:EasyTransfer2
rx_len	./Robot_Control/EasyTransfer2.h	/^uint8_t rx_len;		\/\/RX packet length according to the packet$/;"	m	class:EasyTransfer2
rx_len	./Robot_Motor/EasyTransfer2.h	/^uint8_t rx_len;		\/\/RX packet length according to the packet$/;"	m	class:EasyTransfer2
rx_len	./Robot_Motor/EasyTransfer2.h	/^uint8_t rx_len;		\/\/RX packet length according to the packet$/;"	m	class:EasyTransfer2
RX_NOT_FINISHED	./GSM_Shield/GSM_Shield.h	/^  RX_NOT_FINISHED = 0,      \/\/ not finished yet$/;"	e	enum:rx_state_enum
RX_NOT_FINISHED	./GSM_Shield/GSM_Shield.h	/^  RX_NOT_FINISHED = 0,      \/\/ not finished yet$/;"	e	enum:rx_state_enum
RX_NOT_STARTED	./GSM_Shield/GSM_Shield.h	46;"	d
RX_NOT_STARTED	./GSM_Shield/GSM_Shield.h	46;"	d
__RXPIN__	./GSM/GSM3SoftSerial.cpp	43;"	d	file:
__RXPIN__	./GSM/GSM3SoftSerial.cpp	43;"	d	file:
__RXPIN__	./GSM/GSM3SoftSerial.cpp	47;"	d	file:
__RXPIN__	./GSM/GSM3SoftSerial.cpp	47;"	d	file:
__RXPIN__	./GSM/GSM3SoftSerial.cpp	51;"	d	file:
__RXPIN__	./GSM/GSM3SoftSerial.cpp	51;"	d	file:
rxPin	./GSM_Shield/GSM_Shield.cpp	15;"	d	file:
rxPin	./GSM_Shield/GSM_Shield.cpp	15;"	d	file:
rx_pin_read	./GSM/GSM3SoftSerial.cpp	/^uint8_t GSM3SoftSerial::rx_pin_read()$/;"	f	class:GSM3SoftSerial
rx_pin_read	./GSM/GSM3SoftSerial.cpp	/^uint8_t GSM3SoftSerial::rx_pin_read()$/;"	f	class:GSM3SoftSerial
rx_pin_read	./SoftwareSerial/SoftwareSerial.cpp	/^uint8_t SoftwareSerial::rx_pin_read()$/;"	f	class:SoftwareSerial
rx_pin_read	./SoftwareSerial/SoftwareSerial.cpp	/^uint8_t SoftwareSerial::rx_pin_read()$/;"	f	class:SoftwareSerial
rx_state_enum	./GSM_Shield/GSM_Shield.h	/^enum rx_state_enum $/;"	g
rx_state_enum	./GSM_Shield/GSM_Shield.h	/^enum rx_state_enum $/;"	g
rx_state	./GSM_Shield/GSM_Shield.h	/^    byte rx_state;                  \/\/ internal state of rx state machine    $/;"	m	class:GSM
rx_state	./GSM_Shield/GSM_Shield.h	/^    byte rx_state;                  \/\/ internal state of rx state machine    $/;"	m	class:GSM
RX_TMOUT_ERR	./GSM_Shield/GSM_Shield.h	/^  RX_TMOUT_ERR,             \/\/ finished, no character received $/;"	e	enum:rx_state_enum
RX_TMOUT_ERR	./GSM_Shield/GSM_Shield.h	/^  RX_TMOUT_ERR,             \/\/ finished, no character received $/;"	e	enum:rx_state_enum
sample_rate	./Robot_Control/Squawk.cpp	/^static uint16_t sample_rate;$/;"	v	file:
sample_rate	./Robot_Control/Squawk.cpp	/^static uint16_t sample_rate;$/;"	v	file:
SAMPLING_INTERVAL	./Firmata/Firmata.h	58;"	d
SAMPLING_INTERVAL	./Firmata/Firmata.h	58;"	d
satellites	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSInteger satellites;$/;"	m	class:TinyGPSPlus
satellites	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSInteger satellites;$/;"	m	class:TinyGPSPlus
satellites	./TinyGPS/TinyGPS.h	/^  inline unsigned short satellites() { return _numsats; }$/;"	f	class:TinyGPS
satellites	./TinyGPS/TinyGPS.h	/^  inline unsigned short satellites() { return _numsats; }$/;"	f	class:TinyGPS
SBASE	./Ethernet/utility/w5100.h	/^  uint16_t SBASE[SOCKETS]; \/\/ Tx buffer base address$/;"	m	class:W5100Class
SBASE	./Ethernet/utility/w5100.h	/^  uint16_t SBASE[SOCKETS]; \/\/ Tx buffer base address$/;"	m	class:W5100Class
SCAN_NETWORKS	./WiFi/utility/wifi_spi.h	/^	SCAN_NETWORKS		= 0x27,$/;"	e	enum:__anon4
SCAN_NETWORKS	./WiFi/utility/wifi_spi.h	/^	SCAN_NETWORKS		= 0x27,$/;"	e	enum:__anon4
scanNetworks	./WiFi/WiFi.cpp	/^int8_t WiFiClass::scanNetworks()$/;"	f	class:WiFiClass
scanNetworks	./WiFi/WiFi.cpp	/^int8_t WiFiClass::scanNetworks()$/;"	f	class:WiFiClass
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 13;$/;"	v
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 13;$/;"	v
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 15;$/;"	v
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 15;$/;"	v
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 21;$/;"	v
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 21;$/;"	v
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 52;$/;"	v
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 52;$/;"	v
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 7;$/;"	v
SCK_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCK_PIN = 7;$/;"	v
_sclk	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
_sclk	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
_sclk	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_sclk	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_sclk	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_sclk	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 0;$/;"	v
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 0;$/;"	v
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 18;$/;"	v
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 18;$/;"	v
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 19;$/;"	v
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 19;$/;"	v
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 21;$/;"	v
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 21;$/;"	v
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 3;$/;"	v
SCL_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SCL_PIN = 3;$/;"	v
scripts_Hello_User	./Robot_Control/utility/scripts_Hello_User.h	/^const char *scripts_Hello_User[]={$/;"	v
scripts_Hello_User	./Robot_Control/utility/scripts_Hello_User.h	/^const char *scripts_Hello_User[]={$/;"	v
scrollDisplayLeft	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::scrollDisplayLeft(void) {$/;"	f	class:LiquidCrystal
scrollDisplayLeft	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::scrollDisplayLeft(void) {$/;"	f	class:LiquidCrystal
scrollDisplayRight	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::scrollDisplayRight(void) {$/;"	f	class:LiquidCrystal
scrollDisplayRight	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::scrollDisplayRight(void) {$/;"	f	class:LiquidCrystal
Sd2Card_h	./SD/utility/Sd2Card.h	21;"	d
Sd2Card_h	./SD/utility/Sd2Card.h	21;"	d
Sd2Card	./SD/utility/Sd2Card.h	/^class Sd2Card {$/;"	c
Sd2Card	./SD/utility/Sd2Card.h	/^class Sd2Card {$/;"	c
Sd2Card	./SD/utility/Sd2Card.h	/^  Sd2Card(void) : errorCode_(0), inBlock_(0), partialBlockRead_(0), type_(0) {}$/;"	f	class:Sd2Card
Sd2Card	./SD/utility/Sd2Card.h	/^  Sd2Card(void) : errorCode_(0), inBlock_(0), partialBlockRead_(0), type_(0) {}$/;"	f	class:Sd2Card
Sd2PinMap_h	./SD/utility/Sd2PinMap.h	22;"	d
Sd2PinMap_h	./SD/utility/Sd2PinMap.h	22;"	d
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 17;$/;"	v
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 17;$/;"	v
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 18;$/;"	v
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 18;$/;"	v
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 1;$/;"	v
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 1;$/;"	v
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 20;$/;"	v
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 20;$/;"	v
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 2;$/;"	v
SDA_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SDA_PIN = 2;$/;"	v
SD_CARD_ERROR_ACMD23	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ACMD23 = 0X07;$/;"	v
SD_CARD_ERROR_ACMD23	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ACMD23 = 0X07;$/;"	v
SD_CARD_ERROR_ACMD41	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ACMD41 = 0X08;$/;"	v
SD_CARD_ERROR_ACMD41	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ACMD41 = 0X08;$/;"	v
SD_CARD_ERROR_BAD_CSD	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_BAD_CSD = 0X09;$/;"	v
SD_CARD_ERROR_BAD_CSD	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_BAD_CSD = 0X09;$/;"	v
SD_CARD_ERROR_CMD0	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD0 = 0X1;$/;"	v
SD_CARD_ERROR_CMD0	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD0 = 0X1;$/;"	v
SD_CARD_ERROR_CMD17	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD17 = 0X3;$/;"	v
SD_CARD_ERROR_CMD17	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD17 = 0X3;$/;"	v
SD_CARD_ERROR_CMD24	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD24 = 0X4;$/;"	v
SD_CARD_ERROR_CMD24	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD24 = 0X4;$/;"	v
SD_CARD_ERROR_CMD25	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD25 = 0X05;$/;"	v
SD_CARD_ERROR_CMD25	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD25 = 0X05;$/;"	v
SD_CARD_ERROR_CMD58	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD58 = 0X06;$/;"	v
SD_CARD_ERROR_CMD58	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD58 = 0X06;$/;"	v
SD_CARD_ERROR_CMD8	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD8 = 0X2;$/;"	v
SD_CARD_ERROR_CMD8	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_CMD8 = 0X2;$/;"	v
SD_CARD_ERROR_ERASE	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ERASE = 0X0A;$/;"	v
SD_CARD_ERROR_ERASE	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ERASE = 0X0A;$/;"	v
SD_CARD_ERROR_ERASE_SINGLE_BLOCK	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ERASE_SINGLE_BLOCK = 0X0B;$/;"	v
SD_CARD_ERROR_ERASE_SINGLE_BLOCK	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ERASE_SINGLE_BLOCK = 0X0B;$/;"	v
SD_CARD_ERROR_ERASE_TIMEOUT	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ERASE_TIMEOUT = 0X0C;$/;"	v
SD_CARD_ERROR_ERASE_TIMEOUT	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_ERASE_TIMEOUT = 0X0C;$/;"	v
SD_CARD_ERROR_READ_REG	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_READ_REG = 0X0E;$/;"	v
SD_CARD_ERROR_READ_REG	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_READ_REG = 0X0E;$/;"	v
SD_CARD_ERROR_READ	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_READ = 0X0D;$/;"	v
SD_CARD_ERROR_READ	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_READ = 0X0D;$/;"	v
SD_CARD_ERROR_READ_TIMEOUT	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_READ_TIMEOUT = 0X0F;$/;"	v
SD_CARD_ERROR_READ_TIMEOUT	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_READ_TIMEOUT = 0X0F;$/;"	v
SD_CARD_ERROR_SCK_RATE	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_SCK_RATE = 0X16;$/;"	v
SD_CARD_ERROR_SCK_RATE	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_SCK_RATE = 0X16;$/;"	v
SD_CARD_ERROR_STOP_TRAN	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_STOP_TRAN = 0X10;$/;"	v
SD_CARD_ERROR_STOP_TRAN	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_STOP_TRAN = 0X10;$/;"	v
SD_CARD_ERROR_WRITE_BLOCK_ZERO	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_BLOCK_ZERO = 0X12;$/;"	v
SD_CARD_ERROR_WRITE_BLOCK_ZERO	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_BLOCK_ZERO = 0X12;$/;"	v
SD_CARD_ERROR_WRITE_MULTIPLE	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_MULTIPLE = 0X13;$/;"	v
SD_CARD_ERROR_WRITE_MULTIPLE	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_MULTIPLE = 0X13;$/;"	v
SD_CARD_ERROR_WRITE_PROGRAMMING	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_PROGRAMMING = 0X14;$/;"	v
SD_CARD_ERROR_WRITE_PROGRAMMING	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_PROGRAMMING = 0X14;$/;"	v
SD_CARD_ERROR_WRITE	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE = 0X11;$/;"	v
SD_CARD_ERROR_WRITE	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE = 0X11;$/;"	v
SD_CARD_ERROR_WRITE_TIMEOUT	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_TIMEOUT = 0X15;$/;"	v
SD_CARD_ERROR_WRITE_TIMEOUT	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_ERROR_WRITE_TIMEOUT = 0X15;$/;"	v
SdCard_h	./Robot_Control/SdCard.h	21;"	d
SdCard_h	./Robot_Control/SdCard.h	21;"	d
SdCard	./Robot_Control/SdCard.h	/^class SdCard  {$/;"	c
SdCard	./Robot_Control/SdCard.h	/^class SdCard  {$/;"	c
sdCard_	./SD/utility/SdFat.h	/^  static Sd2Card* sdCard_;            \/\/ Sd2Card object for cache$/;"	m	class:SdVolume
sdCard_	./SD/utility/SdFat.h	/^  static Sd2Card* sdCard_;            \/\/ Sd2Card object for cache$/;"	m	class:SdVolume
sdCard	./SD/utility/SdFat.h	/^  static Sd2Card* sdCard(void) {return sdCard_;}$/;"	f	class:SdVolume
sdCard	./SD/utility/SdFat.h	/^  static Sd2Card* sdCard(void) {return sdCard_;}$/;"	f	class:SdVolume
sdCard_	./SD/utility/SdVolume.cpp	/^Sd2Card* SdVolume::sdCard_;          \/\/ pointer to SD card object$/;"	m	class:SdVolume	file:
sdCard_	./SD/utility/SdVolume.cpp	/^Sd2Card* SdVolume::sdCard_;          \/\/ pointer to SD card object$/;"	m	class:SdVolume	file:
SD_CARD_TYPE_SD1	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_TYPE_SD1 = 1;$/;"	v
SD_CARD_TYPE_SD1	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_TYPE_SD1 = 1;$/;"	v
SD_CARD_TYPE_SD2	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_TYPE_SD2 = 2;$/;"	v
SD_CARD_TYPE_SD2	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_TYPE_SD2 = 2;$/;"	v
SD_CARD_TYPE_SDHC	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_TYPE_SDHC = 3;$/;"	v
SD_CARD_TYPE_SDHC	./SD/utility/Sd2Card.h	/^uint8_t const SD_CARD_TYPE_SDHC = 3;$/;"	v
SD_CHIP_SELECT_PIN	./Robot_Control/SdCard.h	/^uint8_t const SD_CHIP_SELECT_PIN = SPI_SS_PIN;$/;"	v
SD_CHIP_SELECT_PIN	./Robot_Control/SdCard.h	/^uint8_t const SD_CHIP_SELECT_PIN = SPI_SS_PIN;$/;"	v
SD_CHIP_SELECT_PIN	./SD/utility/Sd2Card.h	/^uint8_t const SD_CHIP_SELECT_PIN = 10;$/;"	v
SD_CHIP_SELECT_PIN	./SD/utility/Sd2Card.h	/^uint8_t const SD_CHIP_SELECT_PIN = 10;$/;"	v
SD_CHIP_SELECT_PIN	./SD/utility/Sd2Card.h	/^uint8_t const  SD_CHIP_SELECT_PIN = SS_PIN;$/;"	v
SD_CHIP_SELECT_PIN	./SD/utility/Sd2Card.h	/^uint8_t const  SD_CHIP_SELECT_PIN = SS_PIN;$/;"	v
SDClass	./SD/SD.h	/^class SDClass {$/;"	c
SDClass	./SD/SD.h	/^class SDClass {$/;"	c
SD_COMMAND_TIMEOUT	./Robot_Control/SdCard.h	/^uint16_t const SD_COMMAND_TIMEOUT = 300;$/;"	v
SD_COMMAND_TIMEOUT	./Robot_Control/SdCard.h	/^uint16_t const SD_COMMAND_TIMEOUT = 300;$/;"	v
SD_ERASE_TIMEOUT	./SD/utility/Sd2Card.h	/^uint16_t const SD_ERASE_TIMEOUT = 10000;$/;"	v
SD_ERASE_TIMEOUT	./SD/utility/Sd2Card.h	/^uint16_t const SD_ERASE_TIMEOUT = 10000;$/;"	v
SD_ERROR_ACMD41	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_ACMD41            = 2;$/;"	v
SD_ERROR_ACMD41	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_ACMD41            = 2;$/;"	v
SD_ERROR_BLOCK_ZERO_WRITE	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_BLOCK_ZERO_WRITE  = 8;$/;"	v
SD_ERROR_BLOCK_ZERO_WRITE	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_BLOCK_ZERO_WRITE  = 8;$/;"	v
SD_ERROR_CMD0	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_CMD0              = 1;$/;"	v
SD_ERROR_CMD0	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_CMD0              = 1;$/;"	v
SD_ERROR_CMD17	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_CMD17             = 4;$/;"	v
SD_ERROR_CMD17	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_CMD17             = 4;$/;"	v
SD_ERROR_CMD24	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_CMD24             = 3;$/;"	v
SD_ERROR_CMD24	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_CMD24             = 3;$/;"	v
SD_ERROR_READ_TIMEOUT	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_READ_TIMEOUT      = 5;$/;"	v
SD_ERROR_READ_TIMEOUT	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_READ_TIMEOUT      = 5;$/;"	v
SD_ERROR_SPI_SPEED	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_SPI_SPEED         = 10;$/;"	v
SD_ERROR_SPI_SPEED	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_SPI_SPEED         = 10;$/;"	v
SD_ERROR_WRITE_PROGRAMMING	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_WRITE_PROGRAMMING = 9;$/;"	v
SD_ERROR_WRITE_PROGRAMMING	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_WRITE_PROGRAMMING = 9;$/;"	v
SD_ERROR_WRITE_RESPONSE	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_WRITE_RESPONSE    = 6;$/;"	v
SD_ERROR_WRITE_RESPONSE	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_WRITE_RESPONSE    = 6;$/;"	v
SD_ERROR_WRITE_TIMEOUT	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_WRITE_TIMEOUT     = 7;$/;"	v
SD_ERROR_WRITE_TIMEOUT	./Robot_Control/SdCard.h	/^uint8_t const SD_ERROR_WRITE_TIMEOUT     = 7;$/;"	v
SdFat_h	./SD/utility/SdFat.h	21;"	d
SdFat_h	./SD/utility/SdFat.h	21;"	d
SdFatUtil_h	./SD/utility/SdFatUtil.h	21;"	d
SdFatUtil_h	./SD/utility/SdFatUtil.h	21;"	d
SdFile	./SD/utility/SdFat.h	/^class SdFile : public Print {$/;"	c
SdFile	./SD/utility/SdFat.h	/^class SdFile : public Print {$/;"	c
SdFile	./SD/utility/SdFat.h	/^  SdFile(void) : type_(FAT_FILE_TYPE_CLOSED) {}$/;"	f	class:SdFile
SdFile	./SD/utility/SdFat.h	/^  SdFile(void) : type_(FAT_FILE_TYPE_CLOSED) {}$/;"	f	class:SdFile
__SD_H__	./SD/SD.h	16;"	d
__SD_H__	./SD/SD.h	16;"	d
SdInfo_h	./Robot_Control/SdInfo.h	21;"	d
SdInfo_h	./Robot_Control/SdInfo.h	21;"	d
SdInfo_h	./SD/utility/SdInfo.h	21;"	d
SdInfo_h	./SD/utility/SdInfo.h	21;"	d
SD_INIT_TIMEOUT	./Robot_Control/SdCard.h	/^uint16_t const SD_INIT_TIMEOUT    = 2000;$/;"	v
SD_INIT_TIMEOUT	./Robot_Control/SdCard.h	/^uint16_t const SD_INIT_TIMEOUT    = 2000;$/;"	v
SD_INIT_TIMEOUT	./SD/utility/Sd2Card.h	/^uint16_t const SD_INIT_TIMEOUT = 2000;$/;"	v
SD_INIT_TIMEOUT	./SD/utility/Sd2Card.h	/^uint16_t const SD_INIT_TIMEOUT = 2000;$/;"	v
SD_PROTECT_BLOCK_ZERO	./Robot_Control/Fat16Config.h	33;"	d
SD_PROTECT_BLOCK_ZERO	./Robot_Control/Fat16Config.h	33;"	d
SD_PROTECT_BLOCK_ZERO	./SD/utility/Sd2Card.h	84;"	d
SD_PROTECT_BLOCK_ZERO	./SD/utility/Sd2Card.h	84;"	d
SD_READ_TIMEOUT	./Robot_Control/SdCard.h	/^uint16_t const SD_READ_TIMEOUT    = 300;$/;"	v
SD_READ_TIMEOUT	./Robot_Control/SdCard.h	/^uint16_t const SD_READ_TIMEOUT    = 300;$/;"	v
SD_READ_TIMEOUT	./SD/utility/Sd2Card.h	/^uint16_t const SD_READ_TIMEOUT = 300;$/;"	v
SD_READ_TIMEOUT	./SD/utility/Sd2Card.h	/^uint16_t const SD_READ_TIMEOUT = 300;$/;"	v
SD	./SD/SD.cpp	/^SDClass SD;$/;"	v
SD	./SD/SD.cpp	/^SDClass SD;$/;"	v
SdVolume	./SD/utility/SdFat.h	/^class SdVolume {$/;"	c
SdVolume	./SD/utility/SdFat.h	/^class SdVolume {$/;"	c
SdVolume	./SD/utility/SdFat.h	/^  SdVolume(void) :allocSearchStart_(2), fatType_(0) {}$/;"	f	class:SdVolume
SdVolume	./SD/utility/SdFat.h	/^  SdVolume(void) :allocSearchStart_(2), fatType_(0) {}$/;"	f	class:SdVolume
SD_WRITE_TIMEOUT	./Robot_Control/SdCard.h	/^uint16_t const SD_WRITE_TIMEOUT   = 600;$/;"	v
SD_WRITE_TIMEOUT	./Robot_Control/SdCard.h	/^uint16_t const SD_WRITE_TIMEOUT   = 600;$/;"	v
SD_WRITE_TIMEOUT	./SD/utility/Sd2Card.h	/^uint16_t const SD_WRITE_TIMEOUT = 600;$/;"	v
SD_WRITE_TIMEOUT	./SD/utility/Sd2Card.h	/^uint16_t const SD_WRITE_TIMEOUT = 600;$/;"	v
second	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSTime::second()$/;"	f	class:TinyGPSTime
second	./TinyGPSPlus/TinyGPS++.cpp	/^uint8_t TinyGPSTime::second()$/;"	f	class:TinyGPSTime
secs	./Ethernet/Dhcp.h	/^	uint16_t secs;$/;"	m	struct:_RIP_MSG_FIXED
secs	./Ethernet/Dhcp.h	/^	uint16_t secs;$/;"	m	struct:_RIP_MSG_FIXED
_secTimeout	./Ethernet/Dhcp.h	/^  unsigned long _secTimeout;$/;"	m	class:DhcpClass
_secTimeout	./Ethernet/Dhcp.h	/^  unsigned long _secTimeout;$/;"	m	class:DhcpClass
sector_size_high	./Robot_Control/SdInfo.h	/^  unsigned sector_size_high : 6;$/;"	m	struct:CSD
sector_size_high	./Robot_Control/SdInfo.h	/^  unsigned sector_size_high : 6;$/;"	m	struct:CSD
sector_size_high	./SD/utility/SdInfo.h	/^  unsigned sector_size_high : 6;$/;"	m	struct:CSDV1
sector_size_high	./SD/utility/SdInfo.h	/^  unsigned sector_size_high : 6;$/;"	m	struct:CSDV1
sector_size_high	./SD/utility/SdInfo.h	/^  unsigned sector_size_high : 6;$/;"	m	struct:CSDV2
sector_size_high	./SD/utility/SdInfo.h	/^  unsigned sector_size_high : 6;$/;"	m	struct:CSDV2
sector_size_low	./Robot_Control/SdInfo.h	/^  unsigned sector_size_low : 1;$/;"	m	struct:CSD
sector_size_low	./Robot_Control/SdInfo.h	/^  unsigned sector_size_low : 1;$/;"	m	struct:CSD
sector_size_low	./SD/utility/SdInfo.h	/^  unsigned sector_size_low : 1;$/;"	m	struct:CSDV1
sector_size_low	./SD/utility/SdInfo.h	/^  unsigned sector_size_low : 1;$/;"	m	struct:CSDV1
sector_size_low	./SD/utility/SdInfo.h	/^  unsigned sector_size_low : 1;$/;"	m	struct:CSDV2
sector_size_low	./SD/utility/SdInfo.h	/^  unsigned sector_size_low : 1;$/;"	m	struct:CSDV2
sectorsPerCluster	./Robot_Control/FatStructs.h	/^  uint8_t  sectorsPerCluster;$/;"	m	struct:biosParmBlock
sectorsPerCluster	./Robot_Control/FatStructs.h	/^  uint8_t  sectorsPerCluster;$/;"	m	struct:biosParmBlock
sectorsPerCluster	./SD/utility/FatStructs.h	/^  uint8_t  sectorsPerCluster;$/;"	m	struct:biosParmBlock
sectorsPerCluster	./SD/utility/FatStructs.h	/^  uint8_t  sectorsPerCluster;$/;"	m	struct:biosParmBlock
sectorsPerFat16	./Robot_Control/FatStructs.h	/^  uint16_t sectorsPerFat16;$/;"	m	struct:biosParmBlock
sectorsPerFat16	./Robot_Control/FatStructs.h	/^  uint16_t sectorsPerFat16;$/;"	m	struct:biosParmBlock
sectorsPerFat16	./SD/utility/FatStructs.h	/^  uint16_t sectorsPerFat16;$/;"	m	struct:biosParmBlock
sectorsPerFat16	./SD/utility/FatStructs.h	/^  uint16_t sectorsPerFat16;$/;"	m	struct:biosParmBlock
sectorsPerFat32	./Robot_Control/FatStructs.h	/^  uint32_t sectorsPerFat32;$/;"	m	struct:biosParmBlock
sectorsPerFat32	./Robot_Control/FatStructs.h	/^  uint32_t sectorsPerFat32;$/;"	m	struct:biosParmBlock
sectorsPerFat32	./SD/utility/FatStructs.h	/^  uint32_t sectorsPerFat32;$/;"	m	struct:biosParmBlock
sectorsPerFat32	./SD/utility/FatStructs.h	/^  uint32_t sectorsPerFat32;$/;"	m	struct:biosParmBlock
sectorsPerTrtack	./Robot_Control/FatStructs.h	/^  uint16_t sectorsPerTrtack;$/;"	m	struct:biosParmBlock
sectorsPerTrtack	./Robot_Control/FatStructs.h	/^  uint16_t sectorsPerTrtack;$/;"	m	struct:biosParmBlock
sectorsPerTrtack	./SD/utility/FatStructs.h	/^  uint16_t sectorsPerTrtack;$/;"	m	struct:biosParmBlock
sectorsPerTrtack	./SD/utility/FatStructs.h	/^  uint16_t sectorsPerTrtack;$/;"	m	struct:biosParmBlock
seekCur	./Robot_Control/Fat16.h	/^  uint8_t seekCur(uint32_t pos) {return seekSet(curPosition_ + pos);}$/;"	f	class:Fat16
seekCur	./Robot_Control/Fat16.h	/^  uint8_t seekCur(uint32_t pos) {return seekSet(curPosition_ + pos);}$/;"	f	class:Fat16
seekCur	./SD/utility/SdFat.h	/^  uint8_t seekCur(uint32_t pos) {$/;"	f	class:SdFile
seekCur	./SD/utility/SdFat.h	/^  uint8_t seekCur(uint32_t pos) {$/;"	f	class:SdFile
seekEnd	./Robot_Control/Fat16.h	/^  uint8_t seekEnd(void) {return seekSet(fileSize_);}$/;"	f	class:Fat16
seekEnd	./Robot_Control/Fat16.h	/^  uint8_t seekEnd(void) {return seekSet(fileSize_);}$/;"	f	class:Fat16
seekEnd	./SD/utility/SdFat.h	/^  uint8_t seekEnd(void) {return seekSet(fileSize_);}$/;"	f	class:SdFile
seekEnd	./SD/utility/SdFat.h	/^  uint8_t seekEnd(void) {return seekSet(fileSize_);}$/;"	f	class:SdFile
seek	./Robot_Control/Squawk.cpp	/^    void seek(size_t offset) { p_cursor = p_start + offset; }$/;"	f	class:StreamROM
seek	./Robot_Control/Squawk.cpp	/^    void seek(size_t offset) { p_cursor = p_start + offset; }$/;"	f	class:StreamROM
seek	./Robot_Control/SquawkSD.cpp	/^    void seek(size_t offset) { f.seekSet(offset); }$/;"	f	class:StreamFile
seek	./Robot_Control/SquawkSD.cpp	/^    void seek(size_t offset) { f.seekSet(offset); }$/;"	f	class:StreamFile
seek	./SD/File.cpp	/^boolean File::seek(uint32_t pos) {$/;"	f	class:File
seek	./SD/File.cpp	/^boolean File::seek(uint32_t pos) {$/;"	f	class:File
seekSet	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::seekSet(uint32_t pos) {$/;"	f	class:Fat16
seekSet	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::seekSet(uint32_t pos) {$/;"	f	class:Fat16
seekSet	./SD/utility/SdFile.cpp	/^uint8_t SdFile::seekSet(uint32_t pos) {$/;"	f	class:SdFile
seekSet	./SD/utility/SdFile.cpp	/^uint8_t SdFile::seekSet(uint32_t pos) {$/;"	f	class:SdFile
selectLetter	./Robot_Control/utility/RobotTextManager.cpp	/^char TextManager::selectLetter(){$/;"	f	class:TextManager
selectLetter	./Robot_Control/utility/RobotTextManager.cpp	/^char TextManager::selectLetter(){$/;"	f	class:TextManager
selectors	./Robot_Control/Multiplexer.h	/^		uint8_t selectors[4];$/;"	m	class:Multiplexer
selectors	./Robot_Control/Multiplexer.h	/^		uint8_t selectors[4];$/;"	m	class:Multiplexer
selectors	./Robot_Motor/Multiplexer.h	/^		uint8_t selectors[4];$/;"	m	class:Multiplexer
selectors	./Robot_Motor/Multiplexer.h	/^		uint8_t selectors[4];$/;"	m	class:Multiplexer
selectPin	./Robot_Control/Multiplexer.cpp	/^void Multiplexer::selectPin(uint8_t num){$/;"	f	class:Multiplexer
selectPin	./Robot_Control/Multiplexer.cpp	/^void Multiplexer::selectPin(uint8_t num){$/;"	f	class:Multiplexer
selectPin	./Robot_Motor/Multiplexer.cpp	/^void Multiplexer::selectPin(uint8_t num){$/;"	f	class:Multiplexer
selectPin	./Robot_Motor/Multiplexer.cpp	/^void Multiplexer::selectPin(uint8_t num){$/;"	f	class:Multiplexer
sendAnalog	./Firmata/Firmata.cpp	/^void FirmataClass::sendAnalog(byte pin, int value) $/;"	f	class:FirmataClass
sendAnalog	./Firmata/Firmata.cpp	/^void FirmataClass::sendAnalog(byte pin, int value) $/;"	f	class:FirmataClass
SendATCmdWaitResp	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SendATCmdWaitResp(char const *AT_cmd_string,$/;"	f	class:GSM
SendATCmdWaitResp	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SendATCmdWaitResp(char const *AT_cmd_string,$/;"	f	class:GSM
sendBuffer	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendBuffer(uint8_t* param, uint16_t param_len, uint8_t lastParam)$/;"	f	class:SpiDrv
sendBuffer	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendBuffer(uint8_t* param, uint16_t param_len, uint8_t lastParam)$/;"	f	class:SpiDrv
sendCmd	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendCmd(uint8_t cmd, uint8_t numParam)$/;"	f	class:SpiDrv
sendCmd	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendCmd(uint8_t cmd, uint8_t numParam)$/;"	f	class:SpiDrv
send_data_processing	./Ethernet/utility/w5100.cpp	/^void W5100Class::send_data_processing(SOCKET s, const uint8_t *data, uint16_t len)$/;"	f	class:W5100Class
send_data_processing	./Ethernet/utility/w5100.cpp	/^void W5100Class::send_data_processing(SOCKET s, const uint8_t *data, uint16_t len)$/;"	f	class:W5100Class
send_data_processing_offset	./Ethernet/utility/w5100.cpp	/^void W5100Class::send_data_processing_offset(SOCKET s, uint16_t data_offset, const uint8_t *data, uint16_t len)$/;"	f	class:W5100Class
send_data_processing_offset	./Ethernet/utility/w5100.cpp	/^void W5100Class::send_data_processing_offset(SOCKET s, uint16_t data_offset, const uint8_t *data, uint16_t len)$/;"	f	class:W5100Class
sendData	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::sendData(){$/;"	f	class:EasyTransfer2
sendData	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::sendData(){$/;"	f	class:EasyTransfer2
sendData	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::sendData(){$/;"	f	class:EasyTransfer2
sendData	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::sendData(){$/;"	f	class:EasyTransfer2
SEND_DATA_TCP_CMD	./WiFi/utility/wifi_spi.h	/^	SEND_DATA_TCP_CMD		= 0x44,$/;"	e	enum:__anon4
SEND_DATA_TCP_CMD	./WiFi/utility/wifi_spi.h	/^	SEND_DATA_TCP_CMD		= 0x44,$/;"	e	enum:__anon4
SEND_DATA_UDP_CMD	./WiFi/utility/wifi_spi.h	/^	SEND_DATA_UDP_CMD	= 0x39,$/;"	e	enum:__anon4
SEND_DATA_UDP_CMD	./WiFi/utility/wifi_spi.h	/^	SEND_DATA_UDP_CMD	= 0x39,$/;"	e	enum:__anon4
sendData	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::sendData(uint8_t sock, const uint8_t *data, uint16_t len)$/;"	f	class:ServerDrv
sendData	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::sendData(uint8_t sock, const uint8_t *data, uint16_t len)$/;"	f	class:ServerDrv
send_DHCP_MESSAGE	./Ethernet/Dhcp.cpp	/^void DhcpClass::send_DHCP_MESSAGE(uint8_t messageType, uint16_t secondsElapsed)$/;"	f	class:DhcpClass
send_DHCP_MESSAGE	./Ethernet/Dhcp.cpp	/^void DhcpClass::send_DHCP_MESSAGE(uint8_t messageType, uint16_t secondsElapsed)$/;"	f	class:DhcpClass
sendDigital	./Firmata/Firmata.cpp	/^void FirmataClass::sendDigital(byte pin, int value) $/;"	f	class:FirmataClass
sendDigital	./Firmata/Firmata.cpp	/^void FirmataClass::sendDigital(byte pin, int value) $/;"	f	class:FirmataClass
sendDigitalPort	./Firmata/Firmata.cpp	/^void FirmataClass::sendDigitalPort(byte portNumber, int portData)$/;"	f	class:FirmataClass
sendDigitalPort	./Firmata/Firmata.cpp	/^void FirmataClass::sendDigitalPort(byte portNumber, int portData)$/;"	f	class:FirmataClass
SendDTMFSignal	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SendDTMFSignal(byte dtmf_tone)$/;"	f	class:GSM
SendDTMFSignal	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SendDTMFSignal(byte dtmf_tone)$/;"	f	class:GSM
send	./Ethernet/utility/socket.cpp	/^uint16_t send(SOCKET s, const uint8_t * buf, uint16_t len)$/;"	f
send	./Ethernet/utility/socket.cpp	/^uint16_t send(SOCKET s, const uint8_t * buf, uint16_t len)$/;"	f
SENDINGSMS	./GSM/GSM3MobileMockupProvider.h	/^		enum GSM3_modemlinest_e { IDLE, WAITINGANSWER, SENDINGSMS};$/;"	e	enum:GSM3MobileMockupProvider::GSM3_modemlinest_e
SENDINGSMS	./GSM/GSM3MobileMockupProvider.h	/^		enum GSM3_modemlinest_e { IDLE, WAITINGANSWER, SENDINGSMS};$/;"	e	enum:GSM3MobileMockupProvider::GSM3_modemlinest_e
send	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::send(uint8_t value, uint8_t mode) {$/;"	f	class:LiquidCrystal
send	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::send(uint8_t value, uint8_t mode) {$/;"	f	class:LiquidCrystal
SEND_OK	./Ethernet/utility/w5100.h	/^  static const uint8_t SEND_OK = 0x10;$/;"	m	class:SnIR
SEND_OK	./Ethernet/utility/w5100.h	/^  static const uint8_t SEND_OK = 0x10;$/;"	m	class:SnIR
sendParamLen16	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendParamLen16(uint16_t param_len)$/;"	f	class:SpiDrv
sendParamLen16	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendParamLen16(uint16_t param_len)$/;"	f	class:SpiDrv
sendParamLen8	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendParamLen8(uint8_t param_len)$/;"	f	class:SpiDrv
sendParamLen8	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendParamLen8(uint8_t param_len)$/;"	f	class:SpiDrv
sendParam	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendParam(uint16_t param, uint8_t lastParam)$/;"	f	class:SpiDrv
sendParam	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendParam(uint16_t param, uint8_t lastParam)$/;"	f	class:SpiDrv
sendParam	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendParam(uint8_t* param, uint8_t param_len, uint8_t lastParam)$/;"	f	class:SpiDrv
sendParam	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::sendParam(uint8_t* param, uint8_t param_len, uint8_t lastParam)$/;"	f	class:SpiDrv
SendSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SendSMS(byte sim_phonebook_position, char *message_str) $/;"	f	class:GSM
SendSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SendSMS(byte sim_phonebook_position, char *message_str) $/;"	f	class:GSM
SendSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SendSMS(char *number_str, char *message_str) $/;"	f	class:GSM
SendSMS	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SendSMS(char *number_str, char *message_str) $/;"	f	class:GSM
sendString	./Firmata/Firmata.cpp	/^void FirmataClass::sendString(byte command, const char* string) $/;"	f	class:FirmataClass
sendString	./Firmata/Firmata.cpp	/^void FirmataClass::sendString(byte command, const char* string) $/;"	f	class:FirmataClass
sendString	./Firmata/Firmata.cpp	/^void FirmataClass::sendString(const char* string) $/;"	f	class:FirmataClass
sendString	./Firmata/Firmata.cpp	/^void FirmataClass::sendString(const char* string) $/;"	f	class:FirmataClass
sendSysex	./Firmata/Firmata.cpp	/^void FirmataClass::sendSysex(byte command, byte bytec, byte* bytev) $/;"	f	class:FirmataClass
sendSysex	./Firmata/Firmata.cpp	/^void FirmataClass::sendSysex(byte command, byte bytec, byte* bytev) $/;"	f	class:FirmataClass
sendto	./Ethernet/utility/socket.cpp	/^uint16_t sendto(SOCKET s, const uint8_t *buf, uint16_t len, uint8_t *addr, uint16_t port)$/;"	f
sendto	./Ethernet/utility/socket.cpp	/^uint16_t sendto(SOCKET s, const uint8_t *buf, uint16_t len, uint8_t *addr, uint16_t port)$/;"	f
sendUdpData	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::sendUdpData(uint8_t sock)$/;"	f	class:ServerDrv
sendUdpData	./WiFi/utility/server_drv.cpp	/^bool ServerDrv::sendUdpData(uint8_t sock)$/;"	f	class:ServerDrv
sendUDP	./Ethernet/utility/socket.cpp	/^int sendUDP(SOCKET s)$/;"	f
sendUDP	./Ethernet/utility/socket.cpp	/^int sendUDP(SOCKET s)$/;"	f
sendValueAsTwo7bitBytes	./Firmata/Firmata.cpp	/^void FirmataClass::sendValueAsTwo7bitBytes(int value)$/;"	f	class:FirmataClass
sendValueAsTwo7bitBytes	./Firmata/Firmata.cpp	/^void FirmataClass::sendValueAsTwo7bitBytes(int value)$/;"	f	class:FirmataClass
sensor_blanco	./Robot_Motor/LineFollow.h	/^		int sensor_blanco[5];$/;"	m	class:LineFollow
sensor_blanco	./Robot_Motor/LineFollow.h	/^		int sensor_blanco[5];$/;"	m	class:LineFollow
sensor_negro	./Robot_Motor/LineFollow.h	/^		int sensor_negro[5];$/;"	m	class:LineFollow
sensor_negro	./Robot_Motor/LineFollow.h	/^		int sensor_negro[5];$/;"	m	class:LineFollow
sentenceHasFix	./TinyGPSPlus/TinyGPS++.h	/^  bool sentenceHasFix;$/;"	m	class:TinyGPSPlus
sentenceHasFix	./TinyGPSPlus/TinyGPS++.h	/^  bool sentenceHasFix;$/;"	m	class:TinyGPSPlus
sentenceName	./TinyGPSPlus/TinyGPS++.h	/^   const char *sentenceName;$/;"	m	class:TinyGPSCustom
sentenceName	./TinyGPSPlus/TinyGPS++.h	/^   const char *sentenceName;$/;"	m	class:TinyGPSCustom
sentencesWithFixCount	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t sentencesWithFixCount;$/;"	m	class:TinyGPSPlus
sentencesWithFixCount	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t sentencesWithFixCount;$/;"	m	class:TinyGPSPlus
sentencesWithFix	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t sentencesWithFix() const { return sentencesWithFixCount; }$/;"	f	class:TinyGPSPlus
sentencesWithFix	./TinyGPSPlus/TinyGPS++.h	/^  uint32_t sentencesWithFix() const { return sentencesWithFixCount; }$/;"	f	class:TinyGPSPlus
_sentence_type	./TinyGPS/TinyGPS.h	/^  byte _sentence_type;$/;"	m	class:TinyGPS
_sentence_type	./TinyGPS/TinyGPS.h	/^  byte _sentence_type;$/;"	m	class:TinyGPS
SerialPrintln_P	./Robot_Control/Fat16util.h	/^static NOINLINE void SerialPrintln_P(PGM_P str) {$/;"	f
SerialPrintln_P	./Robot_Control/Fat16util.h	/^static NOINLINE void SerialPrintln_P(PGM_P str) {$/;"	f
SerialPrintln_P	./SD/utility/SdFatUtil.h	/^static NOINLINE void SerialPrintln_P(PGM_P str) {$/;"	f
SerialPrintln_P	./SD/utility/SdFatUtil.h	/^static NOINLINE void SerialPrintln_P(PGM_P str) {$/;"	f
SerialPrint_P	./Robot_Control/Fat16util.h	/^static NOINLINE void SerialPrint_P(PGM_P str) {$/;"	f
SerialPrint_P	./Robot_Control/Fat16util.h	/^static NOINLINE void SerialPrint_P(PGM_P str) {$/;"	f
SerialPrint_P	./SD/utility/SdFatUtil.h	/^static NOINLINE void SerialPrint_P(PGM_P str) {$/;"	f
SerialPrint_P	./SD/utility/SdFatUtil.h	/^static NOINLINE void SerialPrint_P(PGM_P str) {$/;"	f
_serial	./Robot_Control/EasyTransfer2.h	/^HardwareSerial *_serial;$/;"	m	class:EasyTransfer2
_serial	./Robot_Control/EasyTransfer2.h	/^HardwareSerial *_serial;$/;"	m	class:EasyTransfer2
_serial	./Robot_Motor/EasyTransfer2.h	/^HardwareSerial *_serial;$/;"	m	class:EasyTransfer2
_serial	./Robot_Motor/EasyTransfer2.h	/^HardwareSerial *_serial;$/;"	m	class:EasyTransfer2
Server_Drv_h	./WiFi/utility/server_drv.h	2;"	d
Server_Drv_h	./WiFi/utility/server_drv.h	2;"	d
serverDrv	./WiFi/utility/server_drv.cpp	/^ServerDrv serverDrv;$/;"	v
serverDrv	./WiFi/utility/server_drv.cpp	/^ServerDrv serverDrv;$/;"	v
ServerDrv	./WiFi/utility/server_drv.h	/^class ServerDrv$/;"	c
ServerDrv	./WiFi/utility/server_drv.h	/^class ServerDrv$/;"	c
_server_port	./Ethernet/Ethernet.cpp	/^uint16_t EthernetClass::_server_port[MAX_SOCK_NUM] = { $/;"	m	class:EthernetClass	file:
_server_port	./Ethernet/Ethernet.cpp	/^uint16_t EthernetClass::_server_port[MAX_SOCK_NUM] = { $/;"	m	class:EthernetClass	file:
_server_port	./Ethernet/Ethernet.h	/^  static uint16_t _server_port[MAX_SOCK_NUM];$/;"	m	class:EthernetClass
_server_port	./Ethernet/Ethernet.h	/^  static uint16_t _server_port[MAX_SOCK_NUM];$/;"	m	class:EthernetClass
_server_port	./WiFi/WiFi.cpp	/^uint16_t 	WiFiClass::_server_port[MAX_SOCK_NUM] = { 0, 0, 0, 0 };$/;"	m	class:WiFiClass	file:
_server_port	./WiFi/WiFi.cpp	/^uint16_t 	WiFiClass::_server_port[MAX_SOCK_NUM] = { 0, 0, 0, 0 };$/;"	m	class:WiFiClass	file:
_server_port	./WiFi/WiFi.h	/^    static uint16_t _server_port[MAX_SOCK_NUM];$/;"	m	class:WiFiClass
_server_port	./WiFi/WiFi.h	/^    static uint16_t _server_port[MAX_SOCK_NUM];$/;"	m	class:WiFiClass
servo1	./AFMotor/examples/MotorParty/MotorParty.pde	/^Servo servo1;$/;"	v
servo1	./AFMotor/examples/MotorParty/MotorParty.pde	/^Servo servo1;$/;"	v
servo1	./SoftwareServo/examples/SerialServo/SerialServo.pde	/^SoftwareServo servo1;$/;"	v
servo1	./SoftwareServo/examples/SerialServo/SerialServo.pde	/^SoftwareServo servo1;$/;"	v
servo2	./SoftwareServo/examples/SerialServo/SerialServo.pde	/^SoftwareServo servo2;$/;"	v
servo2	./SoftwareServo/examples/SerialServo/SerialServo.pde	/^SoftwareServo servo2;$/;"	v
SERVO_CONFIG	./Firmata/Firmata.h	44;"	d
SERVO_CONFIG	./Firmata/Firmata.h	44;"	d
ServoCount	./Servo/Servo.cpp	/^uint8_t ServoCount = 0;                                     \/\/ the total number of attached servos$/;"	v
ServoCount	./Servo/Servo.cpp	/^uint8_t ServoCount = 0;                                     \/\/ the total number of attached servos$/;"	v
SERVO	./Firmata/Firmata.h	72;"	d
SERVO	./Firmata/Firmata.h	72;"	d
Servo_h	./Servo/Servo.h	46;"	d
Servo_h	./Servo/Servo.h	46;"	d
SERVO_INDEX	./Servo/Servo.cpp	67;"	d	file:
SERVO_INDEX	./Servo/Servo.cpp	67;"	d	file:
servoIndex	./Servo/Servo.h	/^   uint8_t servoIndex;               \/\/ index into the channel data for this servo$/;"	m	class:Servo
servoIndex	./Servo/Servo.h	/^   uint8_t servoIndex;               \/\/ index into the channel data for this servo$/;"	m	class:Servo
SERVO_INDEX_TO_CHANNEL	./Servo/Servo.cpp	66;"	d	file:
SERVO_INDEX_TO_CHANNEL	./Servo/Servo.cpp	66;"	d	file:
SERVO_INDEX_TO_TIMER	./Servo/Servo.cpp	65;"	d	file:
SERVO_INDEX_TO_TIMER	./Servo/Servo.cpp	65;"	d	file:
SERVO_MAX	./Servo/Servo.cpp	71;"	d	file:
SERVO_MAX	./Servo/Servo.cpp	71;"	d	file:
SERVO_MIN	./Servo/Servo.cpp	70;"	d	file:
SERVO_MIN	./Servo/Servo.cpp	70;"	d	file:
ServoPin_t	./Servo/Servo.h	/^} ServoPin_t   ;  $/;"	t	typeref:struct:__anon24
ServoPin_t	./Servo/Servo.h	/^} ServoPin_t   ;  $/;"	t	typeref:struct:__anon24
SERVO	./Servo/Servo.cpp	68;"	d	file:
SERVO	./Servo/Servo.cpp	68;"	d	file:
Servo	./Servo/Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	./Servo/Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	./Servo/Servo.h	/^class Servo$/;"	c
Servo	./Servo/Servo.h	/^class Servo$/;"	c
SERVOS_PER_TIMER	./Servo/Servo.h	93;"	d
SERVOS_PER_TIMER	./Servo/Servo.h	93;"	d
servos	./Servo/Servo.cpp	/^static servo_t servos[MAX_SERVOS];                          \/\/ static array of servo structures$/;"	v	file:
servos	./Servo/Servo.cpp	/^static servo_t servos[MAX_SERVOS];                          \/\/ static array of servo structures$/;"	v	file:
servo_t	./Servo/Servo.h	/^} servo_t;$/;"	t	typeref:struct:__anon25
servo_t	./Servo/Servo.h	/^} servo_t;$/;"	t	typeref:struct:__anon25
Servo_VERSION	./Servo/Servo.h	86;"	d
Servo_VERSION	./Servo/Servo.h	86;"	d
setAddrWindow	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::setAddrWindow(uint8_t x0, uint8_t y0, uint8_t x1,$/;"	f	class:Arduino_LCD
setAddrWindow	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::setAddrWindow(uint8_t x0, uint8_t y0, uint8_t x1,$/;"	f	class:Arduino_LCD
setAddrWindow	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::setAddrWindow(uint8_t x0, uint8_t y0, uint8_t x1,$/;"	f	class:Adafruit_ST7735
setAddrWindow	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::setAddrWindow(uint8_t x0, uint8_t y0, uint8_t x1,$/;"	f	class:Adafruit_ST7735
setBand	./GSM/GSM3ShieldV1BandManagement.cpp	/^bool GSM3ShieldV1BandManagement::setBand(String band)$/;"	f	class:GSM3ShieldV1BandManagement
setBand	./GSM/GSM3ShieldV1BandManagement.cpp	/^bool GSM3ShieldV1BandManagement::setBand(String band)$/;"	f	class:GSM3ShieldV1BandManagement
setBitOrder	./Robot_Control/SPI.cpp	/^void SPIClass::setBitOrder(uint8_t bitOrder)$/;"	f	class:SPIClass
setBitOrder	./Robot_Control/SPI.cpp	/^void SPIClass::setBitOrder(uint8_t bitOrder)$/;"	f	class:SPIClass
setBitOrder	./SPI/SPI.cpp	/^void SPIClass::setBitOrder(uint8_t bitOrder)$/;"	f	class:SPIClass
setBitOrder	./SPI/SPI.cpp	/^void SPIClass::setBitOrder(uint8_t bitOrder)$/;"	f	class:SPIClass
setClockDivider	./Robot_Control/SPI.cpp	/^void SPIClass::setClockDivider(uint8_t rate)$/;"	f	class:SPIClass
setClockDivider	./Robot_Control/SPI.cpp	/^void SPIClass::setClockDivider(uint8_t rate)$/;"	f	class:SPIClass
setClockDivider	./SPI/SPI.cpp	/^void SPIClass::setClockDivider(uint8_t rate)$/;"	f	class:SPIClass
setClockDivider	./SPI/SPI.cpp	/^void SPIClass::setClockDivider(uint8_t rate)$/;"	f	class:SPIClass
setCommandCounter	./GSM/GSM3ShieldV1ModemCore.h	/^		void setCommandCounter(uint8_t c){commandCounter=c;};$/;"	f	class:GSM3ShieldV1ModemCore
setCommandCounter	./GSM/GSM3ShieldV1ModemCore.h	/^		void setCommandCounter(uint8_t c){commandCounter=c;};$/;"	f	class:GSM3ShieldV1ModemCore
setCommandError	./GSM/GSM3ShieldV1ModemCore.h	/^		void setCommandError(uint8_t n){commandError=n;};$/;"	f	class:GSM3ShieldV1ModemCore
setCommandError	./GSM/GSM3ShieldV1ModemCore.h	/^		void setCommandError(uint8_t n){commandError=n;};$/;"	f	class:GSM3ShieldV1ModemCore
SetCommLineStatus	./GSM_Shield/GSM_Shield.h	/^    inline void SetCommLineStatus(byte new_status) {comm_line_status = new_status;};$/;"	f	class:GSM
SetCommLineStatus	./GSM_Shield/GSM_Shield.h	/^    inline void SetCommLineStatus(byte new_status) {comm_line_status = new_status;};$/;"	f	class:GSM
setCursor	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::setCursor(uint8_t col, uint8_t row)$/;"	f	class:LiquidCrystal
setCursor	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::setCursor(uint8_t col, uint8_t row)$/;"	f	class:LiquidCrystal
setCursor	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setCursor(int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
setCursor	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setCursor(int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
setCursor	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setCursor(int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
setCursor	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setCursor(int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
setDataMode	./Robot_Control/SPI.cpp	/^void SPIClass::setDataMode(uint8_t mode)$/;"	f	class:SPIClass
setDataMode	./Robot_Control/SPI.cpp	/^void SPIClass::setDataMode(uint8_t mode)$/;"	f	class:SPIClass
setDataMode	./SPI/SPI.cpp	/^void SPIClass::setDataMode(uint8_t mode)$/;"	f	class:SPIClass
setDataMode	./SPI/SPI.cpp	/^void SPIClass::setDataMode(uint8_t mode)$/;"	f	class:SPIClass
setDate	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSDate::setDate(const char *term)$/;"	f	class:TinyGPSDate
setDate	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSDate::setDate(const char *term)$/;"	f	class:TinyGPSDate
setDebug	./GSM/GSM3ShieldV1ModemCore.h	/^		void setDebug(bool db){_debug=db;};$/;"	f	class:GSM3ShieldV1ModemCore
setDebug	./GSM/GSM3ShieldV1ModemCore.h	/^		void setDebug(bool db){_debug=db;};$/;"	f	class:GSM3ShieldV1ModemCore
SET_DNS_CONFIG_CMD	./WiFi/utility/wifi_spi.h	/^	SET_DNS_CONFIG_CMD	= 0x15,$/;"	e	enum:__anon4
SET_DNS_CONFIG_CMD	./WiFi/utility/wifi_spi.h	/^	SET_DNS_CONFIG_CMD	= 0x15,$/;"	e	enum:__anon4
setDNS	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::setDNS(uint8_t validParams, uint32_t dns_server1, uint32_t dns_server2)$/;"	f	class:WiFiDrv
setDNS	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::setDNS(uint8_t validParams, uint32_t dns_server1, uint32_t dns_server2)$/;"	f	class:WiFiDrv
setDNS	./WiFi/WiFi.cpp	/^void WiFiClass::setDNS(IPAddress dns_server1)$/;"	f	class:WiFiClass
setDNS	./WiFi/WiFi.cpp	/^void WiFiClass::setDNS(IPAddress dns_server1)$/;"	f	class:WiFiClass
setDNS	./WiFi/WiFi.cpp	/^void WiFiClass::setDNS(IPAddress dns_server1, IPAddress dns_server2)$/;"	f	class:WiFiClass
setDNS	./WiFi/WiFi.cpp	/^void WiFiClass::setDNS(IPAddress dns_server1, IPAddress dns_server2)$/;"	f	class:WiFiClass
setFirmwareNameAndVersion	./Firmata/Firmata.cpp	/^void FirmataClass::setFirmwareNameAndVersion(const char *name, byte major, byte minor)$/;"	f	class:FirmataClass
setFirmwareNameAndVersion	./Firmata/Firmata.cpp	/^void FirmataClass::setFirmwareNameAndVersion(const char *name, byte major, byte minor)$/;"	f	class:FirmataClass
setFirmwareVersion	./Firmata/Firmata.h	160;"	d
setFirmwareVersion	./Firmata/Firmata.h	160;"	d
setGatewayIp	./Ethernet/utility/w5100.h	/^void W5100Class::setGatewayIp(uint8_t *_addr) {$/;"	f	class:W5100Class
setGatewayIp	./Ethernet/utility/w5100.h	/^void W5100Class::setGatewayIp(uint8_t *_addr) {$/;"	f	class:W5100Class
setInputPool	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::setInputPool(int code){$/;"	f	class:TextManager
setInputPool	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::setInputPool(int code){$/;"	f	class:TextManager
setIPAddress	./Ethernet/utility/w5100.h	/^void W5100Class::setIPAddress(uint8_t *_addr) {$/;"	f	class:W5100Class
setIPAddress	./Ethernet/utility/w5100.h	/^void W5100Class::setIPAddress(uint8_t *_addr) {$/;"	f	class:W5100Class
SET_IP_CONFIG_CMD	./WiFi/utility/wifi_spi.h	/^	SET_IP_CONFIG_CMD	= 0x14,$/;"	e	enum:__anon4
SET_IP_CONFIG_CMD	./WiFi/utility/wifi_spi.h	/^	SET_IP_CONFIG_CMD	= 0x14,$/;"	e	enum:__anon4
SET_KEY_CMD	./WiFi/utility/wifi_spi.h	/^	SET_KEY_CMD	        = 0x12,$/;"	e	enum:__anon4
SET_KEY_CMD	./WiFi/utility/wifi_spi.h	/^	SET_KEY_CMD	        = 0x12,$/;"	e	enum:__anon4
setLatitude	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSLocation::setLatitude(const char *term)$/;"	f	class:TinyGPSLocation
setLatitude	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSLocation::setLatitude(const char *term)$/;"	f	class:TinyGPSLocation
setLongitude	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSLocation::setLongitude(const char *term)$/;"	f	class:TinyGPSLocation
setLongitude	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSLocation::setLongitude(const char *term)$/;"	f	class:TinyGPSLocation
setMACAddress	./Ethernet/utility/w5100.h	/^void W5100Class::setMACAddress(uint8_t *_addr) {$/;"	f	class:W5100Class
setMACAddress	./Ethernet/utility/w5100.h	/^void W5100Class::setMACAddress(uint8_t *_addr) {$/;"	f	class:W5100Class
setMargin	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::setMargin(int margin_left,int margin_top){$/;"	f	class:TextManager
setMargin	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::setMargin(int margin_left,int margin_top){$/;"	f	class:TextManager
setMaximumPulse	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::setMaximumPulse(uint16_t t)$/;"	f	class:SoftwareServo
setMaximumPulse	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::setMaximumPulse(uint16_t t)$/;"	f	class:SoftwareServo
setMinimumPulse	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::setMinimumPulse(uint16_t t)$/;"	f	class:SoftwareServo
setMinimumPulse	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::setMinimumPulse(uint16_t t)$/;"	f	class:SoftwareServo
setMode	./Robot_Control/ArduinoRobot.cpp	/^void RobotControl::setMode(uint8_t mode){$/;"	f	class:RobotControl
setMode	./Robot_Control/ArduinoRobot.cpp	/^void RobotControl::setMode(uint8_t mode){$/;"	f	class:RobotControl
setMode	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::setMode(uint8_t mode){$/;"	f	class:RobotMotorBoard
setMode	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::setMode(uint8_t mode){$/;"	f	class:RobotMotorBoard
set_motorBoardData	./Robot_Control/Sensors.cpp	/^void RobotControl::set_motorBoardData(uint8_t port, int data){$/;"	f	class:RobotControl
set_motorBoardData	./Robot_Control/Sensors.cpp	/^void RobotControl::set_motorBoardData(uint8_t port, int data){$/;"	f	class:RobotControl
SET_NET_CMD	./WiFi/utility/wifi_spi.h	/^	SET_NET_CMD 		= 0x10,$/;"	e	enum:__anon4
SET_NET_CMD	./WiFi/utility/wifi_spi.h	/^	SET_NET_CMD 		= 0x10,$/;"	e	enum:__anon4
setOngoingCommand	./GSM/GSM3ShieldV1ModemCore.h	/^		void setOngoingCommand(GSM3_commandType_e c){ongoingCommand=c;};$/;"	f	class:GSM3ShieldV1ModemCore
setOngoingCommand	./GSM/GSM3ShieldV1ModemCore.h	/^		void setOngoingCommand(GSM3_commandType_e c){ongoingCommand=c;};$/;"	f	class:GSM3ShieldV1ModemCore
SET_PASSPHRASE_CMD	./WiFi/utility/wifi_spi.h	/^	SET_PASSPHRASE_CMD	= 0x11,$/;"	e	enum:__anon4
SET_PASSPHRASE_CMD	./WiFi/utility/wifi_spi.h	/^	SET_PASSPHRASE_CMD	= 0x11,$/;"	e	enum:__anon4
setPhoneNumber	./GSM/GSM3ShieldV1ModemCore.h	/^		void setPhoneNumber(char *n){phoneNumber=n;};$/;"	f	class:GSM3ShieldV1ModemCore
setPhoneNumber	./GSM/GSM3ShieldV1ModemCore.h	/^		void setPhoneNumber(char *n){phoneNumber=n;};$/;"	f	class:GSM3ShieldV1ModemCore
SET_PIN_MODE	./Firmata/Firmata.h	34;"	d
SET_PIN_MODE	./Firmata/Firmata.h	34;"	d
setPinMode	./SD/utility/Sd2PinMap.h	/^  void setPinMode(uint8_t pin, uint8_t mode) {$/;"	f
setPinMode	./SD/utility/Sd2PinMap.h	/^  void setPinMode(uint8_t pin, uint8_t mode) {$/;"	f
setPINUsed	./GSM/GSM3ShieldV1PinManagement.cpp	/^void GSM3ShieldV1PinManagement::setPINUsed(bool used)$/;"	f	class:GSM3ShieldV1PinManagement
setPINUsed	./GSM/GSM3ShieldV1PinManagement.cpp	/^void GSM3ShieldV1PinManagement::setPINUsed(bool used)$/;"	f	class:GSM3ShieldV1PinManagement
setPort	./GSM/GSM3ShieldV1ModemCore.h	/^		void setPort(int p){port=p;};$/;"	f	class:GSM3ShieldV1ModemCore
setPort	./GSM/GSM3ShieldV1ModemCore.h	/^		void setPort(int p){port=p;};$/;"	f	class:GSM3ShieldV1ModemCore
setPWM1	./AFMotor/AFMotor.cpp	/^inline void setPWM1(uint8_t s) {$/;"	f
setPWM1	./AFMotor/AFMotor.cpp	/^inline void setPWM1(uint8_t s) {$/;"	f
setPWM2	./AFMotor/AFMotor.cpp	/^inline void setPWM2(uint8_t s) {$/;"	f
setPWM2	./AFMotor/AFMotor.cpp	/^inline void setPWM2(uint8_t s) {$/;"	f
setPWM3	./AFMotor/AFMotor.cpp	/^inline void setPWM3(uint8_t s) {$/;"	f
setPWM3	./AFMotor/AFMotor.cpp	/^inline void setPWM3(uint8_t s) {$/;"	f
setPWM4	./AFMotor/AFMotor.cpp	/^inline void setPWM4(uint8_t s) {$/;"	f
setPWM4	./AFMotor/AFMotor.cpp	/^inline void setPWM4(uint8_t s) {$/;"	f
setRetransmissionCount	./Ethernet/utility/w5100.h	/^void W5100Class::setRetransmissionCount(uint8_t _retry) {$/;"	f	class:W5100Class
setRetransmissionCount	./Ethernet/utility/w5100.h	/^void W5100Class::setRetransmissionCount(uint8_t _retry) {$/;"	f	class:W5100Class
setRetransmissionTime	./Ethernet/utility/w5100.h	/^void W5100Class::setRetransmissionTime(uint16_t _timeout) {$/;"	f	class:W5100Class
setRetransmissionTime	./Ethernet/utility/w5100.h	/^void W5100Class::setRetransmissionTime(uint16_t _timeout) {$/;"	f	class:W5100Class
setRotation	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setRotation(uint8_t x) {$/;"	f	class:Adafruit_GFX
setRotation	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setRotation(uint8_t x) {$/;"	f	class:Adafruit_GFX
setRotation	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::setRotation(uint8_t m) {$/;"	f	class:Arduino_LCD
setRotation	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::setRotation(uint8_t m) {$/;"	f	class:Arduino_LCD
setRotation	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setRotation(uint8_t x) {$/;"	f	class:Adafruit_GFX
setRotation	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setRotation(uint8_t x) {$/;"	f	class:Adafruit_GFX
setRotation	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::setRotation(uint8_t m) {$/;"	f	class:Adafruit_ST7735
setRotation	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::setRotation(uint8_t m) {$/;"	f	class:Adafruit_ST7735
setRX	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::setRX()$/;"	f	class:GSM3SoftSerial
setRX	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::setRX()$/;"	f	class:GSM3SoftSerial
setRX	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::setRX(uint8_t rx)$/;"	f	class:SoftwareSerial
setRX	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::setRX(uint8_t rx)$/;"	f	class:SoftwareSerial
setSckRate	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::setSckRate(uint8_t sckRateID) {$/;"	f	class:Sd2Card
setSckRate	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::setSckRate(uint8_t sckRateID) {$/;"	f	class:Sd2Card
SetSpeaker	./GSM_Shield/GSM_Shield.cpp	/^void GSM::SetSpeaker(byte off_on)$/;"	f	class:GSM
SetSpeaker	./GSM_Shield/GSM_Shield.cpp	/^void GSM::SetSpeaker(byte off_on)$/;"	f	class:GSM
SetSpeakerVolume	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SetSpeakerVolume(byte speaker_volume)$/;"	f	class:GSM
SetSpeakerVolume	./GSM_Shield/GSM_Shield.cpp	/^char GSM::SetSpeakerVolume(byte speaker_volume)$/;"	f	class:GSM
setSpeed	./AFMotor/AFMotor.cpp	/^void AF_DCMotor::setSpeed(uint8_t speed) {$/;"	f	class:AF_DCMotor
setSpeed	./AFMotor/AFMotor.cpp	/^void AF_DCMotor::setSpeed(uint8_t speed) {$/;"	f	class:AF_DCMotor
setSpeed	./AFMotor/AFMotor.cpp	/^void AF_Stepper::setSpeed(uint16_t rpm) {$/;"	f	class:AF_Stepper
setSpeed	./AFMotor/AFMotor.cpp	/^void AF_Stepper::setSpeed(uint16_t rpm) {$/;"	f	class:AF_Stepper
setSpeed	./Stepper/Stepper.cpp	/^void Stepper::setSpeed(long whatSpeed)$/;"	f	class:Stepper
setSpeed	./Stepper/Stepper.cpp	/^void Stepper::setSpeed(long whatSpeed)$/;"	f	class:Stepper
setSS	./Ethernet/utility/w5100.h	/^  inline static void setSS()     { PORTB &= ~_BV(0); };$/;"	f	class:W5100Class
setSS	./Ethernet/utility/w5100.h	/^  inline static void setSS()     { PORTB &= ~_BV(0); };$/;"	f	class:W5100Class
setSS	./Ethernet/utility/w5100.h	/^  inline static void setSS()     { PORTB &= ~_BV(2); };$/;"	f	class:W5100Class
setSS	./Ethernet/utility/w5100.h	/^  inline static void setSS()     { PORTB &= ~_BV(2); };$/;"	f	class:W5100Class
setSS	./Ethernet/utility/w5100.h	/^  inline static void setSS()     { PORTB &= ~_BV(4); };$/;"	f	class:W5100Class
setSS	./Ethernet/utility/w5100.h	/^  inline static void setSS()     { PORTB &= ~_BV(4); };$/;"	f	class:W5100Class
setSS	./Ethernet/utility/w5100.h	/^  inline static void setSS()     { PORTB &= ~_BV(6); };$/;"	f	class:W5100Class
setSS	./Ethernet/utility/w5100.h	/^  inline static void setSS()     { PORTB &= ~_BV(6); };$/;"	f	class:W5100Class
setStatus	./GSM/GSM3ShieldV1ModemCore.h	/^		inline void setStatus(GSM3_NetworkStatus_t status) { _status = status; };$/;"	f	class:GSM3ShieldV1ModemCore
setStatus	./GSM/GSM3ShieldV1ModemCore.h	/^		inline void setStatus(GSM3_NetworkStatus_t status) { _status = status; };$/;"	f	class:GSM3ShieldV1ModemCore
setSubnetMask	./Ethernet/utility/w5100.h	/^void W5100Class::setSubnetMask(uint8_t *_addr) {$/;"	f	class:W5100Class
setSubnetMask	./Ethernet/utility/w5100.h	/^void W5100Class::setSubnetMask(uint8_t *_addr) {$/;"	f	class:W5100Class
setTextColor	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextColor(uint16_t c) {$/;"	f	class:Adafruit_GFX
setTextColor	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextColor(uint16_t c) {$/;"	f	class:Adafruit_GFX
setTextColor	./Robot_Control/Adafruit_GFX.cpp	/^ void Adafruit_GFX::setTextColor(uint16_t c, uint16_t b) {$/;"	f	class:Adafruit_GFX
setTextColor	./Robot_Control/Adafruit_GFX.cpp	/^ void Adafruit_GFX::setTextColor(uint16_t c, uint16_t b) {$/;"	f	class:Adafruit_GFX
setTextColor	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextColor(uint16_t c) {$/;"	f	class:Adafruit_GFX
setTextColor	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextColor(uint16_t c) {$/;"	f	class:Adafruit_GFX
setTextColor	./TFT/utility/Adafruit_GFX.cpp	/^ void Adafruit_GFX::setTextColor(uint16_t c, uint16_t b) {$/;"	f	class:Adafruit_GFX
setTextColor	./TFT/utility/Adafruit_GFX.cpp	/^ void Adafruit_GFX::setTextColor(uint16_t c, uint16_t b) {$/;"	f	class:Adafruit_GFX
setTextSize	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextSize(uint8_t s) {$/;"	f	class:Adafruit_GFX
setTextSize	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextSize(uint8_t s) {$/;"	f	class:Adafruit_GFX
setTextSize	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextSize(uint8_t s) {$/;"	f	class:Adafruit_GFX
setTextSize	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextSize(uint8_t s) {$/;"	f	class:Adafruit_GFX
setTextWrap	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextWrap(boolean w) {$/;"	f	class:Adafruit_GFX
setTextWrap	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextWrap(boolean w) {$/;"	f	class:Adafruit_GFX
setTextWrap	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextWrap(boolean w) {$/;"	f	class:Adafruit_GFX
setTextWrap	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::setTextWrap(boolean w) {$/;"	f	class:Adafruit_GFX
setTime	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSTime::setTime(const char *term)$/;"	f	class:TinyGPSTime
setTime	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSTime::setTime(const char *term)$/;"	f	class:TinyGPSTime
set	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSCustom::set(const char *term)$/;"	f	class:TinyGPSCustom
set	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSCustom::set(const char *term)$/;"	f	class:TinyGPSCustom
set	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSDecimal::set(const char *term)$/;"	f	class:TinyGPSDecimal
set	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSDecimal::set(const char *term)$/;"	f	class:TinyGPSDecimal
set	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSInteger::set(const char *term)$/;"	f	class:TinyGPSInteger
set	./TinyGPSPlus/TinyGPS++.cpp	/^void TinyGPSInteger::set(const char *term)$/;"	f	class:TinyGPSInteger
SET_TRIGGER	./WiFi/utility/debug.h	59;"	d
SET_TRIGGER	./WiFi/utility/debug.h	59;"	d
SET_TRIGGER	./WiFi/utility/debug.h	71;"	d
SET_TRIGGER	./WiFi/utility/debug.h	71;"	d
setTX	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::setTX()$/;"	f	class:GSM3SoftSerial
setTX	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::setTX()$/;"	f	class:GSM3SoftSerial
setTX	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::setTX(uint8_t tx)$/;"	f	class:SoftwareSerial
setTX	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::setTX(uint8_t tx)$/;"	f	class:SoftwareSerial
setUnbufferedRead	./SD/utility/SdFat.h	/^  void setUnbufferedRead(void) {$/;"	f	class:SdFile
setUnbufferedRead	./SD/utility/SdFat.h	/^  void setUnbufferedRead(void) {$/;"	f	class:SdFile
setup	./AFMotor/examples/AFMotor_ConstantSpeed/AFMotor_ConstantSpeed.pde	/^void setup()$/;"	f
setup	./AFMotor/examples/AFMotor_ConstantSpeed/AFMotor_ConstantSpeed.pde	/^void setup()$/;"	f
setup	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void setup()$/;"	f
setup	./AFMotor/examples/AFMotor_MultiStepper/AFMotor_MultiStepper.pde	/^void setup()$/;"	f
setup	./AFMotor/examples/MotorParty/MotorParty.pde	/^void setup() {$/;"	f
setup	./AFMotor/examples/MotorParty/MotorParty.pde	/^void setup() {$/;"	f
setup	./AFMotor/examples/MotorTest/MotorTest.pde	/^void setup() {$/;"	f
setup	./AFMotor/examples/MotorTest/MotorTest.pde	/^void setup() {$/;"	f
setup	./AFMotor/examples/StepperTest/StepperTest.pde	/^void setup() {$/;"	f
setup	./AFMotor/examples/StepperTest/StepperTest.pde	/^void setup() {$/;"	f
setup	./SoftwareServo/examples/SerialServo/SerialServo.pde	/^void setup()$/;"	f
setup	./SoftwareServo/examples/SerialServo/SerialServo.pde	/^void setup()$/;"	f
setvoiceCallStatus	./GSM/GSM3ShieldV1VoiceProvider.h	/^		void setvoiceCallStatus(GSM3_voiceCall_st status) { _voiceCallstatus = status; };$/;"	f	class:GSM3ShieldV1VoiceProvider
setvoiceCallStatus	./GSM/GSM3ShieldV1VoiceProvider.h	/^		void setvoiceCallStatus(GSM3_voiceCall_st status) { _voiceCallstatus = status; };$/;"	f	class:GSM3ShieldV1VoiceProvider
SHIFT_DATA	./Firmata/Firmata.h	46;"	d
SHIFT_DATA	./Firmata/Firmata.h	46;"	d
SHIFT	./Firmata/Firmata.h	73;"	d
SHIFT	./Firmata/Firmata.h	73;"	d
showColor	./Robot_Control/utility/VirtualKeyboard.h	/^		uint16_t showColor;$/;"	m	class:VirtualKeyboard
showColor	./Robot_Control/utility/VirtualKeyboard.h	/^		uint16_t showColor;$/;"	m	class:VirtualKeyboard
showPicture	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::showPicture(char * filename, int posX, int posY){$/;"	f	class:TextManager
showPicture	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::showPicture(char * filename, int posX, int posY){$/;"	f	class:TextManager
shutdown	./GSM/GSM3MobileMockupProvider.h	/^		inline bool shutdown(){return false;};$/;"	f	class:GSM3MobileMockupProvider
shutdown	./GSM/GSM3MobileMockupProvider.h	/^		inline bool shutdown(){return false;};$/;"	f	class:GSM3MobileMockupProvider
shutdown	./GSM/GSM3ShieldV1AccessProvider.cpp	/^bool GSM3ShieldV1AccessProvider::shutdown()$/;"	f	class:GSM3ShieldV1AccessProvider
shutdown	./GSM/GSM3ShieldV1AccessProvider.cpp	/^bool GSM3ShieldV1AccessProvider::shutdown()$/;"	f	class:GSM3ShieldV1AccessProvider
siaddr	./Ethernet/Dhcp.h	/^	uint8_t  siaddr[4];$/;"	m	struct:_RIP_MSG_FIXED
siaddr	./Ethernet/Dhcp.h	/^	uint8_t  siaddr[4];$/;"	m	struct:_RIP_MSG_FIXED
_sid	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
_sid	./Robot_Control/Arduino_LCD.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Arduino_LCD
_sid	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_sid	./TFT/utility/Adafruit_ST7735.h	/^  uint32_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_sid	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
_sid	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  _cs, _rs, _rst, _sid, _sclk,$/;"	m	class:Adafruit_ST7735
SINGLE	./AFMotor/AFMotor.h	114;"	d
SINGLE	./AFMotor/AFMotor.h	114;"	d
size	./Robot_Control/EasyTransfer2.h	/^uint8_t size; \/\/size of data in bytes. Both for read and send$/;"	m	class:EasyTransfer2
size	./Robot_Control/EasyTransfer2.h	/^uint8_t size; \/\/size of data in bytes. Both for read and send$/;"	m	class:EasyTransfer2
size	./Robot_Motor/EasyTransfer2.h	/^uint8_t size; \/\/size of data in bytes. Both for read and send$/;"	m	class:EasyTransfer2
size	./Robot_Motor/EasyTransfer2.h	/^uint8_t size; \/\/size of data in bytes. Both for read and send$/;"	m	class:EasyTransfer2
size	./SD/File.cpp	/^uint32_t File::size() {$/;"	f	class:File
size	./SD/File.cpp	/^uint32_t File::size() {$/;"	f	class:File
SLAVEREADY	./WiFi/utility/spi_drv.cpp	14;"	d	file:
SLAVEREADY	./WiFi/utility/spi_drv.cpp	14;"	d	file:
SLAVESELECT	./WiFi/utility/spi_drv.cpp	13;"	d	file:
SLAVESELECT	./WiFi/utility/spi_drv.cpp	13;"	d	file:
SMASK	./Ethernet/utility/w5100.h	/^  static const uint16_t SMASK = 0x07FF; \/\/ Tx buffer MASK$/;"	m	class:W5100Class
SMASK	./Ethernet/utility/w5100.h	/^  static const uint16_t SMASK = 0x07FF; \/\/ Tx buffer MASK$/;"	m	class:W5100Class
SMS_ALL	./GSM_Shield/GSM_Shield.h	/^  SMS_ALL,$/;"	e	enum:sms_type_enum
SMS_ALL	./GSM_Shield/GSM_Shield.h	/^  SMS_ALL,$/;"	e	enum:sms_type_enum
SMS_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  SMS_LAST_ITEM$/;"	e	enum:sms_type_enum
SMS_LAST_ITEM	./GSM_Shield/GSM_Shield.h	/^  SMS_LAST_ITEM$/;"	e	enum:sms_type_enum
SMS_READ	./GSM_Shield/GSM_Shield.h	/^  SMS_READ,$/;"	e	enum:sms_type_enum
SMS_READ	./GSM_Shield/GSM_Shield.h	/^  SMS_READ,$/;"	e	enum:sms_type_enum
sms_type_enum	./GSM_Shield/GSM_Shield.h	/^enum sms_type_enum$/;"	g
sms_type_enum	./GSM_Shield/GSM_Shield.h	/^enum sms_type_enum$/;"	g
SMS_UNREAD	./GSM_Shield/GSM_Shield.h	/^  SMS_UNREAD,$/;"	e	enum:sms_type_enum
SMS_UNREAD	./GSM_Shield/GSM_Shield.h	/^  SMS_UNREAD,$/;"	e	enum:sms_type_enum
SnIR	./Ethernet/utility/w5100.h	/^class SnIR {$/;"	c
SnIR	./Ethernet/utility/w5100.h	/^class SnIR {$/;"	c
SnMR	./Ethernet/utility/w5100.h	/^class SnMR {$/;"	c
SnMR	./Ethernet/utility/w5100.h	/^class SnMR {$/;"	c
SnSR	./Ethernet/utility/w5100.h	/^class SnSR {$/;"	c
SnSR	./Ethernet/utility/w5100.h	/^class SnSR {$/;"	c
Sock_CLOSE	./Ethernet/utility/w5100.h	/^  Sock_CLOSE     = 0x10,$/;"	e	enum:SockCMD
Sock_CLOSE	./Ethernet/utility/w5100.h	/^  Sock_CLOSE     = 0x10,$/;"	e	enum:SockCMD
SockCMD	./Ethernet/utility/w5100.h	/^enum SockCMD {$/;"	g
SockCMD	./Ethernet/utility/w5100.h	/^enum SockCMD {$/;"	g
Sock_CONNECT	./Ethernet/utility/w5100.h	/^  Sock_CONNECT   = 0x04,$/;"	e	enum:SockCMD
Sock_CONNECT	./Ethernet/utility/w5100.h	/^  Sock_CONNECT   = 0x04,$/;"	e	enum:SockCMD
Sock_DISCON	./Ethernet/utility/w5100.h	/^  Sock_DISCON    = 0x08,$/;"	e	enum:SockCMD
Sock_DISCON	./Ethernet/utility/w5100.h	/^  Sock_DISCON    = 0x08,$/;"	e	enum:SockCMD
socketDataSize	./GSM/GSM3ShieldV1.h	/^		int socketDataSize; 		\/\/Size of socket data to be read.$/;"	m	class:GSM3ShieldV1
socketDataSize	./GSM/GSM3ShieldV1.h	/^		int socketDataSize; 		\/\/Size of socket data to be read.$/;"	m	class:GSM3ShieldV1
socketDataSizeWritten	./GSM/GSM3ShieldV1.h	/^		int socketDataSizeWritten;  \/\/Number of socket data written in buffer not to overflow the buffer$/;"	m	class:GSM3ShieldV1
socketDataSizeWritten	./GSM/GSM3ShieldV1.h	/^		int socketDataSizeWritten;  \/\/Number of socket data written in buffer not to overflow the buffer$/;"	m	class:GSM3ShieldV1
socket	./Ethernet/utility/socket.cpp	/^uint8_t socket(SOCKET s, uint8_t protocol, uint16_t port, uint8_t flag)$/;"	f
socket	./Ethernet/utility/socket.cpp	/^uint8_t socket(SOCKET s, uint8_t protocol, uint16_t port, uint8_t flag)$/;"	f
SOCKET	./Ethernet/utility/w5100.h	/^typedef uint8_t SOCKET;$/;"	t
SOCKET	./Ethernet/utility/w5100.h	/^typedef uint8_t SOCKET;$/;"	t
_sock	./Ethernet/EthernetClient.h	/^  uint8_t _sock;$/;"	m	class:EthernetClient
_sock	./Ethernet/EthernetClient.h	/^  uint8_t _sock;$/;"	m	class:EthernetClient
_sock	./Ethernet/EthernetUdp.h	/^  uint8_t _sock;  \/\/ socket ID for Wiz5100$/;"	m	class:EthernetUDP
_sock	./Ethernet/EthernetUdp.h	/^  uint8_t _sock;  \/\/ socket ID for Wiz5100$/;"	m	class:EthernetUDP
_SOCKET_H_	./Ethernet/utility/socket.h	2;"	d
_SOCKET_H_	./Ethernet/utility/socket.h	2;"	d
_SOCKET_H_	./WiFi/utility/socket.h	9;"	d
_SOCKET_H_	./WiFi/utility/socket.h	9;"	d
SOCKET_NONE	./Ethernet/Dns.cpp	15;"	d	file:
SOCKET_NONE	./Ethernet/Dns.cpp	15;"	d	file:
__SOCKET_REGISTER16	./Ethernet/utility/w5100.h	266;"	d
__SOCKET_REGISTER16	./Ethernet/utility/w5100.h	266;"	d
__SOCKET_REGISTER16	./Ethernet/utility/w5100.h	308;"	d
__SOCKET_REGISTER16	./Ethernet/utility/w5100.h	308;"	d
__SOCKET_REGISTER8	./Ethernet/utility/w5100.h	259;"	d
__SOCKET_REGISTER8	./Ethernet/utility/w5100.h	259;"	d
__SOCKET_REGISTER8	./Ethernet/utility/w5100.h	307;"	d
__SOCKET_REGISTER8	./Ethernet/utility/w5100.h	307;"	d
__SOCKET_REGISTER_N	./Ethernet/utility/w5100.h	279;"	d
__SOCKET_REGISTER_N	./Ethernet/utility/w5100.h	279;"	d
__SOCKET_REGISTER_N	./Ethernet/utility/w5100.h	309;"	d
__SOCKET_REGISTER_N	./Ethernet/utility/w5100.h	309;"	d
socketsAccepted	./GSM/GSM3ShieldV1.h	/^		int socketsAccepted;		\/\/Status for remote clients accepted of closed.$/;"	m	class:GSM3ShieldV1
socketsAccepted	./GSM/GSM3ShieldV1.h	/^		int socketsAccepted;		\/\/Status for remote clients accepted of closed.$/;"	m	class:GSM3ShieldV1
socketsAccepted	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		uint8_t socketsAccepted;$/;"	m	class:GSM3ShieldV1MultiServerProvider
socketsAccepted	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		uint8_t socketsAccepted;$/;"	m	class:GSM3ShieldV1MultiServerProvider
socketsAsServer	./GSM/GSM3MobileNetworkProvider.h	/^		uint16_t socketsAsServer; \/\/ Server socket$/;"	m	class:GSM3MobileNetworkProvider
socketsAsServer	./GSM/GSM3MobileNetworkProvider.h	/^		uint16_t socketsAsServer; \/\/ Server socket$/;"	m	class:GSM3MobileNetworkProvider
socketsAsServer	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		uint8_t socketsAsServer;$/;"	m	class:GSM3ShieldV1MultiServerProvider
socketsAsServer	./GSM/GSM3ShieldV1MultiServerProvider.h	/^		uint8_t socketsAsServer;$/;"	m	class:GSM3ShieldV1MultiServerProvider
SOCKETS	./Ethernet/utility/w5100.h	/^  static const int SOCKETS = 4;$/;"	m	class:W5100Class
SOCKETS	./Ethernet/utility/w5100.h	/^  static const int SOCKETS = 4;$/;"	m	class:W5100Class
sockets	./GSM/GSM3MobileClientProvider.h	/^		uint8_t sockets;$/;"	m	class:GSM3MobileClientProvider
sockets	./GSM/GSM3MobileClientProvider.h	/^		uint8_t sockets;$/;"	m	class:GSM3MobileClientProvider
sockets	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		uint16_t sockets;$/;"	m	class:GSM3ShieldV1MultiClientProvider
sockets	./GSM/GSM3ShieldV1MultiClientProvider.h	/^		uint16_t sockets;$/;"	m	class:GSM3ShieldV1MultiClientProvider
SOCKET	./WiFi/utility/socket.h	/^typedef uint16_t 			SOCKET;$/;"	t
SOCKET	./WiFi/utility/socket.h	/^typedef uint16_t 			SOCKET;$/;"	t
_socket	./WiFi/WiFiClient.h	/^  uint16_t  _socket;$/;"	m	class:WiFiClient
_socket	./WiFi/WiFiClient.h	/^  uint16_t  _socket;$/;"	m	class:WiFiClient
Sock_LISTEN	./Ethernet/utility/w5100.h	/^  Sock_LISTEN    = 0x02,$/;"	e	enum:SockCMD
Sock_LISTEN	./Ethernet/utility/w5100.h	/^  Sock_LISTEN    = 0x02,$/;"	e	enum:SockCMD
SOCK_NOT_AVAIL	./WiFi/utility/socket.h	15;"	d
SOCK_NOT_AVAIL	./WiFi/utility/socket.h	15;"	d
Sock_OPEN	./Ethernet/utility/w5100.h	/^  Sock_OPEN      = 0x01,$/;"	e	enum:SockCMD
Sock_OPEN	./Ethernet/utility/w5100.h	/^  Sock_OPEN      = 0x01,$/;"	e	enum:SockCMD
Sock_RECV	./Ethernet/utility/w5100.h	/^  Sock_RECV      = 0x40$/;"	e	enum:SockCMD
Sock_RECV	./Ethernet/utility/w5100.h	/^  Sock_RECV      = 0x40$/;"	e	enum:SockCMD
Sock_SEND	./Ethernet/utility/w5100.h	/^  Sock_SEND      = 0x20,$/;"	e	enum:SockCMD
Sock_SEND	./Ethernet/utility/w5100.h	/^  Sock_SEND      = 0x20,$/;"	e	enum:SockCMD
Sock_SEND_KEEP	./Ethernet/utility/w5100.h	/^  Sock_SEND_KEEP = 0x22,$/;"	e	enum:SockCMD
Sock_SEND_KEEP	./Ethernet/utility/w5100.h	/^  Sock_SEND_KEEP = 0x22,$/;"	e	enum:SockCMD
Sock_SEND_MAC	./Ethernet/utility/w5100.h	/^  Sock_SEND_MAC  = 0x21,$/;"	e	enum:SockCMD
Sock_SEND_MAC	./Ethernet/utility/w5100.h	/^  Sock_SEND_MAC  = 0x21,$/;"	e	enum:SockCMD
_sock	./WiFi/WiFiClient.h	/^  uint8_t _sock;   \/\/not used$/;"	m	class:WiFiClient
_sock	./WiFi/WiFiClient.h	/^  uint8_t _sock;   \/\/not used$/;"	m	class:WiFiClient
_sock	./WiFi/WiFiUdp.h	/^  uint8_t _sock;  \/\/ socket ID for Wiz5100$/;"	m	class:WiFiUDP
_sock	./WiFi/WiFiUdp.h	/^  uint8_t _sock;  \/\/ socket ID for Wiz5100$/;"	m	class:WiFiUDP
SoftwareSerial_h	./SoftwareSerial/SoftwareSerial.h	33;"	d
SoftwareSerial_h	./SoftwareSerial/SoftwareSerial.h	33;"	d
~SoftwareSerial	./SoftwareSerial/SoftwareSerial.cpp	/^SoftwareSerial::~SoftwareSerial()$/;"	f	class:SoftwareSerial
~SoftwareSerial	./SoftwareSerial/SoftwareSerial.cpp	/^SoftwareSerial::~SoftwareSerial()$/;"	f	class:SoftwareSerial
SoftwareSerial	./SoftwareSerial/SoftwareSerial.cpp	/^SoftwareSerial::SoftwareSerial(uint8_t receivePin, uint8_t transmitPin, bool inverse_logic \/* = false *\/) : $/;"	f	class:SoftwareSerial
SoftwareSerial	./SoftwareSerial/SoftwareSerial.cpp	/^SoftwareSerial::SoftwareSerial(uint8_t receivePin, uint8_t transmitPin, bool inverse_logic \/* = false *\/) : $/;"	f	class:SoftwareSerial
SoftwareSerial	./SoftwareSerial/SoftwareSerial.h	/^class SoftwareSerial : public Stream$/;"	c
SoftwareSerial	./SoftwareSerial/SoftwareSerial.h	/^class SoftwareSerial : public Stream$/;"	c
SoftwareServo_h	./SoftwareServo/SoftwareServo.h	2;"	d
SoftwareServo_h	./SoftwareServo/SoftwareServo.h	2;"	d
SoftwareServo	./SoftwareServo/SoftwareServo.cpp	/^SoftwareServo::SoftwareServo() : pin(0),angle(NO_ANGLE),pulse0(0),min16(34),max16(150),next(0)$/;"	f	class:SoftwareServo
SoftwareServo	./SoftwareServo/SoftwareServo.cpp	/^SoftwareServo::SoftwareServo() : pin(0),angle(NO_ANGLE),pulse0(0),min16(34),max16(150),next(0)$/;"	f	class:SoftwareServo
SoftwareServo	./SoftwareServo/SoftwareServo.h	/^class SoftwareServo$/;"	c
SoftwareServo	./SoftwareServo/SoftwareServo.h	/^class SoftwareServo$/;"	c
SOFTWARE_SPI	./SD/utility/Sd2Card.h	45;"	d
SOFTWARE_SPI	./SD/utility/Sd2Card.h	45;"	d
sort	./Robot_Control/keyboard.cpp	/^void sort(int* v){$/;"	f
sort	./Robot_Control/keyboard.cpp	/^void sort(int* v){$/;"	f
spaceAvailable	./GSM/GSM3CircularBuffer.cpp	/^void GSM3CircularBufferManager::spaceAvailable(){return;};$/;"	f	class:GSM3CircularBufferManager
spaceAvailable	./GSM/GSM3CircularBuffer.cpp	/^void GSM3CircularBufferManager::spaceAvailable(){return;};$/;"	f	class:GSM3CircularBufferManager
spaceAvailable	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::spaceAvailable()$/;"	f	class:GSM3SoftSerial
spaceAvailable	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::spaceAvailable()$/;"	f	class:GSM3SoftSerial
speed_	./Robot_Control/SdCard.h	/^  uint8_t speed_;$/;"	m	class:SdCard
speed_	./Robot_Control/SdCard.h	/^  uint8_t speed_;$/;"	m	class:SdCard
speed	./Robot_Control/Squawk.cpp	/^static uint8_t  speed;$/;"	v	file:
speed	./Robot_Control/Squawk.cpp	/^static uint8_t  speed;$/;"	v	file:
speed	./Stepper/Stepper.h	/^    int speed;          \/\/ Speed in RPMs$/;"	m	class:Stepper
speed	./Stepper/Stepper.h	/^    int speed;          \/\/ Speed in RPMs$/;"	m	class:Stepper
speed	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSSpeed speed;$/;"	m	class:TinyGPSPlus
speed	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSSpeed speed;$/;"	m	class:TinyGPSPlus
speed	./TinyGPS/TinyGPS.h	/^  inline unsigned long speed() { return _speed; }$/;"	f	class:TinyGPS
speed	./TinyGPS/TinyGPS.h	/^  inline unsigned long speed() { return _speed; }$/;"	f	class:TinyGPS
_speed	./TinyGPS/TinyGPS.h	/^  unsigned long  _speed, _new_speed;$/;"	m	class:TinyGPS
_speed	./TinyGPS/TinyGPS.h	/^  unsigned long  _speed, _new_speed;$/;"	m	class:TinyGPS
SPI_2XCLOCK_MASK	./Robot_Control/SPI.h	34;"	d
SPI_2XCLOCK_MASK	./Robot_Control/SPI.h	34;"	d
SPI_2XCLOCK_MASK	./SPI/SPI.h	34;"	d
SPI_2XCLOCK_MASK	./SPI/SPI.h	34;"	d
SPIClass	./Robot_Control/SPI.h	/^class SPIClass {$/;"	c
SPIClass	./Robot_Control/SPI.h	/^class SPIClass {$/;"	c
SPIClass	./SPI/SPI.h	/^class SPIClass {$/;"	c
SPIClass	./SPI/SPI.h	/^class SPIClass {$/;"	c
SPI_CLOCK_DIV128	./Robot_Control/SPI.h	21;"	d
SPI_CLOCK_DIV128	./Robot_Control/SPI.h	21;"	d
SPI_CLOCK_DIV128	./SPI/SPI.h	21;"	d
SPI_CLOCK_DIV128	./SPI/SPI.h	21;"	d
SPI_CLOCK_DIV16	./Robot_Control/SPI.h	19;"	d
SPI_CLOCK_DIV16	./Robot_Control/SPI.h	19;"	d
SPI_CLOCK_DIV16	./SPI/SPI.h	19;"	d
SPI_CLOCK_DIV16	./SPI/SPI.h	19;"	d
SPI_CLOCK_DIV2	./Robot_Control/SPI.h	22;"	d
SPI_CLOCK_DIV2	./Robot_Control/SPI.h	22;"	d
SPI_CLOCK_DIV2	./SPI/SPI.h	22;"	d
SPI_CLOCK_DIV2	./SPI/SPI.h	22;"	d
SPI_CLOCK_DIV32	./Robot_Control/SPI.h	24;"	d
SPI_CLOCK_DIV32	./Robot_Control/SPI.h	24;"	d
SPI_CLOCK_DIV32	./SPI/SPI.h	24;"	d
SPI_CLOCK_DIV32	./SPI/SPI.h	24;"	d
SPI_CLOCK_DIV4	./Robot_Control/SPI.h	18;"	d
SPI_CLOCK_DIV4	./Robot_Control/SPI.h	18;"	d
SPI_CLOCK_DIV4	./SPI/SPI.h	18;"	d
SPI_CLOCK_DIV4	./SPI/SPI.h	18;"	d
SPI_CLOCK_DIV64	./Robot_Control/SPI.h	20;"	d
SPI_CLOCK_DIV64	./Robot_Control/SPI.h	20;"	d
SPI_CLOCK_DIV64	./SPI/SPI.h	20;"	d
SPI_CLOCK_DIV64	./SPI/SPI.h	20;"	d
SPI_CLOCK_DIV8	./Robot_Control/SPI.h	23;"	d
SPI_CLOCK_DIV8	./Robot_Control/SPI.h	23;"	d
SPI_CLOCK_DIV8	./SPI/SPI.h	23;"	d
SPI_CLOCK_DIV8	./SPI/SPI.h	23;"	d
SPI_CLOCK_MASK	./Robot_Control/SPI.h	33;"	d
SPI_CLOCK_MASK	./Robot_Control/SPI.h	33;"	d
SPI_CLOCK_MASK	./SPI/SPI.h	33;"	d
SPI_CLOCK_MASK	./SPI/SPI.h	33;"	d
SPICLOCK	./WiFi/utility/spi_drv.cpp	12;"	d	file:
SPICLOCK	./WiFi/utility/spi_drv.cpp	12;"	d	file:
SPI_Drv_h	./WiFi/utility/spi_drv.h	2;"	d
SPI_Drv_h	./WiFi/utility/spi_drv.h	2;"	d
spiDrv	./WiFi/utility/spi_drv.cpp	/^SpiDrv spiDrv;$/;"	v
spiDrv	./WiFi/utility/spi_drv.cpp	/^SpiDrv spiDrv;$/;"	v
SpiDrv	./WiFi/utility/spi_drv.h	/^class SpiDrv$/;"	c
SpiDrv	./WiFi/utility/spi_drv.h	/^class SpiDrv$/;"	c
SPI_FULL_SPEED	./SD/utility/Sd2Card.h	/^uint8_t const SPI_FULL_SPEED = 0;$/;"	v
SPI_FULL_SPEED	./SD/utility/Sd2Card.h	/^uint8_t const SPI_FULL_SPEED = 0;$/;"	v
SPI_HALF_SPEED	./SD/utility/Sd2Card.h	/^uint8_t const SPI_HALF_SPEED = 1;$/;"	v
SPI_HALF_SPEED	./SD/utility/Sd2Card.h	/^uint8_t const SPI_HALF_SPEED = 1;$/;"	v
_SPI_H_INCLUDED	./Robot_Control/SPI.h	12;"	d
_SPI_H_INCLUDED	./Robot_Control/SPI.h	12;"	d
_SPI_H_INCLUDED	./SPI/SPI.h	12;"	d
_SPI_H_INCLUDED	./SPI/SPI.h	12;"	d
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 12;$/;"	v
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 12;$/;"	v
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 14;$/;"	v
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 14;$/;"	v
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 23;$/;"	v
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 23;$/;"	v
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 50;$/;"	v
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 50;$/;"	v
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 6;$/;"	v
SPI_MISO_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MISO_PIN = 6;$/;"	v
SPI_MISO_PIN	./SD/utility/Sd2Card.h	/^uint8_t const SPI_MISO_PIN = 12;$/;"	v
SPI_MISO_PIN	./SD/utility/Sd2Card.h	/^uint8_t const SPI_MISO_PIN = 12;$/;"	v
SPI_MISO_PIN	./SD/utility/Sd2Card.h	/^uint8_t const  SPI_MISO_PIN = MISO_PIN;$/;"	v
SPI_MISO_PIN	./SD/utility/Sd2Card.h	/^uint8_t const  SPI_MISO_PIN = MISO_PIN;$/;"	v
SPI_MODE0	./Robot_Control/SPI.h	27;"	d
SPI_MODE0	./Robot_Control/SPI.h	27;"	d
SPI_MODE0	./SPI/SPI.h	27;"	d
SPI_MODE0	./SPI/SPI.h	27;"	d
SPI_MODE1	./Robot_Control/SPI.h	28;"	d
SPI_MODE1	./Robot_Control/SPI.h	28;"	d
SPI_MODE1	./SPI/SPI.h	28;"	d
SPI_MODE1	./SPI/SPI.h	28;"	d
SPI_MODE2	./Robot_Control/SPI.h	29;"	d
SPI_MODE2	./Robot_Control/SPI.h	29;"	d
SPI_MODE2	./SPI/SPI.h	29;"	d
SPI_MODE2	./SPI/SPI.h	29;"	d
SPI_MODE3	./Robot_Control/SPI.h	30;"	d
SPI_MODE3	./Robot_Control/SPI.h	30;"	d
SPI_MODE3	./SPI/SPI.h	30;"	d
SPI_MODE3	./SPI/SPI.h	30;"	d
SPI_MODE_MASK	./Robot_Control/SPI.h	32;"	d
SPI_MODE_MASK	./Robot_Control/SPI.h	32;"	d
SPI_MODE_MASK	./SPI/SPI.h	32;"	d
SPI_MODE_MASK	./SPI/SPI.h	32;"	d
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 11;$/;"	v
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 11;$/;"	v
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 16;$/;"	v
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 16;$/;"	v
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 22;$/;"	v
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 22;$/;"	v
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 51;$/;"	v
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 51;$/;"	v
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 5;$/;"	v
SPI_MOSI_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_MOSI_PIN = 5;$/;"	v
SPI_MOSI_PIN	./SD/utility/Sd2Card.h	/^uint8_t const SPI_MOSI_PIN = 11;$/;"	v
SPI_MOSI_PIN	./SD/utility/Sd2Card.h	/^uint8_t const SPI_MOSI_PIN = 11;$/;"	v
SPI_MOSI_PIN	./SD/utility/Sd2Card.h	/^uint8_t const  SPI_MOSI_PIN = MOSI_PIN;$/;"	v
SPI_MOSI_PIN	./SD/utility/Sd2Card.h	/^uint8_t const  SPI_MOSI_PIN = MOSI_PIN;$/;"	v
SPI_QUARTER_SPEED	./SD/utility/Sd2Card.h	/^uint8_t const SPI_QUARTER_SPEED = 2;$/;"	v
SPI_QUARTER_SPEED	./SD/utility/Sd2Card.h	/^uint8_t const SPI_QUARTER_SPEED = 2;$/;"	v
spiRec	./Robot_Control/SdCard.cpp	/^STATIC_NOINLINE uint8_t spiRec(void) {$/;"	f
spiRec	./Robot_Control/SdCard.cpp	/^STATIC_NOINLINE uint8_t spiRec(void) {$/;"	f
spiRec	./SD/utility/Sd2Card.cpp	/^static  uint8_t spiRec(void) {$/;"	f	file:
spiRec	./SD/utility/Sd2Card.cpp	/^static  uint8_t spiRec(void) {$/;"	f	file:
spiRec	./SD/utility/Sd2Card.cpp	/^uint8_t spiRec(void) {$/;"	f
spiRec	./SD/utility/Sd2Card.cpp	/^uint8_t spiRec(void) {$/;"	f
SPI	./Robot_Control/SPI.cpp	/^SPIClass SPI;$/;"	v
SPI	./Robot_Control/SPI.cpp	/^SPIClass SPI;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 13;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 13;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 15;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 15;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 21;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 21;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 52;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 52;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 7;$/;"	v
SPI_SCK_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SCK_PIN  = 7;$/;"	v
SPI_SCK_PIN	./SD/utility/Sd2Card.h	/^uint8_t const SPI_SCK_PIN = 13;$/;"	v
SPI_SCK_PIN	./SD/utility/Sd2Card.h	/^uint8_t const SPI_SCK_PIN = 13;$/;"	v
SPI_SCK_PIN	./SD/utility/Sd2Card.h	/^uint8_t const  SPI_SCK_PIN = SCK_PIN;$/;"	v
SPI_SCK_PIN	./SD/utility/Sd2Card.h	/^uint8_t const  SPI_SCK_PIN = SCK_PIN;$/;"	v
spiSend	./Robot_Control/SdCard.cpp	/^STATIC_NOINLINE void spiSend(uint8_t b) {$/;"	f
spiSend	./Robot_Control/SdCard.cpp	/^STATIC_NOINLINE void spiSend(uint8_t b) {$/;"	f
spiSend	./SD/utility/Sd2Card.cpp	/^static void spiSend(uint8_t b) {$/;"	f	file:
spiSend	./SD/utility/Sd2Card.cpp	/^static void spiSend(uint8_t b) {$/;"	f	file:
spiSend	./SD/utility/Sd2Card.cpp	/^void spiSend(uint8_t data) {$/;"	f
spiSend	./SD/utility/Sd2Card.cpp	/^void spiSend(uint8_t data) {$/;"	f
spiSlaveDeselect	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::spiSlaveDeselect()$/;"	f	class:SpiDrv
spiSlaveDeselect	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::spiSlaveDeselect()$/;"	f	class:SpiDrv
spiSlaveSelect	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::spiSlaveSelect()$/;"	f	class:SpiDrv
spiSlaveSelect	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::spiSlaveSelect()$/;"	f	class:SpiDrv
SPI	./SPI/SPI.cpp	/^SPIClass SPI;$/;"	v
SPI	./SPI/SPI.cpp	/^SPIClass SPI;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 10;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 10;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 20;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 20;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 4;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 4;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 53;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 53;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 8;$/;"	v
SPI_SS_PIN	./Robot_Control/SdCard.h	/^uint8_t const SPI_SS_PIN   = 8;$/;"	v
SPI_START_CMD_DELAY	./WiFi/utility/spi_drv.h	7;"	d
SPI_START_CMD_DELAY	./WiFi/utility/spi_drv.h	7;"	d
spiTransfer	./WiFi/utility/spi_drv.cpp	/^char SpiDrv::spiTransfer(volatile char data)$/;"	f	class:SpiDrv
spiTransfer	./WiFi/utility/spi_drv.cpp	/^char SpiDrv::spiTransfer(volatile char data)$/;"	f	class:SpiDrv
spiwrite	./Robot_Control/Arduino_LCD.cpp	/^inline void Arduino_LCD::spiwrite(uint8_t c) {$/;"	f	class:Arduino_LCD
spiwrite	./Robot_Control/Arduino_LCD.cpp	/^inline void Arduino_LCD::spiwrite(uint8_t c) {$/;"	f	class:Arduino_LCD
spiwrite	./TFT/utility/Adafruit_ST7735.cpp	/^inline void Adafruit_ST7735::spiwrite(uint8_t c) {$/;"	f	class:Adafruit_ST7735
spiwrite	./TFT/utility/Adafruit_ST7735.cpp	/^inline void Adafruit_ST7735::spiwrite(uint8_t c) {$/;"	f	class:Adafruit_ST7735
SQUAWK_CONSTRUCT_ISR	./Robot_Control/Squawk.h	119;"	d
SQUAWK_CONSTRUCT_ISR	./Robot_Control/Squawk.h	119;"	d
_SQUAWK_H_	./Robot_Control/Squawk.h	7;"	d
_SQUAWK_H_	./Robot_Control/Squawk.h	7;"	d
squawk_playroutine	./Robot_Control/Squawk.cpp	/^void squawk_playroutine() {$/;"	f
squawk_playroutine	./Robot_Control/Squawk.cpp	/^void squawk_playroutine() {$/;"	f
SQUAWK_PWM_PIN11	./Robot_Control/Squawk.h	102;"	d
SQUAWK_PWM_PIN11	./Robot_Control/Squawk.h	102;"	d
SQUAWK_PWM_PIN11	./Robot_Control/Squawk.h	80;"	d
SQUAWK_PWM_PIN11	./Robot_Control/Squawk.h	80;"	d
SQUAWK_PWM_PIN11	./Robot_Control/Squawk.h	94;"	d
SQUAWK_PWM_PIN11	./Robot_Control/Squawk.h	94;"	d
SQUAWK_PWM_PIN3	./Robot_Control/Squawk.h	103;"	d
SQUAWK_PWM_PIN3	./Robot_Control/Squawk.h	103;"	d
SQUAWK_PWM_PIN3	./Robot_Control/Squawk.h	81;"	d
SQUAWK_PWM_PIN3	./Robot_Control/Squawk.h	81;"	d
SQUAWK_PWM_PIN3	./Robot_Control/Squawk.h	95;"	d
SQUAWK_PWM_PIN3	./Robot_Control/Squawk.h	95;"	d
SQUAWK_PWM_PIN5	./Robot_Control/Melody.cpp	/^SQUAWK_CONSTRUCT_ISR(SQUAWK_PWM_PIN5);$/;"	v
SQUAWK_PWM_PIN5	./Robot_Control/Melody.cpp	/^SQUAWK_CONSTRUCT_ISR(SQUAWK_PWM_PIN5);$/;"	v
SQUAWK_PWM_PIN5	./Robot_Control/Squawk.h	101;"	d
SQUAWK_PWM_PIN5	./Robot_Control/Squawk.h	101;"	d
SQUAWK_PWM_PIN5	./Robot_Control/Squawk.h	79;"	d
SQUAWK_PWM_PIN5	./Robot_Control/Squawk.h	79;"	d
SQUAWK_PWM_PIN5	./Robot_Control/Squawk.h	93;"	d
SQUAWK_PWM_PIN5	./Robot_Control/Squawk.h	93;"	d
SQUAWK_PWM_PIN6	./Robot_Control/Squawk.h	100;"	d
SQUAWK_PWM_PIN6	./Robot_Control/Squawk.h	100;"	d
SQUAWK_PWM_PIN6	./Robot_Control/Squawk.h	92;"	d
SQUAWK_PWM_PIN6	./Robot_Control/Squawk.h	92;"	d
Squawk	./Robot_Control/Squawk.cpp	/^SquawkSynth Squawk;$/;"	v
Squawk	./Robot_Control/Squawk.cpp	/^SquawkSynth Squawk;$/;"	v
_SQUAWKSD_H_	./Robot_Control/SquawkSD.h	2;"	d
_SQUAWKSD_H_	./Robot_Control/SquawkSD.h	2;"	d
SquawkSD	./Robot_Control/SquawkSD.cpp	/^SquawkSynthSD SquawkSD;$/;"	v
SquawkSD	./Robot_Control/SquawkSD.cpp	/^SquawkSynthSD SquawkSD;$/;"	v
SquawkStream	./Robot_Control/Squawk.h	/^class SquawkStream {$/;"	c
SquawkStream	./Robot_Control/Squawk.h	/^class SquawkStream {$/;"	c
~SquawkStream	./Robot_Control/Squawk.h	/^inline SquawkStream::~SquawkStream() { }$/;"	f	class:SquawkStream
~SquawkStream	./Robot_Control/Squawk.h	/^inline SquawkStream::~SquawkStream() { }$/;"	f	class:SquawkStream
SquawkSynth	./Robot_Control/Squawk.h	/^class SquawkSynth {$/;"	c
SquawkSynth	./Robot_Control/Squawk.h	/^class SquawkSynth {$/;"	c
SquawkSynth	./Robot_Control/Squawk.h	/^  SquawkSynth() {};$/;"	f	class:SquawkSynth
SquawkSynth	./Robot_Control/Squawk.h	/^  SquawkSynth() {};$/;"	f	class:SquawkSynth
SquawkSynthSD	./Robot_Control/SquawkSD.h	/^class SquawkSynthSD : public SquawkSynth {$/;"	c
SquawkSynthSD	./Robot_Control/SquawkSD.h	/^class SquawkSynthSD : public SquawkSynth {$/;"	c
_srcport	./Ethernet/EthernetClient.cpp	/^uint16_t EthernetClient::_srcport = 1024;$/;"	m	class:EthernetClient	file:
_srcport	./Ethernet/EthernetClient.cpp	/^uint16_t EthernetClient::_srcport = 1024;$/;"	m	class:EthernetClient	file:
_srcport	./Ethernet/EthernetClient.h	/^  static uint16_t _srcport;$/;"	m	class:EthernetClient
_srcport	./Ethernet/EthernetClient.h	/^  static uint16_t _srcport;$/;"	m	class:EthernetClient
_srcport	./WiFi/WiFiClient.cpp	/^uint16_t WiFiClient::_srcport = 1024;$/;"	m	class:WiFiClient	file:
_srcport	./WiFi/WiFiClient.cpp	/^uint16_t WiFiClient::_srcport = 1024;$/;"	m	class:WiFiClient	file:
_srcport	./WiFi/WiFiClient.h	/^  static uint16_t _srcport;$/;"	m	class:WiFiClient
_srcport	./WiFi/WiFiClient.h	/^  static uint16_t _srcport;$/;"	m	class:WiFiClient
_ssid	./WiFi/utility/wifi_drv.cpp	/^char 	WiFiDrv::_ssid[] = {0};$/;"	m	class:WiFiDrv	file:
_ssid	./WiFi/utility/wifi_drv.cpp	/^char 	WiFiDrv::_ssid[] = {0};$/;"	m	class:WiFiDrv	file:
_ssid	./WiFi/utility/wifi_drv.h	/^	static char 	_ssid[WL_SSID_MAX_LENGTH];$/;"	m	class:WiFiDrv
_ssid	./WiFi/utility/wifi_drv.h	/^	static char 	_ssid[WL_SSID_MAX_LENGTH];$/;"	m	class:WiFiDrv
SSID	./WiFi/WiFi.cpp	/^char* WiFiClass::SSID()$/;"	f	class:WiFiClass
SSID	./WiFi/WiFi.cpp	/^char* WiFiClass::SSID()$/;"	f	class:WiFiClass
SSID	./WiFi/WiFi.cpp	/^char* WiFiClass::SSID(uint8_t networkItem)$/;"	f	class:WiFiClass
SSID	./WiFi/WiFi.cpp	/^char* WiFiClass::SSID(uint8_t networkItem)$/;"	f	class:WiFiClass
SSIZE	./Ethernet/utility/w5100.h	/^  static const uint16_t SSIZE = 2048; \/\/ Max Tx buffer size$/;"	m	class:W5100Class
SSIZE	./Ethernet/utility/w5100.h	/^  static const uint16_t SSIZE = 2048; \/\/ Max Tx buffer size$/;"	m	class:W5100Class
_SS_MAX_RX_BUFF	./SoftwareSerial/SoftwareSerial.h	42;"	d
_SS_MAX_RX_BUFF	./SoftwareSerial/SoftwareSerial.h	42;"	d
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 10;$/;"	v
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 10;$/;"	v
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 17;$/;"	v
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 17;$/;"	v
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 20;$/;"	v
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 20;$/;"	v
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 4;$/;"	v
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 4;$/;"	v
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 53;$/;"	v
SS_PIN	./SD/utility/Sd2PinMap.h	/^uint8_t const SS_PIN = 53;$/;"	v
ST7735_BLACK	./TFT/utility/Adafruit_ST7735.h	86;"	d
ST7735_BLACK	./TFT/utility/Adafruit_ST7735.h	86;"	d
ST7735_BLUE	./TFT/utility/Adafruit_ST7735.h	87;"	d
ST7735_BLUE	./TFT/utility/Adafruit_ST7735.h	87;"	d
ST7735_CASET	./TFT/utility/Adafruit_ST7735.h	53;"	d
ST7735_CASET	./TFT/utility/Adafruit_ST7735.h	53;"	d
ST7735_COLMOD	./TFT/utility/Adafruit_ST7735.h	59;"	d
ST7735_COLMOD	./TFT/utility/Adafruit_ST7735.h	59;"	d
ST7735_CYAN	./TFT/utility/Adafruit_ST7735.h	90;"	d
ST7735_CYAN	./TFT/utility/Adafruit_ST7735.h	90;"	d
ST7735_DISPOFF	./TFT/utility/Adafruit_ST7735.h	51;"	d
ST7735_DISPOFF	./TFT/utility/Adafruit_ST7735.h	51;"	d
ST7735_DISPON	./TFT/utility/Adafruit_ST7735.h	52;"	d
ST7735_DISPON	./TFT/utility/Adafruit_ST7735.h	52;"	d
ST7735_DISSET5	./TFT/utility/Adafruit_ST7735.h	66;"	d
ST7735_DISSET5	./TFT/utility/Adafruit_ST7735.h	66;"	d
ST7735_FRMCTR1	./TFT/utility/Adafruit_ST7735.h	62;"	d
ST7735_FRMCTR1	./TFT/utility/Adafruit_ST7735.h	62;"	d
ST7735_FRMCTR2	./TFT/utility/Adafruit_ST7735.h	63;"	d
ST7735_FRMCTR2	./TFT/utility/Adafruit_ST7735.h	63;"	d
ST7735_FRMCTR3	./TFT/utility/Adafruit_ST7735.h	64;"	d
ST7735_FRMCTR3	./TFT/utility/Adafruit_ST7735.h	64;"	d
ST7735_GMCTRN1	./TFT/utility/Adafruit_ST7735.h	83;"	d
ST7735_GMCTRN1	./TFT/utility/Adafruit_ST7735.h	83;"	d
ST7735_GMCTRP1	./TFT/utility/Adafruit_ST7735.h	82;"	d
ST7735_GMCTRP1	./TFT/utility/Adafruit_ST7735.h	82;"	d
ST7735_GREEN	./TFT/utility/Adafruit_ST7735.h	89;"	d
ST7735_GREEN	./TFT/utility/Adafruit_ST7735.h	89;"	d
ST7735_INVCTR	./TFT/utility/Adafruit_ST7735.h	65;"	d
ST7735_INVCTR	./TFT/utility/Adafruit_ST7735.h	65;"	d
ST7735_INVOFF	./TFT/utility/Adafruit_ST7735.h	49;"	d
ST7735_INVOFF	./TFT/utility/Adafruit_ST7735.h	49;"	d
ST7735_INVON	./TFT/utility/Adafruit_ST7735.h	50;"	d
ST7735_INVON	./TFT/utility/Adafruit_ST7735.h	50;"	d
ST7735_MADCTL	./TFT/utility/Adafruit_ST7735.h	60;"	d
ST7735_MADCTL	./TFT/utility/Adafruit_ST7735.h	60;"	d
ST7735_MAGENTA	./TFT/utility/Adafruit_ST7735.h	91;"	d
ST7735_MAGENTA	./TFT/utility/Adafruit_ST7735.h	91;"	d
ST7735_NOP	./TFT/utility/Adafruit_ST7735.h	39;"	d
ST7735_NOP	./TFT/utility/Adafruit_ST7735.h	39;"	d
ST7735_NORON	./TFT/utility/Adafruit_ST7735.h	47;"	d
ST7735_NORON	./TFT/utility/Adafruit_ST7735.h	47;"	d
ST7735_PTLAR	./TFT/utility/Adafruit_ST7735.h	58;"	d
ST7735_PTLAR	./TFT/utility/Adafruit_ST7735.h	58;"	d
ST7735_PTLON	./TFT/utility/Adafruit_ST7735.h	46;"	d
ST7735_PTLON	./TFT/utility/Adafruit_ST7735.h	46;"	d
ST7735_PWCTR1	./TFT/utility/Adafruit_ST7735.h	68;"	d
ST7735_PWCTR1	./TFT/utility/Adafruit_ST7735.h	68;"	d
ST7735_PWCTR2	./TFT/utility/Adafruit_ST7735.h	69;"	d
ST7735_PWCTR2	./TFT/utility/Adafruit_ST7735.h	69;"	d
ST7735_PWCTR3	./TFT/utility/Adafruit_ST7735.h	70;"	d
ST7735_PWCTR3	./TFT/utility/Adafruit_ST7735.h	70;"	d
ST7735_PWCTR4	./TFT/utility/Adafruit_ST7735.h	71;"	d
ST7735_PWCTR4	./TFT/utility/Adafruit_ST7735.h	71;"	d
ST7735_PWCTR5	./TFT/utility/Adafruit_ST7735.h	72;"	d
ST7735_PWCTR5	./TFT/utility/Adafruit_ST7735.h	72;"	d
ST7735_PWCTR6	./TFT/utility/Adafruit_ST7735.h	80;"	d
ST7735_PWCTR6	./TFT/utility/Adafruit_ST7735.h	80;"	d
ST7735_RAMRD	./TFT/utility/Adafruit_ST7735.h	56;"	d
ST7735_RAMRD	./TFT/utility/Adafruit_ST7735.h	56;"	d
ST7735_RAMWR	./TFT/utility/Adafruit_ST7735.h	55;"	d
ST7735_RAMWR	./TFT/utility/Adafruit_ST7735.h	55;"	d
ST7735_RASET	./TFT/utility/Adafruit_ST7735.h	54;"	d
ST7735_RASET	./TFT/utility/Adafruit_ST7735.h	54;"	d
ST7735_RDDID	./TFT/utility/Adafruit_ST7735.h	41;"	d
ST7735_RDDID	./TFT/utility/Adafruit_ST7735.h	41;"	d
ST7735_RDDST	./TFT/utility/Adafruit_ST7735.h	42;"	d
ST7735_RDDST	./TFT/utility/Adafruit_ST7735.h	42;"	d
ST7735_RDID1	./TFT/utility/Adafruit_ST7735.h	75;"	d
ST7735_RDID1	./TFT/utility/Adafruit_ST7735.h	75;"	d
ST7735_RDID2	./TFT/utility/Adafruit_ST7735.h	76;"	d
ST7735_RDID2	./TFT/utility/Adafruit_ST7735.h	76;"	d
ST7735_RDID3	./TFT/utility/Adafruit_ST7735.h	77;"	d
ST7735_RDID3	./TFT/utility/Adafruit_ST7735.h	77;"	d
ST7735_RDID4	./TFT/utility/Adafruit_ST7735.h	78;"	d
ST7735_RDID4	./TFT/utility/Adafruit_ST7735.h	78;"	d
ST7735_RED	./TFT/utility/Adafruit_ST7735.h	88;"	d
ST7735_RED	./TFT/utility/Adafruit_ST7735.h	88;"	d
ST7735_SLPIN	./TFT/utility/Adafruit_ST7735.h	44;"	d
ST7735_SLPIN	./TFT/utility/Adafruit_ST7735.h	44;"	d
ST7735_SLPOUT	./TFT/utility/Adafruit_ST7735.h	45;"	d
ST7735_SLPOUT	./TFT/utility/Adafruit_ST7735.h	45;"	d
ST7735_SWRESET	./TFT/utility/Adafruit_ST7735.h	40;"	d
ST7735_SWRESET	./TFT/utility/Adafruit_ST7735.h	40;"	d
ST7735_TFTHEIGHT	./TFT/utility/Adafruit_ST7735.h	37;"	d
ST7735_TFTHEIGHT	./TFT/utility/Adafruit_ST7735.h	37;"	d
ST7735_TFTWIDTH	./TFT/utility/Adafruit_ST7735.h	36;"	d
ST7735_TFTWIDTH	./TFT/utility/Adafruit_ST7735.h	36;"	d
ST7735_VMCTR1	./TFT/utility/Adafruit_ST7735.h	73;"	d
ST7735_VMCTR1	./TFT/utility/Adafruit_ST7735.h	73;"	d
ST7735_WHITE	./TFT/utility/Adafruit_ST7735.h	93;"	d
ST7735_WHITE	./TFT/utility/Adafruit_ST7735.h	93;"	d
ST7735_YELLOW	./TFT/utility/Adafruit_ST7735.h	92;"	d
ST7735_YELLOW	./TFT/utility/Adafruit_ST7735.h	92;"	d
stagingBuffer	./TinyGPSPlus/TinyGPS++.h	/^   char stagingBuffer[_GPS_MAX_FIELD_SIZE + 1];$/;"	m	class:TinyGPSCustom
stagingBuffer	./TinyGPSPlus/TinyGPS++.h	/^   char stagingBuffer[_GPS_MAX_FIELD_SIZE + 1];$/;"	m	class:TinyGPSCustom
START_CLIENT_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    START_CLIENT_TCP_CMD= 0x2D,$/;"	e	enum:__anon4
START_CLIENT_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    START_CLIENT_TCP_CMD= 0x2D,$/;"	e	enum:__anon4
startClient	./WiFi/utility/server_drv.cpp	/^void ServerDrv::startClient(uint32_t ipAddress, uint16_t port, uint8_t sock, uint8_t protMode)$/;"	f	class:ServerDrv
startClient	./WiFi/utility/server_drv.cpp	/^void ServerDrv::startClient(uint32_t ipAddress, uint16_t port, uint8_t sock, uint8_t protMode)$/;"	f	class:ServerDrv
START_CMD	./WiFi/utility/wifi_spi.h	18;"	d
START_CMD	./WiFi/utility/wifi_spi.h	18;"	d
start_reception_tmout	./GSM_Shield/GSM_Shield.h	/^    uint16_t start_reception_tmout; \/\/ max tmout for starting reception$/;"	m	class:GSM
start_reception_tmout	./GSM_Shield/GSM_Shield.h	/^    uint16_t start_reception_tmout; \/\/ max tmout for starting reception$/;"	m	class:GSM
startScanNetworks	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::startScanNetworks()$/;"	f	class:WiFiDrv
startScanNetworks	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::startScanNetworks()$/;"	f	class:WiFiDrv
START_SCAN_NETWORKS	./WiFi/utility/wifi_spi.h	/^	START_SCAN_NETWORKS	= 0x36,$/;"	e	enum:__anon4
START_SCAN_NETWORKS	./WiFi/utility/wifi_spi.h	/^	START_SCAN_NETWORKS	= 0x36,$/;"	e	enum:__anon4
START_SERVER_TCP_CMD	./WiFi/utility/wifi_spi.h	/^	START_SERVER_TCP_CMD= 0x28,$/;"	e	enum:__anon4
START_SERVER_TCP_CMD	./WiFi/utility/wifi_spi.h	/^	START_SERVER_TCP_CMD= 0x28,$/;"	e	enum:__anon4
startServer	./WiFi/utility/server_drv.cpp	/^void ServerDrv::startServer(uint16_t port, uint8_t sock, uint8_t protMode)$/;"	f	class:ServerDrv
startServer	./WiFi/utility/server_drv.cpp	/^void ServerDrv::startServer(uint16_t port, uint8_t sock, uint8_t protMode)$/;"	f	class:ServerDrv
startSysex	./Firmata/Firmata.cpp	/^void FirmataClass::startSysex(void)$/;"	f	class:FirmataClass
startSysex	./Firmata/Firmata.cpp	/^void FirmataClass::startSysex(void)$/;"	f	class:FirmataClass
START_SYSEX	./Firmata/Firmata.h	39;"	d
START_SYSEX	./Firmata/Firmata.h	39;"	d
startUDP	./Ethernet/utility/socket.cpp	/^int startUDP(SOCKET s, uint8_t* addr, uint16_t port)$/;"	f
startUDP	./Ethernet/utility/socket.cpp	/^int startUDP(SOCKET s, uint8_t* addr, uint16_t port)$/;"	f
START	./WiFi/utility/debug.h	57;"	d
START	./WiFi/utility/debug.h	57;"	d
START	./WiFi/utility/debug.h	69;"	d
START	./WiFi/utility/debug.h	69;"	d
STATE_DHCP_DISCOVER	./Ethernet/Dhcp.h	11;"	d
STATE_DHCP_DISCOVER	./Ethernet/Dhcp.h	11;"	d
STATE_DHCP_LEASED	./Ethernet/Dhcp.h	13;"	d
STATE_DHCP_LEASED	./Ethernet/Dhcp.h	13;"	d
STATE_DHCP_RELEASE	./Ethernet/Dhcp.h	15;"	d
STATE_DHCP_RELEASE	./Ethernet/Dhcp.h	15;"	d
STATE_DHCP_REQUEST	./Ethernet/Dhcp.h	12;"	d
STATE_DHCP_REQUEST	./Ethernet/Dhcp.h	12;"	d
STATE_DHCP_REREQUEST	./Ethernet/Dhcp.h	14;"	d
STATE_DHCP_REREQUEST	./Ethernet/Dhcp.h	14;"	d
STATE_DHCP_START	./Ethernet/Dhcp.h	10;"	d
STATE_DHCP_START	./Ethernet/Dhcp.h	10;"	d
_state	./Ethernet/Ethernet.cpp	/^uint8_t EthernetClass::_state[MAX_SOCK_NUM] = { $/;"	m	class:EthernetClass	file:
_state	./Ethernet/Ethernet.cpp	/^uint8_t EthernetClass::_state[MAX_SOCK_NUM] = { $/;"	m	class:EthernetClass	file:
_state	./Ethernet/Ethernet.h	/^  static uint8_t _state[MAX_SOCK_NUM];$/;"	m	class:EthernetClass
_state	./Ethernet/Ethernet.h	/^  static uint8_t _state[MAX_SOCK_NUM];$/;"	m	class:EthernetClass
_state	./WiFi/WiFi.cpp	/^int16_t 	WiFiClass::_state[MAX_SOCK_NUM] = { NA_STATE, NA_STATE, NA_STATE, NA_STATE };$/;"	m	class:WiFiClass	file:
_state	./WiFi/WiFi.cpp	/^int16_t 	WiFiClass::_state[MAX_SOCK_NUM] = { NA_STATE, NA_STATE, NA_STATE, NA_STATE };$/;"	m	class:WiFiClass	file:
_state	./WiFi/WiFi.h	/^    static int16_t 	_state[MAX_SOCK_NUM];$/;"	m	class:WiFiClass
_state	./WiFi/WiFi.h	/^    static int16_t 	_state[MAX_SOCK_NUM];$/;"	m	class:WiFiClass
STATIC_NOINLINE	./Robot_Control/SdCard.cpp	41;"	d	file:
STATIC_NOINLINE	./Robot_Control/SdCard.cpp	41;"	d	file:
stats	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::stats(unsigned long *chars, unsigned short *sentences, unsigned short *failed_cs)$/;"	f	class:TinyGPS
stats	./TinyGPS/TinyGPS.cpp	/^void TinyGPS::stats(unsigned long *chars, unsigned short *sentences, unsigned short *failed_cs)$/;"	f	class:TinyGPS
status	./Ethernet/EthernetClient.cpp	/^uint8_t EthernetClient::status() {$/;"	f	class:EthernetClient
status	./Ethernet/EthernetClient.cpp	/^uint8_t EthernetClient::status() {$/;"	f	class:EthernetClient
_status	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3_NetworkStatus_t _status;$/;"	m	class:GSM3ShieldV1ModemCore
_status	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3_NetworkStatus_t _status;$/;"	m	class:GSM3ShieldV1ModemCore
STATUS_INITIALIZED	./GSM_Shield/GSM_Shield.h	59;"	d
STATUS_INITIALIZED	./GSM_Shield/GSM_Shield.h	59;"	d
STATUS_NONE	./GSM_Shield/GSM_Shield.h	58;"	d
STATUS_NONE	./GSM_Shield/GSM_Shield.h	58;"	d
STATUS_REGISTERED	./GSM_Shield/GSM_Shield.h	60;"	d
STATUS_REGISTERED	./GSM_Shield/GSM_Shield.h	60;"	d
status_	./SD/utility/Sd2Card.h	/^  uint8_t status_;$/;"	m	class:Sd2Card
status_	./SD/utility/Sd2Card.h	/^  uint8_t status_;$/;"	m	class:Sd2Card
STATUS_USER_BUTTON_ENABLE	./GSM_Shield/GSM_Shield.h	61;"	d
STATUS_USER_BUTTON_ENABLE	./GSM_Shield/GSM_Shield.h	61;"	d
status	./WiFi/WiFiClient.cpp	/^uint8_t WiFiClient::status() {$/;"	f	class:WiFiClient
status	./WiFi/WiFiClient.cpp	/^uint8_t WiFiClient::status() {$/;"	f	class:WiFiClient
status	./WiFi/WiFi.cpp	/^uint8_t WiFiClass::status()$/;"	f	class:WiFiClass
status	./WiFi/WiFi.cpp	/^uint8_t WiFiClass::status()$/;"	f	class:WiFiClass
status	./WiFi/WiFiServer.cpp	/^uint8_t WiFiServer::status() {$/;"	f	class:WiFiServer
status	./WiFi/WiFiServer.cpp	/^uint8_t WiFiServer::status() {$/;"	f	class:WiFiServer
step	./AFMotor/AFMotor.cpp	/^void AF_Stepper::step(uint16_t steps, uint8_t dir,  uint8_t style) {$/;"	f	class:AF_Stepper
step	./AFMotor/AFMotor.cpp	/^void AF_Stepper::step(uint16_t steps, uint8_t dir,  uint8_t style) {$/;"	f	class:AF_Stepper
step_delay	./Stepper/Stepper.h	/^    unsigned long step_delay;    \/\/ delay between steps, in ms, based on speed$/;"	m	class:Stepper
step_delay	./Stepper/Stepper.h	/^    unsigned long step_delay;    \/\/ delay between steps, in ms, based on speed$/;"	m	class:Stepper
stepMotor	./Stepper/Stepper.cpp	/^void Stepper::stepMotor(int thisStep)$/;"	f	class:Stepper
stepMotor	./Stepper/Stepper.cpp	/^void Stepper::stepMotor(int thisStep)$/;"	f	class:Stepper
step_number	./Stepper/Stepper.h	/^    int step_number;        \/\/ which step the motor is on$/;"	m	class:Stepper
step_number	./Stepper/Stepper.h	/^    int step_number;        \/\/ which step the motor is on$/;"	m	class:Stepper
STEPPER1_PWM_RATE	./AFMotor/AFMotor.h	53;"	d
STEPPER1_PWM_RATE	./AFMotor/AFMotor.h	53;"	d
STEPPER1_PWM_RATE	./AFMotor/AFMotor.h	92;"	d
STEPPER1_PWM_RATE	./AFMotor/AFMotor.h	92;"	d
STEPPER2_PWM_RATE	./AFMotor/AFMotor.h	54;"	d
STEPPER2_PWM_RATE	./AFMotor/AFMotor.h	54;"	d
STEPPER2_PWM_RATE	./AFMotor/AFMotor.h	93;"	d
STEPPER2_PWM_RATE	./AFMotor/AFMotor.h	93;"	d
Stepper_h	./Stepper/Stepper.h	46;"	d
Stepper_h	./Stepper/Stepper.h	46;"	d
steppernum	./AFMotor/AFMotor.h	/^  uint8_t steppernum;$/;"	m	class:AF_Stepper
steppernum	./AFMotor/AFMotor.h	/^  uint8_t steppernum;$/;"	m	class:AF_Stepper
Stepper	./Stepper/Stepper.cpp	/^Stepper::Stepper(int number_of_steps, int motor_pin_1, int motor_pin_2)$/;"	f	class:Stepper
Stepper	./Stepper/Stepper.cpp	/^Stepper::Stepper(int number_of_steps, int motor_pin_1, int motor_pin_2)$/;"	f	class:Stepper
Stepper	./Stepper/Stepper.cpp	/^Stepper::Stepper(int number_of_steps, int motor_pin_1, int motor_pin_2, int motor_pin_3, int motor_pin_4)$/;"	f	class:Stepper
Stepper	./Stepper/Stepper.cpp	/^Stepper::Stepper(int number_of_steps, int motor_pin_1, int motor_pin_2, int motor_pin_3, int motor_pin_4)$/;"	f	class:Stepper
Stepper	./Stepper/Stepper.h	/^class Stepper {$/;"	c
Stepper	./Stepper/Stepper.h	/^class Stepper {$/;"	c
steppingcounter	./AFMotor/AFMotor.h	/^  uint32_t usperstep, steppingcounter;$/;"	m	class:AF_Stepper
steppingcounter	./AFMotor/AFMotor.h	/^  uint32_t usperstep, steppingcounter;$/;"	m	class:AF_Stepper
step	./Stepper/Stepper.cpp	/^void Stepper::step(int steps_to_move)$/;"	f	class:Stepper
step	./Stepper/Stepper.cpp	/^void Stepper::step(int steps_to_move)$/;"	f	class:Stepper
STOP_CLIENT_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    STOP_CLIENT_TCP_CMD = 0x2E,$/;"	e	enum:__anon4
STOP_CLIENT_TCP_CMD	./WiFi/utility/wifi_spi.h	/^    STOP_CLIENT_TCP_CMD = 0x2E,$/;"	e	enum:__anon4
stopClient	./WiFi/utility/server_drv.cpp	/^void ServerDrv::stopClient(uint8_t sock)$/;"	f	class:ServerDrv
stopClient	./WiFi/utility/server_drv.cpp	/^void ServerDrv::stopClient(uint8_t sock)$/;"	f	class:ServerDrv
stopCurrentActions	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::stopCurrentActions(){$/;"	f	class:RobotMotorBoard
stopCurrentActions	./Robot_Motor/ArduinoRobotMotorBoard.cpp	/^void RobotMotorBoard::stopCurrentActions(){$/;"	f	class:RobotMotorBoard
stop	./Ethernet/EthernetClient.cpp	/^void EthernetClient::stop() {$/;"	f	class:EthernetClient
stop	./Ethernet/EthernetClient.cpp	/^void EthernetClient::stop() {$/;"	f	class:EthernetClient
stop	./Ethernet/EthernetUdp.cpp	/^void EthernetUDP::stop()$/;"	f	class:EthernetUDP
stop	./Ethernet/EthernetUdp.cpp	/^void EthernetUDP::stop()$/;"	f	class:EthernetUDP
stop	./GSM/GSM3MobileClientService.cpp	/^void GSM3MobileClientService::stop()$/;"	f	class:GSM3MobileClientService
stop	./GSM/GSM3MobileClientService.cpp	/^void GSM3MobileClientService::stop()$/;"	f	class:GSM3MobileClientService
stop	./GSM/GSM3MobileServerService.cpp	/^void GSM3MobileServerService::stop()$/;"	f	class:GSM3MobileServerService
stop	./GSM/GSM3MobileServerService.cpp	/^void GSM3MobileServerService::stop()$/;"	f	class:GSM3MobileServerService
stopPlayFile	./Robot_Control/Melody.cpp	/^void RobotControl::stopPlayFile(){$/;"	f	class:RobotControl
stopPlayFile	./Robot_Control/Melody.cpp	/^void RobotControl::stopPlayFile(){$/;"	f	class:RobotControl
stop	./Robot_Control/Squawk.cpp	/^void SquawkSynth::stop() {$/;"	f	class:SquawkSynth
stop	./Robot_Control/Squawk.cpp	/^void SquawkSynth::stop() {$/;"	f	class:SquawkSynth
STOP_TRAN_TOKEN	./SD/utility/SdInfo.h	/^uint8_t const STOP_TRAN_TOKEN = 0XFD;$/;"	v
STOP_TRAN_TOKEN	./SD/utility/SdInfo.h	/^uint8_t const STOP_TRAN_TOKEN = 0XFD;$/;"	v
stop	./WiFi/WiFiClient.cpp	/^void WiFiClient::stop() {$/;"	f	class:WiFiClient
stop	./WiFi/WiFiClient.cpp	/^void WiFiClient::stop() {$/;"	f	class:WiFiClient
stop	./WiFi/WiFiUdp.cpp	/^void WiFiUDP::stop()$/;"	f	class:WiFiUDP
stop	./WiFi/WiFiUdp.cpp	/^void WiFiUDP::stop()$/;"	f	class:WiFiUDP
storedBytes	./GSM/GSM3CircularBuffer.h	/^		inline byte storedBytes(){ return ((tail-head)&__BUFFERMASK__);};$/;"	f	class:GSM3CircularBuffer
storedBytes	./GSM/GSM3CircularBuffer.h	/^		inline byte storedBytes(){ return ((tail-head)&__BUFFERMASK__);};$/;"	f	class:GSM3CircularBuffer
storedInputData	./Firmata/Firmata.h	/^    byte storedInputData[MAX_DATA_BYTES]; \/\/ multi-byte data$/;"	m	class:FirmataClass
storedInputData	./Firmata/Firmata.h	/^    byte storedInputData[MAX_DATA_BYTES]; \/\/ multi-byte data$/;"	m	class:FirmataClass
stream_base	./Robot_Control/Squawk.cpp	/^static uint16_t stream_base;$/;"	v	file:
stream_base	./Robot_Control/Squawk.cpp	/^static uint16_t stream_base;$/;"	v	file:
StreamFile	./Robot_Control/SquawkSD.cpp	/^class StreamFile : public SquawkStream {$/;"	c	file:
StreamFile	./Robot_Control/SquawkSD.cpp	/^class StreamFile : public SquawkStream {$/;"	c	file:
StreamFile	./Robot_Control/SquawkSD.cpp	/^		StreamFile(Fat16 file = Fat16()) { f = file; }$/;"	f	class:StreamFile
StreamFile	./Robot_Control/SquawkSD.cpp	/^		StreamFile(Fat16 file = Fat16()) { f = file; }$/;"	f	class:StreamFile
stream	./Robot_Control/Squawk.cpp	/^static SquawkStream *stream;$/;"	v	file:
stream	./Robot_Control/Squawk.cpp	/^static SquawkStream *stream;$/;"	v	file:
StreamROM	./Robot_Control/Squawk.cpp	/^class StreamROM : public SquawkStream {$/;"	c	file:
StreamROM	./Robot_Control/Squawk.cpp	/^class StreamROM : public SquawkStream {$/;"	c	file:
StreamROM	./Robot_Control/Squawk.cpp	/^    StreamROM(const uint8_t *p_rom = NULL) { p_start = p_cursor = (uint8_t*)p_rom; }$/;"	f	class:StreamROM
StreamROM	./Robot_Control/Squawk.cpp	/^    StreamROM(const uint8_t *p_rom = NULL) { p_start = p_cursor = (uint8_t*)p_rom; }$/;"	f	class:StreamROM
stringCallbackFunction	./Firmata/Firmata.h	/^    typedef void (*stringCallbackFunction)(char*);$/;"	t
stringCallbackFunction	./Firmata/Firmata.h	/^    typedef void (*stringCallbackFunction)(char*);$/;"	t
STRING_DATA	./Firmata/Firmata.h	45;"	d
STRING_DATA	./Firmata/Firmata.h	45;"	d
strokeColor	./Robot_Control/Adafruit_GFX.h	/^  color strokeColor;$/;"	m	class:Adafruit_GFX
strokeColor	./Robot_Control/Adafruit_GFX.h	/^  color strokeColor;$/;"	m	class:Adafruit_GFX
strokeColor	./TFT/utility/Adafruit_GFX.h	/^  color strokeColor;$/;"	m	class:Adafruit_GFX
strokeColor	./TFT/utility/Adafruit_GFX.h	/^  color strokeColor;$/;"	m	class:Adafruit_GFX
stroke	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::stroke(color c) {$/;"	f	class:Adafruit_GFX
stroke	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::stroke(color c) {$/;"	f	class:Adafruit_GFX
stroke	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::stroke(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
stroke	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::stroke(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
stroke	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::stroke(color c) {$/;"	f	class:Adafruit_GFX
stroke	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::stroke(color c) {$/;"	f	class:Adafruit_GFX
stroke	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::stroke(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
stroke	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::stroke(uint8_t red, uint8_t green, uint8_t blue) {$/;"	f	class:Adafruit_GFX
subnetMask	./Ethernet/Dhcp.h	/^	subnetMask		=	1,$/;"	e	enum:__anon14
subnetMask	./Ethernet/Dhcp.h	/^	subnetMask		=	1,$/;"	e	enum:__anon14
subnetMask	./Ethernet/Ethernet.cpp	/^IPAddress EthernetClass::subnetMask()$/;"	f	class:EthernetClass
subnetMask	./Ethernet/Ethernet.cpp	/^IPAddress EthernetClass::subnetMask()$/;"	f	class:EthernetClass
_subnetMask	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_subnetMask[] = {0};$/;"	m	class:WiFiDrv	file:
_subnetMask	./WiFi/utility/wifi_drv.cpp	/^uint8_t WiFiDrv::_subnetMask[] = {0};$/;"	m	class:WiFiDrv	file:
_subnetMask	./WiFi/utility/wifi_drv.h	/^	static uint8_t  _subnetMask[WL_IPV4_LENGTH];$/;"	m	class:WiFiDrv
_subnetMask	./WiFi/utility/wifi_drv.h	/^	static uint8_t  _subnetMask[WL_IPV4_LENGTH];$/;"	m	class:WiFiDrv
subnetMask	./WiFi/WiFi.cpp	/^IPAddress WiFiClass::subnetMask()$/;"	f	class:WiFiClass
subnetMask	./WiFi/WiFi.cpp	/^IPAddress WiFiClass::subnetMask()$/;"	f	class:WiFiClass
SUCCESS	./Ethernet/Dns.cpp	45;"	d	file:
SUCCESS	./Ethernet/Dns.cpp	45;"	d	file:
swapcolor	./TFT/utility/Adafruit_ST7735.cpp	/^inline uint16_t swapcolor(uint16_t x) { $/;"	f
swapcolor	./TFT/utility/Adafruit_ST7735.cpp	/^inline uint16_t swapcolor(uint16_t x) { $/;"	f
swap	./Robot_Control/Adafruit_GFX.h	28;"	d
swap	./Robot_Control/Adafruit_GFX.h	28;"	d
swap	./TFT/utility/Adafruit_GFX.h	63;"	d
swap	./TFT/utility/Adafruit_GFX.h	63;"	d
SWITCH_1	./Esplora/Esplora.h	/^const byte SWITCH_1       = 1;$/;"	v
SWITCH_1	./Esplora/Esplora.h	/^const byte SWITCH_1       = 1;$/;"	v
SWITCH_2	./Esplora/Esplora.h	/^const byte SWITCH_2       = 2;$/;"	v
SWITCH_2	./Esplora/Esplora.h	/^const byte SWITCH_2       = 2;$/;"	v
SWITCH_3	./Esplora/Esplora.h	/^const byte SWITCH_3       = 3;$/;"	v
SWITCH_3	./Esplora/Esplora.h	/^const byte SWITCH_3       = 3;$/;"	v
SWITCH_4	./Esplora/Esplora.h	/^const byte SWITCH_4       = 4;$/;"	v
SWITCH_4	./Esplora/Esplora.h	/^const byte SWITCH_4       = 4;$/;"	v
SWITCH_DOWN	./Esplora/Esplora.h	/^const byte SWITCH_DOWN  = SWITCH_1;$/;"	v
SWITCH_DOWN	./Esplora/Esplora.h	/^const byte SWITCH_DOWN  = SWITCH_1;$/;"	v
SWITCH_LEFT	./Esplora/Esplora.h	/^const byte SWITCH_LEFT  = SWITCH_2;$/;"	v
SWITCH_LEFT	./Esplora/Esplora.h	/^const byte SWITCH_LEFT  = SWITCH_2;$/;"	v
switchPIN	./GSM/GSM3ShieldV1PinManagement.cpp	/^void GSM3ShieldV1PinManagement::switchPIN(String pin)$/;"	f	class:GSM3ShieldV1PinManagement
switchPIN	./GSM/GSM3ShieldV1PinManagement.cpp	/^void GSM3ShieldV1PinManagement::switchPIN(String pin)$/;"	f	class:GSM3ShieldV1PinManagement
SWITCH_RIGHT	./Esplora/Esplora.h	/^const byte SWITCH_RIGHT = SWITCH_4;$/;"	v
SWITCH_RIGHT	./Esplora/Esplora.h	/^const byte SWITCH_RIGHT = SWITCH_4;$/;"	v
SWITCH_UP	./Esplora/Esplora.h	/^const byte SWITCH_UP    = SWITCH_3;$/;"	v
SWITCH_UP	./Esplora/Esplora.h	/^const byte SWITCH_UP    = SWITCH_3;$/;"	v
sync	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::sync(void) {$/;"	f	class:Fat16
sync	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::sync(void) {$/;"	f	class:Fat16
sync	./SD/utility/SdFile.cpp	/^uint8_t SdFile::sync(void) {$/;"	f	class:SdFile
sync	./SD/utility/SdFile.cpp	/^uint8_t SdFile::sync(void) {$/;"	f	class:SdFile
SYN_RCVD	./WiFi/utility/wifi_spi.h	/^  SYN_RCVD    = 3,$/;"	e	enum:wl_tcp_state
SYN_RCVD	./WiFi/utility/wifi_spi.h	/^  SYN_RCVD    = 3,$/;"	e	enum:wl_tcp_state
SYNRECV	./Ethernet/utility/w5100.h	/^  static const uint8_t SYNRECV     = 0x16;$/;"	m	class:SnSR
SYNRECV	./Ethernet/utility/w5100.h	/^  static const uint8_t SYNRECV     = 0x16;$/;"	m	class:SnSR
SYNSENT	./Ethernet/utility/w5100.h	/^  static const uint8_t SYNSENT     = 0x15;$/;"	m	class:SnSR
SYNSENT	./Ethernet/utility/w5100.h	/^  static const uint8_t SYNSENT     = 0x15;$/;"	m	class:SnSR
SYN_SENT	./WiFi/utility/wifi_spi.h	/^  SYN_SENT    = 2,$/;"	e	enum:wl_tcp_state
SYN_SENT	./WiFi/utility/wifi_spi.h	/^  SYN_SENT    = 2,$/;"	e	enum:wl_tcp_state
sysexBytesRead	./Firmata/Firmata.h	/^    int sysexBytesRead;$/;"	m	class:FirmataClass
sysexBytesRead	./Firmata/Firmata.h	/^    int sysexBytesRead;$/;"	m	class:FirmataClass
sysexCallbackFunction	./Firmata/Firmata.h	/^    typedef void (*sysexCallbackFunction)(byte command, byte argc, byte*argv);$/;"	t
sysexCallbackFunction	./Firmata/Firmata.h	/^    typedef void (*sysexCallbackFunction)(byte command, byte argc, byte*argv);$/;"	t
SYSEX_I2C_REPLY	./Firmata/Firmata.h	64;"	d
SYSEX_I2C_REPLY	./Firmata/Firmata.h	64;"	d
SYSEX_I2C_REQUEST	./Firmata/Firmata.h	63;"	d
SYSEX_I2C_REQUEST	./Firmata/Firmata.h	63;"	d
SYSEX_NON_REALTIME	./Firmata/Firmata.h	59;"	d
SYSEX_NON_REALTIME	./Firmata/Firmata.h	59;"	d
SYSEX_REALTIME	./Firmata/Firmata.h	60;"	d
SYSEX_REALTIME	./Firmata/Firmata.h	60;"	d
SYSEX_SAMPLING_INTERVAL	./Firmata/Firmata.h	65;"	d
SYSEX_SAMPLING_INTERVAL	./Firmata/Firmata.h	65;"	d
systemResetCallbackFunction	./Firmata/Firmata.h	/^    typedef void (*systemResetCallbackFunction)(void);$/;"	t
systemResetCallbackFunction	./Firmata/Firmata.h	/^    typedef void (*systemResetCallbackFunction)(void);$/;"	t
systemReset	./Firmata/Firmata.cpp	/^void FirmataClass::systemReset(void)$/;"	f	class:FirmataClass
systemReset	./Firmata/Firmata.cpp	/^void FirmataClass::systemReset(void)$/;"	f	class:FirmataClass
SYSTEM_RESET	./Firmata/Firmata.h	37;"	d
SYSTEM_RESET	./Firmata/Firmata.h	37;"	d
taac	./Robot_Control/SdInfo.h	/^  uint8_t taac;$/;"	m	struct:CSD
taac	./Robot_Control/SdInfo.h	/^  uint8_t taac;$/;"	m	struct:CSD
taac	./SD/utility/SdInfo.h	/^  uint8_t taac;$/;"	m	struct:CSDV1
taac	./SD/utility/SdInfo.h	/^  uint8_t taac;$/;"	m	struct:CSDV1
taac	./SD/utility/SdInfo.h	/^  uint8_t taac;$/;"	m	struct:CSDV2
taac	./SD/utility/SdInfo.h	/^  uint8_t taac;$/;"	m	struct:CSDV2
tabcolor	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  tabcolor;$/;"	m	class:Adafruit_ST7735
tabcolor	./TFT/utility/Adafruit_ST7735.h	/^  uint8_t  tabcolor;$/;"	m	class:Adafruit_ST7735
table	./GSM/GSM3SoftSerial.cpp	/^static const DELAY_TABLE PROGMEM table[] = $/;"	v	file:
table	./GSM/GSM3SoftSerial.cpp	/^static const DELAY_TABLE PROGMEM table[] = $/;"	v	file:
table	./GSM/GSM3SoftSerial.cpp	/^static const DELAY_TABLE PROGMEM table[] =$/;"	v	file:
table	./GSM/GSM3SoftSerial.cpp	/^static const DELAY_TABLE PROGMEM table[] =$/;"	v	file:
table	./SoftwareSerial/SoftwareSerial.cpp	/^static const DELAY_TABLE PROGMEM table[] = $/;"	v	file:
table	./SoftwareSerial/SoftwareSerial.cpp	/^static const DELAY_TABLE PROGMEM table[] = $/;"	v	file:
table	./SoftwareSerial/SoftwareSerial.cpp	/^static const DELAY_TABLE PROGMEM table[] =$/;"	v	file:
table	./SoftwareSerial/SoftwareSerial.cpp	/^static const DELAY_TABLE PROGMEM table[] =$/;"	v	file:
T_ACCESS	./Robot_Control/Fat16.h	/^uint8_t const T_ACCESS = 1;$/;"	v
T_ACCESS	./Robot_Control/Fat16.h	/^uint8_t const T_ACCESS = 1;$/;"	v
T_ACCESS	./SD/utility/SdFat.h	/^uint8_t const T_ACCESS = 1;$/;"	v
T_ACCESS	./SD/utility/SdFat.h	/^uint8_t const T_ACCESS = 1;$/;"	v
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
tail	./GSM/GSM3CircularBuffer.h	/^		volatile byte tail; \/\/ Last written one. $/;"	m	class:GSM3CircularBuffer
tail	./GSM/GSM3CircularBuffer.h	/^		volatile byte tail; \/\/ Last written one. $/;"	m	class:GSM3CircularBuffer
takeMilliseconds	./GSM/GSM3ShieldV1ModemCore.cpp	/^unsigned long GSM3ShieldV1ModemCore::takeMilliseconds()$/;"	f	class:GSM3ShieldV1ModemCore
takeMilliseconds	./GSM/GSM3ShieldV1ModemCore.cpp	/^unsigned long GSM3ShieldV1ModemCore::takeMilliseconds()$/;"	f	class:GSM3ShieldV1ModemCore
TALKING	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	e	enum:GSM3_voiceCall_st
TALKING	./GSM/GSM3MobileVoiceProvider.h	/^enum GSM3_voiceCall_st { IDLE_CALL, CALLING, RECEIVINGCALL, TALKING};$/;"	e	enum:GSM3_voiceCall_st
tByteParam	./WiFi/utility/wifi_spi.h	/^}tByteParam;$/;"	t	typeref:struct:__anon12
tByteParam	./WiFi/utility/wifi_spi.h	/^}tByteParam;$/;"	t	typeref:struct:__anon12
tcmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	tcmd;$/;"	m	struct:__anon7
tcmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	tcmd;$/;"	m	struct:__anon7
tcmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	tcmd;$/;"	m	struct:__anon8
tcmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	tcmd;$/;"	m	struct:__anon8
tcmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	tcmd;$/;"	m	struct:__anon9
tcmd	./WiFi/utility/wifi_spi.h	/^	unsigned char	tcmd;$/;"	m	struct:__anon9
TCP	./Ethernet/utility/w5100.h	/^  static const uint8_t TCP    = 0x01;$/;"	m	class:SnMR
TCP	./Ethernet/utility/w5100.h	/^  static const uint8_t TCP    = 0x01;$/;"	m	class:SnMR
TCP	./Ethernet/utility/w5100.h	/^  static const uint8_t TCP  = 6;$/;"	m	class:IPPROTO
TCP	./Ethernet/utility/w5100.h	/^  static const uint8_t TCP  = 6;$/;"	m	class:IPPROTO
TCP_MODE	./WiFi/utility/server_drv.h	/^typedef enum eProtMode {TCP_MODE, UDP_MODE}tProtMode;$/;"	e	enum:eProtMode
TCP_MODE	./WiFi/utility/server_drv.h	/^typedef enum eProtMode {TCP_MODE, UDP_MODE}tProtMode;$/;"	e	enum:eProtMode
TCP_SOCKET	./WiFi/utility/socket.h	11;"	d
TCP_SOCKET	./WiFi/utility/socket.h	11;"	d
T_CREATE	./Robot_Control/Fat16.h	/^uint8_t const T_CREATE = 2;$/;"	v
T_CREATE	./Robot_Control/Fat16.h	/^uint8_t const T_CREATE = 2;$/;"	v
T_CREATE	./SD/utility/SdFat.h	/^uint8_t const T_CREATE = 2;$/;"	v
T_CREATE	./SD/utility/SdFat.h	/^uint8_t const T_CREATE = 2;$/;"	v
tDataParam	./WiFi/utility/wifi_spi.h	/^}tDataParam;$/;"	t	typeref:struct:__anon6
tDataParam	./WiFi/utility/wifi_spi.h	/^}tDataParam;$/;"	t	typeref:struct:__anon6
tempo	./Robot_Control/Squawk.cpp	/^void SquawkSynth::tempo(uint16_t new_tempo) {$/;"	f	class:SquawkSynth
tempo	./Robot_Control/Squawk.cpp	/^void SquawkSynth::tempo(uint16_t new_tempo) {$/;"	f	class:SquawkSynth
tempoWrite	./Robot_Control/Melody.cpp	/^void RobotControl::tempoWrite(int tempo){$/;"	f	class:RobotControl
tempoWrite	./Robot_Control/Melody.cpp	/^void RobotControl::tempoWrite(int tempo){$/;"	f	class:RobotControl
term_complete	./TinyGPS/TinyGPS.cpp	/^bool TinyGPS::term_complete()$/;"	f	class:TinyGPS
term_complete	./TinyGPS/TinyGPS.cpp	/^bool TinyGPS::term_complete()$/;"	f	class:TinyGPS
termNumber	./TinyGPSPlus/TinyGPS++.h	/^   int termNumber;$/;"	m	class:TinyGPSCustom
termNumber	./TinyGPSPlus/TinyGPS++.h	/^   int termNumber;$/;"	m	class:TinyGPSCustom
_term_number	./TinyGPS/TinyGPS.h	/^  byte _term_number;$/;"	m	class:TinyGPS
_term_number	./TinyGPS/TinyGPS.h	/^  byte _term_number;$/;"	m	class:TinyGPS
_term_offset	./TinyGPS/TinyGPS.h	/^  byte _term_offset;$/;"	m	class:TinyGPS
_term_offset	./TinyGPS/TinyGPS.h	/^  byte _term_offset;$/;"	m	class:TinyGPS
term	./TinyGPSPlus/TinyGPS++.h	/^  char term[_GPS_MAX_FIELD_SIZE];$/;"	m	class:TinyGPSPlus
term	./TinyGPSPlus/TinyGPS++.h	/^  char term[_GPS_MAX_FIELD_SIZE];$/;"	m	class:TinyGPSPlus
_term	./TinyGPS/TinyGPS.h	/^  char _term[15];$/;"	m	class:TinyGPS
_term	./TinyGPS/TinyGPS.h	/^  char _term[15];$/;"	m	class:TinyGPS
TEST_CMD	./WiFi/utility/wifi_spi.h	/^	TEST_CMD	        = 0x13,$/;"	e	enum:__anon4
TEST_CMD	./WiFi/utility/wifi_spi.h	/^	TEST_CMD	        = 0x13,$/;"	e	enum:__anon4
textbgcolor	./Robot_Control/Adafruit_GFX.h	/^  uint16_t textcolor, textbgcolor;$/;"	m	class:Adafruit_GFX
textbgcolor	./Robot_Control/Adafruit_GFX.h	/^  uint16_t textcolor, textbgcolor;$/;"	m	class:Adafruit_GFX
textbgcolor	./TFT/utility/Adafruit_GFX.h	/^  uint16_t textcolor, textbgcolor;$/;"	m	class:Adafruit_GFX
textbgcolor	./TFT/utility/Adafruit_GFX.h	/^  uint16_t textcolor, textbgcolor;$/;"	m	class:Adafruit_GFX
textcolor	./Robot_Control/Adafruit_GFX.h	/^  uint16_t textcolor, textbgcolor;$/;"	m	class:Adafruit_GFX
textcolor	./Robot_Control/Adafruit_GFX.h	/^  uint16_t textcolor, textbgcolor;$/;"	m	class:Adafruit_GFX
textcolor	./TFT/utility/Adafruit_GFX.h	/^  uint16_t textcolor, textbgcolor;$/;"	m	class:Adafruit_GFX
textcolor	./TFT/utility/Adafruit_GFX.h	/^  uint16_t textcolor, textbgcolor;$/;"	m	class:Adafruit_GFX
textManager	./Robot_Control/utility/RobotTextManager.cpp	/^TextManager textManager=TextManager();$/;"	v
textManager	./Robot_Control/utility/RobotTextManager.cpp	/^TextManager textManager=TextManager();$/;"	v
TextManager	./Robot_Control/utility/RobotTextManager.h	/^class TextManager{$/;"	c
TextManager	./Robot_Control/utility/RobotTextManager.h	/^class TextManager{$/;"	c
text	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(char value, uint8_t x, uint8_t y){$/;"	f	class:Adafruit_GFX
text	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(char value, uint8_t x, uint8_t y){$/;"	f	class:Adafruit_GFX
text	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(const char * text, int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
text	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(const char * text, int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
text	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(int value, uint8_t x, uint8_t y){$/;"	f	class:Adafruit_GFX
text	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(int value, uint8_t x, uint8_t y){$/;"	f	class:Adafruit_GFX
text	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(long value, uint8_t x, uint8_t y){$/;"	f	class:Adafruit_GFX
text	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(long value, uint8_t x, uint8_t y){$/;"	f	class:Adafruit_GFX
textSize	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::textSize(uint8_t size) {$/;"	f	class:Adafruit_GFX
textSize	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::textSize(uint8_t size) {$/;"	f	class:Adafruit_GFX
textsize	./Robot_Control/Adafruit_GFX.h	/^  uint8_t  textsize;$/;"	m	class:Adafruit_GFX
textsize	./Robot_Control/Adafruit_GFX.h	/^  uint8_t  textsize;$/;"	m	class:Adafruit_GFX
textSize	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::textSize(uint8_t size) {$/;"	f	class:Adafruit_GFX
textSize	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::textSize(uint8_t size) {$/;"	f	class:Adafruit_GFX
textsize	./TFT/utility/Adafruit_GFX.h	/^  uint8_t  textsize;$/;"	m	class:Adafruit_GFX
textsize	./TFT/utility/Adafruit_GFX.h	/^  uint8_t  textsize;$/;"	m	class:Adafruit_GFX
text	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(const char * text, int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
text	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::text(const char * text, int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
textWrap	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::textWrap(const char * text, int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
textWrap	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::textWrap(const char * text, int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
textWrap	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::textWrap(const char * text, int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
textWrap	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::textWrap(const char * text, int16_t x, int16_t y) {$/;"	f	class:Adafruit_GFX
TFT	./TFT/TFT.cpp	/^TFT::TFT(uint8_t CS, uint8_t RS, uint8_t RST) $/;"	f	class:TFT
TFT	./TFT/TFT.cpp	/^TFT::TFT(uint8_t CS, uint8_t RS, uint8_t RST) $/;"	f	class:TFT
TFT	./TFT/TFT.h	/^class TFT : public Adafruit_ST7735 {$/;"	c
TFT	./TFT/TFT.h	/^class TFT : public Adafruit_ST7735 {$/;"	c
theBuffer	./GSM/GSM3CircularBuffer.h	/^		volatile byte theBuffer[__BUFFERSIZE__];$/;"	m	class:GSM3CircularBuffer
theBuffer	./GSM/GSM3CircularBuffer.h	/^		volatile byte theBuffer[__BUFFERSIZE__];$/;"	m	class:GSM3CircularBuffer
theBuffer	./GSM/GSM3ShieldV1ModemCore.h	/^		inline GSM3CircularBuffer& theBuffer(){return gss.cb;};$/;"	f	class:GSM3ShieldV1ModemCore
theBuffer	./GSM/GSM3ShieldV1ModemCore.h	/^		inline GSM3CircularBuffer& theBuffer(){return gss.cb;};$/;"	f	class:GSM3ShieldV1ModemCore
theGSM3MobileAccessProvider	./GSM/GSM3MobileAccessProvider.cpp	/^GSM3MobileAccessProvider* theGSM3MobileAccessProvider;/;"	v
theGSM3MobileAccessProvider	./GSM/GSM3MobileAccessProvider.cpp	/^GSM3MobileAccessProvider* theGSM3MobileAccessProvider;/;"	v
theGSM3MobileClientProvider	./GSM/GSM3MobileClientProvider.cpp	/^GSM3MobileClientProvider* theGSM3MobileClientProvider;/;"	v
theGSM3MobileClientProvider	./GSM/GSM3MobileClientProvider.cpp	/^GSM3MobileClientProvider* theGSM3MobileClientProvider;/;"	v
theGSM3MobileServerProvider	./GSM/GSM3MobileServerProvider.cpp	/^ GSM3MobileServerProvider* theGSM3MobileServerProvider;$/;"	v
theGSM3MobileServerProvider	./GSM/GSM3MobileServerProvider.cpp	/^ GSM3MobileServerProvider* theGSM3MobileServerProvider;$/;"	v
theGSM3MobileVoiceProvider	./GSM/GSM3MobileVoiceProvider.cpp	/^GSM3MobileVoiceProvider* theGSM3MobileVoiceProvider;$/;"	v
theGSM3MobileVoiceProvider	./GSM/GSM3MobileVoiceProvider.cpp	/^GSM3MobileVoiceProvider* theGSM3MobileVoiceProvider;$/;"	v
theGSM3ShieldV1ModemCore	./GSM/GSM3ShieldV1ModemCore.cpp	/^GSM3ShieldV1ModemCore theGSM3ShieldV1ModemCore;$/;"	v
theGSM3ShieldV1ModemCore	./GSM/GSM3ShieldV1ModemCore.cpp	/^GSM3ShieldV1ModemCore theGSM3ShieldV1ModemCore;$/;"	v
theGSM3SMSProvider	./GSM/GSM3MobileSMSProvider.cpp	/^GSM3MobileSMSProvider* theGSM3SMSProvider;$/;"	v
theGSM3SMSProvider	./GSM/GSM3MobileSMSProvider.cpp	/^GSM3MobileSMSProvider* theGSM3SMSProvider;$/;"	v
theMobileNetworkRegistry	./GSM/GSM3MobileNetworkRegistry.cpp	/^GSM3MobileNetworkRegistry theMobileNetworkRegistry;$/;"	v
theMobileNetworkRegistry	./GSM/GSM3MobileNetworkRegistry.cpp	/^GSM3MobileNetworkRegistry theMobileNetworkRegistry;$/;"	v
theProvider	./GSM/GSM3MobileNetworkProvider.cpp	/^GSM3MobileNetworkProvider* theProvider;$/;"	v
theProvider	./GSM/GSM3MobileNetworkProvider.cpp	/^GSM3MobileNetworkProvider* theProvider;$/;"	v
theProvider	./GSM/GSM3MobileNetworkRegistry.h	/^		GSM3MobileNetworkProvider* theProvider; \/\/ Network provider$/;"	m	class:GSM3MobileNetworkRegistry
theProvider	./GSM/GSM3MobileNetworkRegistry.h	/^		GSM3MobileNetworkProvider* theProvider; \/\/ Network provider$/;"	m	class:GSM3MobileNetworkRegistry
theShieldV1ClientProvider	./GSM/GSM3MobileClientService.cpp	/^GSM3ShieldV1ClientProvider theShieldV1ClientProvider;$/;"	v
theShieldV1ClientProvider	./GSM/GSM3MobileClientService.cpp	/^GSM3ShieldV1ClientProvider theShieldV1ClientProvider;$/;"	v
theShieldV1ServerProvider	./GSM/GSM3MobileServerService.cpp	/^GSM3ShieldV1ServerProvider theShieldV1ServerProvider;$/;"	v
theShieldV1ServerProvider	./GSM/GSM3MobileServerService.cpp	/^GSM3ShieldV1ServerProvider theShieldV1ServerProvider;$/;"	v
theShieldV1SMSProvider	./GSM/GSM3SMSService.cpp	/^GSM3ShieldV1SMSProvider theShieldV1SMSProvider;$/;"	v
theShieldV1SMSProvider	./GSM/GSM3SMSService.cpp	/^GSM3ShieldV1SMSProvider theShieldV1SMSProvider;$/;"	v
theShieldV1VoiceProvider	./GSM/GSM3VoiceCallService.cpp	/^GSM3ShieldV1VoiceProvider theShieldV1VoiceProvider;$/;"	v
theShieldV1VoiceProvider	./GSM/GSM3VoiceCallService.cpp	/^GSM3ShieldV1VoiceProvider theShieldV1VoiceProvider;$/;"	v
tick_rate	./Robot_Control/Squawk.cpp	/^static uint16_t tick_rate = 50;$/;"	v	file:
tick_rate	./Robot_Control/Squawk.cpp	/^static uint16_t tick_rate = 50;$/;"	v	file:
tick	./Robot_Control/Squawk.cpp	/^static uint8_t  tick;$/;"	v	file:
tick	./Robot_Control/Squawk.cpp	/^static uint8_t  tick;$/;"	v	file:
ticks	./Servo/Servo.h	/^  unsigned int ticks;$/;"	m	struct:__anon25
ticks	./Servo/Servo.h	/^  unsigned int ticks;$/;"	m	struct:__anon25
ticksToUs	./Servo/Servo.cpp	51;"	d	file:
ticksToUs	./Servo/Servo.cpp	51;"	d	file:
TIMED_OUT	./Ethernet/Dns.cpp	46;"	d	file:
TIMED_OUT	./Ethernet/Dns.cpp	46;"	d	file:
TIMEOUT_CHAR	./WiFi/utility/wifi_spi.h	13;"	d
TIMEOUT_CHAR	./WiFi/utility/wifi_spi.h	13;"	d
_timeout	./Ethernet/Dhcp.h	/^  unsigned long _timeout;$/;"	m	class:DhcpClass
_timeout	./Ethernet/Dhcp.h	/^  unsigned long _timeout;$/;"	m	class:DhcpClass
TIMEOUT	./Ethernet/utility/w5100.h	/^  static const uint8_t TIMEOUT = 0x08;$/;"	m	class:SnIR
TIMEOUT	./Ethernet/utility/w5100.h	/^  static const uint8_t TIMEOUT = 0x08;$/;"	m	class:SnIR
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	t	typeref:enum:__anon20
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	t	typeref:enum:__anon20
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;                  $/;"	t	typeref:enum:__anon23
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;                  $/;"	t	typeref:enum:__anon23
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	t	typeref:enum:__anon21
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	t	typeref:enum:__anon21
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	t	typeref:enum:__anon22
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	t	typeref:enum:__anon22
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	t	typeref:enum:__anon19
timer16_Sequence_t	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	t	typeref:enum:__anon19
Timer1Service	./Servo/Servo.cpp	/^void Timer1Service() $/;"	f
Timer1Service	./Servo/Servo.cpp	/^void Timer1Service() $/;"	f
_timer1	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon20
_timer1	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon20
_timer1	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;                  $/;"	e	enum:__anon23
_timer1	./Servo/Servo.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;                  $/;"	e	enum:__anon23
_timer1	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon21
_timer1	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon21
_timer1	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon22
_timer1	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon22
_timer1	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
_timer1	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
Timer3Service	./Servo/Servo.cpp	/^void Timer3Service() $/;"	f
Timer3Service	./Servo/Servo.cpp	/^void Timer3Service() $/;"	f
_timer3	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon21
_timer3	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon21
_timer3	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon22
_timer3	./Servo/Servo.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon22
_timer3	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
_timer3	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
_timer4	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
_timer4	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
_timer5	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
_timer5	./Servo/Servo.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon19
TimerInitalized	./AFMotor/AFMotor.h	/^    uint8_t TimerInitalized;$/;"	m	class:AFMotorController
TimerInitalized	./AFMotor/AFMotor.h	/^    uint8_t TimerInitalized;$/;"	m	class:AFMotorController
timerOffset	./Ethernet/Dhcp.h	/^	timerOffset		=	2,$/;"	e	enum:__anon14
timerOffset	./Ethernet/Dhcp.h	/^	timerOffset		=	2,$/;"	e	enum:__anon14
timestamp	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::timestamp(uint8_t flags, uint16_t year, uint8_t month,$/;"	f	class:Fat16
timestamp	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::timestamp(uint8_t flags, uint16_t year, uint8_t month,$/;"	f	class:Fat16
timestamp	./SD/utility/SdFile.cpp	/^uint8_t SdFile::timestamp(uint8_t flags, uint16_t year, uint8_t month,$/;"	f	class:SdFile
timestamp	./SD/utility/SdFile.cpp	/^uint8_t SdFile::timestamp(uint8_t flags, uint16_t year, uint8_t month,$/;"	f	class:SdFile
time	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSTime time;$/;"	m	class:TinyGPSPlus
time	./TinyGPSPlus/TinyGPS++.h	/^  TinyGPSTime time;$/;"	m	class:TinyGPSPlus
time	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t time, newTime;$/;"	m	struct:TinyGPSTime
time	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t time, newTime;$/;"	m	struct:TinyGPSTime
_time	./TinyGPS/TinyGPS.h	/^  unsigned long _time, _new_time;$/;"	m	class:TinyGPS
_time	./TinyGPS/TinyGPS.h	/^  unsigned long _time, _new_time;$/;"	m	class:TinyGPS
TIME_WAIT	./Ethernet/utility/w5100.h	/^  static const uint8_t TIME_WAIT   = 0x1B;$/;"	m	class:SnSR
TIME_WAIT	./Ethernet/utility/w5100.h	/^  static const uint8_t TIME_WAIT   = 0x1B;$/;"	m	class:SnSR
TIME_WAIT	./WiFi/utility/wifi_spi.h	/^  TIME_WAIT   = 10$/;"	e	enum:wl_tcp_state
TIME_WAIT	./WiFi/utility/wifi_spi.h	/^  TIME_WAIT   = 10$/;"	e	enum:wl_tcp_state
tIntParam	./WiFi/utility/wifi_spi.h	/^}tIntParam;$/;"	t	typeref:struct:__anon11
tIntParam	./WiFi/utility/wifi_spi.h	/^}tIntParam;$/;"	t	typeref:struct:__anon11
TinyGPSAltitude	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSAltitude : TinyGPSDecimal$/;"	s
TinyGPSAltitude	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSAltitude : TinyGPSDecimal$/;"	s
TinyGPSCourse	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSCourse : public TinyGPSDecimal$/;"	s
TinyGPSCourse	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSCourse : public TinyGPSDecimal$/;"	s
TinyGPSCustom	./TinyGPSPlus/TinyGPS++.cpp	/^TinyGPSCustom::TinyGPSCustom(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber)$/;"	f	class:TinyGPSCustom
TinyGPSCustom	./TinyGPSPlus/TinyGPS++.cpp	/^TinyGPSCustom::TinyGPSCustom(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber)$/;"	f	class:TinyGPSCustom
TinyGPSCustom	./TinyGPSPlus/TinyGPS++.h	/^class TinyGPSCustom$/;"	c
TinyGPSCustom	./TinyGPSPlus/TinyGPS++.h	/^class TinyGPSCustom$/;"	c
TinyGPSCustom	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSCustom() {};$/;"	f	class:TinyGPSCustom
TinyGPSCustom	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSCustom() {};$/;"	f	class:TinyGPSCustom
TinyGPSDate	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSDate$/;"	s
TinyGPSDate	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSDate$/;"	s
TinyGPSDate	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSDate() : valid(false), updated(false), date(0)$/;"	f	struct:TinyGPSDate
TinyGPSDate	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSDate() : valid(false), updated(false), date(0)$/;"	f	struct:TinyGPSDate
TinyGPSDecimal	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSDecimal$/;"	s
TinyGPSDecimal	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSDecimal$/;"	s
TinyGPSDecimal	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSDecimal() : valid(false), updated(false), val(0)$/;"	f	struct:TinyGPSDecimal
TinyGPSDecimal	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSDecimal() : valid(false), updated(false), val(0)$/;"	f	struct:TinyGPSDecimal
TinyGPS_h	./TinyGPS/TinyGPS.h	25;"	d
TinyGPS_h	./TinyGPS/TinyGPS.h	25;"	d
TinyGPSInteger	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSInteger$/;"	s
TinyGPSInteger	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSInteger$/;"	s
TinyGPSInteger	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSInteger() : valid(false), updated(false), val(0)$/;"	f	struct:TinyGPSInteger
TinyGPSInteger	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSInteger() : valid(false), updated(false), val(0)$/;"	f	struct:TinyGPSInteger
TinyGPSLocation	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSLocation$/;"	s
TinyGPSLocation	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSLocation$/;"	s
TinyGPSLocation	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSLocation() : valid(false), updated(false)$/;"	f	struct:TinyGPSLocation
TinyGPSLocation	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSLocation() : valid(false), updated(false)$/;"	f	struct:TinyGPSLocation
__TinyGPSPlus_h	./TinyGPSPlus/TinyGPS++.h	25;"	d
__TinyGPSPlus_h	./TinyGPSPlus/TinyGPS++.h	25;"	d
TinyGPSPlus	./TinyGPSPlus/TinyGPS++.cpp	/^TinyGPSPlus::TinyGPSPlus()$/;"	f	class:TinyGPSPlus
TinyGPSPlus	./TinyGPSPlus/TinyGPS++.cpp	/^TinyGPSPlus::TinyGPSPlus()$/;"	f	class:TinyGPSPlus
TinyGPSPlus	./TinyGPSPlus/TinyGPS++.h	/^class TinyGPSPlus$/;"	c
TinyGPSPlus	./TinyGPSPlus/TinyGPS++.h	/^class TinyGPSPlus$/;"	c
TinyGPSSpeed	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSSpeed : TinyGPSDecimal$/;"	s
TinyGPSSpeed	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSSpeed : TinyGPSDecimal$/;"	s
TinyGPSTime	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSTime$/;"	s
TinyGPSTime	./TinyGPSPlus/TinyGPS++.h	/^struct TinyGPSTime$/;"	s
TinyGPSTime	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSTime() : valid(false), updated(false), time(0)$/;"	f	struct:TinyGPSTime
TinyGPSTime	./TinyGPSPlus/TinyGPS++.h	/^   TinyGPSTime() : valid(false), updated(false), time(0)$/;"	f	struct:TinyGPSTime
TinyGPS	./TinyGPS/TinyGPS.cpp	/^TinyGPS::TinyGPS()$/;"	f	class:TinyGPS
TinyGPS	./TinyGPS/TinyGPS.cpp	/^TinyGPS::TinyGPS()$/;"	f	class:TinyGPS
TinyGPS	./TinyGPS/TinyGPS.h	/^class TinyGPS$/;"	c
TinyGPS	./TinyGPS/TinyGPS.h	/^class TinyGPS$/;"	c
TK0	./Robot_Control/ArduinoRobot.h	79;"	d
TK0	./Robot_Control/ArduinoRobot.h	79;"	d
TK1	./Robot_Control/ArduinoRobot.h	80;"	d
TK1	./Robot_Control/ArduinoRobot.h	80;"	d
TK2	./Robot_Control/ArduinoRobot.h	81;"	d
TK2	./Robot_Control/ArduinoRobot.h	81;"	d
TK3	./Robot_Control/ArduinoRobot.h	82;"	d
TK3	./Robot_Control/ArduinoRobot.h	82;"	d
TK4	./Robot_Control/ArduinoRobot.h	83;"	d
TK4	./Robot_Control/ArduinoRobot.h	83;"	d
TK5	./Robot_Control/ArduinoRobot.h	84;"	d
TK5	./Robot_Control/ArduinoRobot.h	84;"	d
TK6	./Robot_Control/ArduinoRobot.h	85;"	d
TK6	./Robot_Control/ArduinoRobot.h	85;"	d
TK7	./Robot_Control/ArduinoRobot.h	86;"	d
TK7	./Robot_Control/ArduinoRobot.h	86;"	d
tLongParam	./WiFi/utility/wifi_spi.h	/^}tLongParam;$/;"	t	typeref:struct:__anon10
tLongParam	./WiFi/utility/wifi_spi.h	/^}tLongParam;$/;"	t	typeref:struct:__anon10
tmp_write_protect	./Robot_Control/SdInfo.h	/^  unsigned tmp_write_protect : 1;$/;"	m	struct:CSD
tmp_write_protect	./Robot_Control/SdInfo.h	/^  unsigned tmp_write_protect : 1;$/;"	m	struct:CSD
tmp_write_protect	./SD/utility/SdInfo.h	/^  unsigned tmp_write_protect : 1;$/;"	m	struct:CSDV1
tmp_write_protect	./SD/utility/SdInfo.h	/^  unsigned tmp_write_protect : 1;$/;"	m	struct:CSDV1
tmp_write_protect	./SD/utility/SdInfo.h	/^  unsigned tmp_write_protect : 1;$/;"	m	struct:CSDV2
tmp_write_protect	./SD/utility/SdInfo.h	/^  unsigned tmp_write_protect : 1;$/;"	m	struct:CSDV2
TOGGLE_TRIGGER	./WiFi/utility/debug.h	65;"	d
TOGGLE_TRIGGER	./WiFi/utility/debug.h	65;"	d
TOGGLE_TRIGGER	./WiFi/utility/debug.h	74;"	d
TOGGLE_TRIGGER	./WiFi/utility/debug.h	74;"	d
tone	./Esplora/Esplora.cpp	/^void _Esplora::tone(unsigned int freq) {$/;"	f	class:_Esplora
tone	./Esplora/Esplora.cpp	/^void _Esplora::tone(unsigned int freq) {$/;"	f	class:_Esplora
tone	./Esplora/Esplora.cpp	/^void _Esplora::tone(unsigned int freq, unsigned long duration) {$/;"	f	class:_Esplora
tone	./Esplora/Esplora.cpp	/^void _Esplora::tone(unsigned int freq, unsigned long duration) {$/;"	f	class:_Esplora
_topDPortToAPort	./Robot_Control/Sensors.cpp	/^uint8_t RobotControl::_topDPortToAPort(uint8_t port){$/;"	f	class:RobotControl
_topDPortToAPort	./Robot_Control/Sensors.cpp	/^uint8_t RobotControl::_topDPortToAPort(uint8_t port){$/;"	f	class:RobotControl
top	./Robot_Control/utility/VirtualKeyboard.h	/^		uint8_t top;$/;"	m	class:VirtualKeyboard
top	./Robot_Control/utility/VirtualKeyboard.h	/^		uint8_t top;$/;"	m	class:VirtualKeyboard
TOTAL_ANALOG_PINS	./Firmata/Boards.h	134;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	134;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	137;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	137;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	169;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	169;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	186;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	186;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	202;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	202;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	218;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	218;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	234;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	234;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	250;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	250;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	266;"	d
TOTAL_ANALOG_PINS	./Firmata/Boards.h	266;"	d
TOTAL_PIN_MODES	./Firmata/Firmata.h	75;"	d
TOTAL_PIN_MODES	./Firmata/Firmata.h	75;"	d
TOTAL_PINS	./Firmata/Boards.h	135;"	d
TOTAL_PINS	./Firmata/Boards.h	135;"	d
TOTAL_PINS	./Firmata/Boards.h	138;"	d
TOTAL_PINS	./Firmata/Boards.h	138;"	d
TOTAL_PINS	./Firmata/Boards.h	170;"	d
TOTAL_PINS	./Firmata/Boards.h	170;"	d
TOTAL_PINS	./Firmata/Boards.h	187;"	d
TOTAL_PINS	./Firmata/Boards.h	187;"	d
TOTAL_PINS	./Firmata/Boards.h	203;"	d
TOTAL_PINS	./Firmata/Boards.h	203;"	d
TOTAL_PINS	./Firmata/Boards.h	219;"	d
TOTAL_PINS	./Firmata/Boards.h	219;"	d
TOTAL_PINS	./Firmata/Boards.h	235;"	d
TOTAL_PINS	./Firmata/Boards.h	235;"	d
TOTAL_PINS	./Firmata/Boards.h	251;"	d
TOTAL_PINS	./Firmata/Boards.h	251;"	d
TOTAL_PINS	./Firmata/Boards.h	267;"	d
TOTAL_PINS	./Firmata/Boards.h	267;"	d
TOTAL_PORTS	./Firmata/Boards.h	361;"	d
TOTAL_PORTS	./Firmata/Boards.h	361;"	d
totalSectors16	./Robot_Control/FatStructs.h	/^  uint16_t totalSectors16;$/;"	m	struct:biosParmBlock
totalSectors16	./Robot_Control/FatStructs.h	/^  uint16_t totalSectors16;$/;"	m	struct:biosParmBlock
totalSectors16	./SD/utility/FatStructs.h	/^  uint16_t totalSectors16;$/;"	m	struct:biosParmBlock
totalSectors16	./SD/utility/FatStructs.h	/^  uint16_t totalSectors16;$/;"	m	struct:biosParmBlock
totalSectors32	./Robot_Control/FatStructs.h	/^  uint32_t totalSectors32;$/;"	m	struct:biosParmBlock
totalSectors32	./Robot_Control/FatStructs.h	/^  uint32_t totalSectors32;$/;"	m	struct:biosParmBlock
totalSectors32	./SD/utility/FatStructs.h	/^  uint32_t totalSectors32;$/;"	m	struct:biosParmBlock
totalSectors32	./SD/utility/FatStructs.h	/^  uint32_t totalSectors32;$/;"	m	struct:biosParmBlock
totalSectors	./Robot_Control/FatStructs.h	/^  uint32_t totalSectors;$/;"	m	struct:partitionTable
totalSectors	./Robot_Control/FatStructs.h	/^  uint32_t totalSectors;$/;"	m	struct:partitionTable
totalSectors	./SD/utility/FatStructs.h	/^  uint32_t totalSectors;$/;"	m	struct:partitionTable
totalSectors	./SD/utility/FatStructs.h	/^  uint32_t totalSectors;$/;"	m	struct:partitionTable
__TOUTAT__	./GSM/GSM3ShieldV1AccessProvider.cpp	7;"	d	file:
__TOUTAT__	./GSM/GSM3ShieldV1AccessProvider.cpp	7;"	d	file:
__TOUTAT__	./GSM/GSM3ShieldV1.cpp	42;"	d	file:
__TOUTAT__	./GSM/GSM3ShieldV1.cpp	42;"	d	file:
__TOUTBEGINWRITE__	./GSM/GSM3MobileClientService.cpp	47;"	d	file:
__TOUTBEGINWRITE__	./GSM/GSM3MobileClientService.cpp	47;"	d	file:
__TOUTCALL__	./GSM/GSM3ShieldV1.cpp	44;"	d	file:
__TOUTCALL__	./GSM/GSM3ShieldV1.cpp	44;"	d	file:
__TOUTFLUSH__	./GSM/GSM3ShieldV1MultiClientProvider.cpp	6;"	d	file:
__TOUTFLUSH__	./GSM/GSM3ShieldV1MultiClientProvider.cpp	6;"	d	file:
__TOUTGPRS__	./GSM/GSM3ShieldV1.cpp	45;"	d	file:
__TOUTGPRS__	./GSM/GSM3ShieldV1.cpp	45;"	d	file:
__TOUT__	./GSM/GSM3SMSService.cpp	43;"	d	file:
__TOUT__	./GSM/GSM3SMSService.cpp	43;"	d	file:
__TOUT__	./GSM/GSM3VoiceCallService.cpp	43;"	d	file:
__TOUT__	./GSM/GSM3VoiceCallService.cpp	43;"	d	file:
__TOUTLOCALCOMS__	./GSM/GSM3ShieldV1.cpp	39;"	d	file:
__TOUTLOCALCOMS__	./GSM/GSM3ShieldV1.cpp	39;"	d	file:
__TOUTMODEMCONFIGURATION__	./GSM/GSM3ShieldV1AccessProvider.cpp	6;"	d	file:
__TOUTMODEMCONFIGURATION__	./GSM/GSM3ShieldV1AccessProvider.cpp	6;"	d	file:
__TOUTMODEMCONFIGURATION__	./GSM/GSM3ShieldV1.cpp	41;"	d	file:
__TOUTMODEMCONFIGURATION__	./GSM/GSM3ShieldV1.cpp	41;"	d	file:
__TOUTSERVER__	./GSM/GSM3MobileServerService.cpp	39;"	d	file:
__TOUTSERVER__	./GSM/GSM3MobileServerService.cpp	39;"	d	file:
__TOUTSHUTDOWN__	./GSM/GSM3ShieldV1AccessProvider.cpp	5;"	d	file:
__TOUTSHUTDOWN__	./GSM/GSM3ShieldV1AccessProvider.cpp	5;"	d	file:
__TOUTSHUTDOWN__	./GSM/GSM3ShieldV1.cpp	40;"	d	file:
__TOUTSHUTDOWN__	./GSM/GSM3ShieldV1.cpp	40;"	d	file:
__TOUTSMS__	./GSM/GSM3ShieldV1.cpp	43;"	d	file:
__TOUTSMS__	./GSM/GSM3ShieldV1.cpp	43;"	d	file:
tParam	./WiFi/utility/wifi_spi.h	/^}tParam;$/;"	t	typeref:struct:__anon5
tParam	./WiFi/utility/wifi_spi.h	/^}tParam;$/;"	t	typeref:struct:__anon5
tProtMode	./WiFi/utility/server_drv.h	/^typedef enum eProtMode {TCP_MODE, UDP_MODE}tProtMode;$/;"	t	typeref:enum:eProtMode
tProtMode	./WiFi/utility/server_drv.h	/^typedef enum eProtMode {TCP_MODE, UDP_MODE}tProtMode;$/;"	t	typeref:enum:eProtMode
trace	./GSM/GSM3ShieldV1DirectModemProvider.h	/^			bool trace;$/;"	m	class:GSM3ShieldV1DirectModemProvider
trace	./GSM/GSM3ShieldV1DirectModemProvider.h	/^			bool trace;$/;"	m	class:GSM3ShieldV1DirectModemProvider
transfer	./Robot_Control/SPI.h	/^byte SPIClass::transfer(byte _data) {$/;"	f	class:SPIClass
transfer	./Robot_Control/SPI.h	/^byte SPIClass::transfer(byte _data) {$/;"	f	class:SPIClass
transfer	./SPI/SPI.h	/^byte SPIClass::transfer(byte _data) {$/;"	f	class:SPIClass
transfer	./SPI/SPI.h	/^byte SPIClass::transfer(byte _data) {$/;"	f	class:SPIClass
_transmitBitMask	./GSM/GSM3SoftSerial.h	/^		uint8_t _transmitBitMask;$/;"	m	class:GSM3SoftSerial
_transmitBitMask	./GSM/GSM3SoftSerial.h	/^		uint8_t _transmitBitMask;$/;"	m	class:GSM3SoftSerial
_transmitBitMask	./SoftwareSerial/SoftwareSerial.h	/^  uint8_t _transmitBitMask;$/;"	m	class:SoftwareSerial
_transmitBitMask	./SoftwareSerial/SoftwareSerial.h	/^  uint8_t _transmitBitMask;$/;"	m	class:SoftwareSerial
_transmitPortRegister	./GSM/GSM3SoftSerial.h	/^		volatile uint8_t *_transmitPortRegister;$/;"	m	class:GSM3SoftSerial
_transmitPortRegister	./GSM/GSM3SoftSerial.h	/^		volatile uint8_t *_transmitPortRegister;$/;"	m	class:GSM3SoftSerial
_transmitPortRegister	./SoftwareSerial/SoftwareSerial.h	/^  volatile uint8_t *_transmitPortRegister;$/;"	m	class:SoftwareSerial
_transmitPortRegister	./SoftwareSerial/SoftwareSerial.h	/^  volatile uint8_t *_transmitPortRegister;$/;"	m	class:SoftwareSerial
transmitting	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::transmitting = 0;$/;"	m	class:TwoWire	file:
transmitting	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::transmitting = 0;$/;"	m	class:TwoWire	file:
transmitting	./Robot_Control/Wire.h	/^    static uint8_t transmitting;$/;"	m	class:TwoWire
transmitting	./Robot_Control/Wire.h	/^    static uint8_t transmitting;$/;"	m	class:TwoWire
transmitting	./Wire/Wire.cpp	/^uint8_t TwoWire::transmitting = 0;$/;"	m	class:TwoWire	file:
transmitting	./Wire/Wire.cpp	/^uint8_t TwoWire::transmitting = 0;$/;"	m	class:TwoWire	file:
transmitting	./Wire/Wire.h	/^    static uint8_t transmitting;$/;"	m	class:TwoWire
transmitting	./Wire/Wire.h	/^    static uint8_t transmitting;$/;"	m	class:TwoWire
TRANSPARENT_CONNECTED	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
TRANSPARENT_CONNECTED	./GSM/GSM3MobileAccessProvider.h	/^enum GSM3_NetworkStatus_t { ERROR, IDLE, CONNECTING, GSM_READY, GPRS_READY, TRANSPARENT_CONNECTED};$/;"	e	enum:GSM3_NetworkStatus_t
tran_speed	./Robot_Control/SdInfo.h	/^  uint8_t tran_speed;$/;"	m	struct:CSD
tran_speed	./Robot_Control/SdInfo.h	/^  uint8_t tran_speed;$/;"	m	struct:CSD
tran_speed	./SD/utility/SdInfo.h	/^  uint8_t tran_speed;$/;"	m	struct:CSDV1
tran_speed	./SD/utility/SdInfo.h	/^  uint8_t tran_speed;$/;"	m	struct:CSDV1
tran_speed	./SD/utility/SdInfo.h	/^  uint8_t tran_speed;$/;"	m	struct:CSDV2
tran_speed	./SD/utility/SdInfo.h	/^  uint8_t tran_speed;$/;"	m	struct:CSDV2
trem	./Robot_Control/Squawk.cpp	/^  pto_t     trem;$/;"	m	struct:__anon18	file:
trem	./Robot_Control/Squawk.cpp	/^  pto_t     trem;$/;"	m	struct:__anon18	file:
triangle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::triangle(int16_t x1, int16_t y1, int16_t x2, int16_t y2, int16_t x3, int16_t y3) {$/;"	f	class:Adafruit_GFX
triangle	./Robot_Control/Adafruit_GFX.cpp	/^void Adafruit_GFX::triangle(int16_t x1, int16_t y1, int16_t x2, int16_t y2, int16_t x3, int16_t y3) {$/;"	f	class:Adafruit_GFX
triangle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::triangle(int16_t x1, int16_t y1, int16_t x2, int16_t y2, int16_t x3, int16_t y3) {$/;"	f	class:Adafruit_GFX
triangle	./TFT/utility/Adafruit_GFX.cpp	/^void Adafruit_GFX::triangle(int16_t x1, int16_t y1, int16_t x2, int16_t y2, int16_t x3, int16_t y3) {$/;"	f	class:Adafruit_GFX
TRIM_DURATION	./Servo/Servo.cpp	54;"	d	file:
TRIM_DURATION	./Servo/Servo.cpp	54;"	d	file:
trimRead	./Robot_Control/Sensors.cpp	/^int RobotControl::trimRead(){$/;"	f	class:RobotControl
trimRead	./Robot_Control/Sensors.cpp	/^int RobotControl::trimRead(){$/;"	f	class:RobotControl
TRUNCATED	./Ethernet/Dns.cpp	48;"	d	file:
TRUNCATED	./Ethernet/Dns.cpp	48;"	d	file:
truncate	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::truncate(uint32_t length) {$/;"	f	class:Fat16
truncate	./Robot_Control/Fat16.cpp	/^uint8_t Fat16::truncate(uint32_t length) {$/;"	f	class:Fat16
truncate	./SD/utility/SdFile.cpp	/^uint8_t SdFile::truncate(uint32_t length) {$/;"	f	class:SdFile
truncate	./SD/utility/SdFile.cpp	/^uint8_t SdFile::truncate(uint32_t length) {$/;"	f	class:SdFile
TRUNCATION_FLAG	./Ethernet/Dns.cpp	28;"	d	file:
TRUNCATION_FLAG	./Ethernet/Dns.cpp	28;"	d	file:
tSpiHdr	./WiFi/utility/wifi_spi.h	/^}tSpiHdr;$/;"	t	typeref:struct:__anon9
tSpiHdr	./WiFi/utility/wifi_spi.h	/^}tSpiHdr;$/;"	t	typeref:struct:__anon9
tSpiMsgData	./WiFi/utility/wifi_spi.h	/^}tSpiMsgData;$/;"	t	typeref:struct:__anon8
tSpiMsgData	./WiFi/utility/wifi_spi.h	/^}tSpiMsgData;$/;"	t	typeref:struct:__anon8
tSpiMsg	./WiFi/utility/wifi_spi.h	/^}tSpiMsg;$/;"	t	typeref:struct:__anon7
tSpiMsg	./WiFi/utility/wifi_spi.h	/^}tSpiMsg;$/;"	t	typeref:struct:__anon7
TTL_SIZE	./Ethernet/Dns.cpp	19;"	d	file:
TTL_SIZE	./Ethernet/Dns.cpp	19;"	d	file:
tunedDelay	./GSM/GSM3SoftSerial.cpp	/^\/*inline*\/ void GSM3SoftSerial::tunedDelay(uint16_t delay) { $/;"	f	class:GSM3SoftSerial
tunedDelay	./GSM/GSM3SoftSerial.cpp	/^\/*inline*\/ void GSM3SoftSerial::tunedDelay(uint16_t delay) { $/;"	f	class:GSM3SoftSerial
tunedDelay	./SoftwareSerial/SoftwareSerial.cpp	/^inline void SoftwareSerial::tunedDelay(uint16_t delay) { $/;"	f	class:SoftwareSerial
tunedDelay	./SoftwareSerial/SoftwareSerial.cpp	/^inline void SoftwareSerial::tunedDelay(uint16_t delay) { $/;"	f	class:SoftwareSerial
tune	./Robot_Control/Squawk.cpp	/^void SquawkSynth::tune(float new_tuning) {$/;"	f	class:SquawkSynth
tune	./Robot_Control/Squawk.cpp	/^void SquawkSynth::tune(float new_tuning) {$/;"	f	class:SquawkSynth
tuneWrite	./Robot_Control/Melody.cpp	/^void RobotControl::tuneWrite(float tune){$/;"	f	class:RobotControl
tuneWrite	./Robot_Control/Melody.cpp	/^void RobotControl::tuneWrite(float tune){$/;"	f	class:RobotControl
tuning_long	./Robot_Control/Squawk.cpp	/^static uint32_t tuning_long;$/;"	v	file:
tuning_long	./Robot_Control/Squawk.cpp	/^static uint32_t tuning_long;$/;"	v	file:
tuning	./Robot_Control/Squawk.cpp	/^static float    tuning = 1.0;$/;"	v	file:
tuning	./Robot_Control/Squawk.cpp	/^static float    tuning = 1.0;$/;"	v	file:
TurnOn	./GSM_Shield/GSM_Shield.cpp	/^void GSM::TurnOn(long baud_rate)$/;"	f	class:GSM
TurnOn	./GSM_Shield/GSM_Shield.cpp	/^void GSM::TurnOn(long baud_rate)$/;"	f	class:GSM
TWI_BUFFER_LENGTH	./Robot_Control/utility/twi.h	32;"	d
TWI_BUFFER_LENGTH	./Robot_Control/utility/twi.h	32;"	d
TWI_BUFFER_LENGTH	./Wire/utility/twi.h	32;"	d
TWI_BUFFER_LENGTH	./Wire/utility/twi.h	32;"	d
TWI_FREQ	./Robot_Control/utility/twi.h	28;"	d
TWI_FREQ	./Robot_Control/utility/twi.h	28;"	d
TWI_FREQ	./Wire/utility/twi.h	28;"	d
TWI_FREQ	./Wire/utility/twi.h	28;"	d
twi_h	./Robot_Control/utility/twi.h	21;"	d
twi_h	./Robot_Control/utility/twi.h	21;"	d
twi_h	./Wire/utility/twi.h	21;"	d
twi_h	./Wire/utility/twi.h	21;"	d
TWI_MRX	./Robot_Control/utility/twi.h	36;"	d
TWI_MRX	./Robot_Control/utility/twi.h	36;"	d
TWI_MRX	./Wire/utility/twi.h	36;"	d
TWI_MRX	./Wire/utility/twi.h	36;"	d
TWI_MTX	./Robot_Control/utility/twi.h	37;"	d
TWI_MTX	./Robot_Control/utility/twi.h	37;"	d
TWI_MTX	./Wire/utility/twi.h	37;"	d
TWI_MTX	./Wire/utility/twi.h	37;"	d
TWI_READY	./Robot_Control/utility/twi.h	35;"	d
TWI_READY	./Robot_Control/utility/twi.h	35;"	d
TWI_READY	./Wire/utility/twi.h	35;"	d
TWI_READY	./Wire/utility/twi.h	35;"	d
TWI_SRX	./Robot_Control/utility/twi.h	38;"	d
TWI_SRX	./Robot_Control/utility/twi.h	38;"	d
TWI_SRX	./Wire/utility/twi.h	38;"	d
TWI_SRX	./Wire/utility/twi.h	38;"	d
TWI_STX	./Robot_Control/utility/twi.h	39;"	d
TWI_STX	./Robot_Control/utility/twi.h	39;"	d
TWI_STX	./Wire/utility/twi.h	39;"	d
TWI_STX	./Wire/utility/twi.h	39;"	d
twoSMSinBuffer	./GSM/GSM3ShieldV1SMSProvider.h	/^		bool twoSMSinBuffer; \/\/ To detect if the buffer has more than 1 SMS.$/;"	m	class:GSM3ShieldV1SMSProvider
twoSMSinBuffer	./GSM/GSM3ShieldV1SMSProvider.h	/^		bool twoSMSinBuffer; \/\/ To detect if the buffer has more than 1 SMS.$/;"	m	class:GSM3ShieldV1SMSProvider
TwoWire_h	./Robot_Control/Wire.h	23;"	d
TwoWire_h	./Robot_Control/Wire.h	23;"	d
TwoWire_h	./Wire/Wire.h	23;"	d
TwoWire_h	./Wire/Wire.h	23;"	d
TwoWire	./Robot_Control/Wire.cpp	/^TwoWire::TwoWire()$/;"	f	class:TwoWire
TwoWire	./Robot_Control/Wire.cpp	/^TwoWire::TwoWire()$/;"	f	class:TwoWire
TwoWire	./Robot_Control/Wire.h	/^class TwoWire : public Stream$/;"	c
TwoWire	./Robot_Control/Wire.h	/^class TwoWire : public Stream$/;"	c
TwoWire	./Wire/Wire.cpp	/^TwoWire::TwoWire()$/;"	f	class:TwoWire
TwoWire	./Wire/Wire.cpp	/^TwoWire::TwoWire()$/;"	f	class:TwoWire
TwoWire	./Wire/Wire.h	/^class TwoWire : public Stream$/;"	c
TwoWire	./Wire/Wire.h	/^class TwoWire : public Stream$/;"	c
T_WRITE	./Robot_Control/Fat16.h	/^uint8_t const T_WRITE  = 4;$/;"	v
T_WRITE	./Robot_Control/Fat16.h	/^uint8_t const T_WRITE  = 4;$/;"	v
T_WRITE	./SD/utility/SdFat.h	/^uint8_t const T_WRITE = 4;$/;"	v
T_WRITE	./SD/utility/SdFat.h	/^uint8_t const T_WRITE = 4;$/;"	v
txAddress	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::txAddress = 0;$/;"	m	class:TwoWire	file:
txAddress	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::txAddress = 0;$/;"	m	class:TwoWire	file:
txAddress	./Robot_Control/Wire.h	/^    static uint8_t txAddress;$/;"	m	class:TwoWire
txAddress	./Robot_Control/Wire.h	/^    static uint8_t txAddress;$/;"	m	class:TwoWire
txAddress	./Wire/Wire.cpp	/^uint8_t TwoWire::txAddress = 0;$/;"	m	class:TwoWire	file:
txAddress	./Wire/Wire.cpp	/^uint8_t TwoWire::txAddress = 0;$/;"	m	class:TwoWire	file:
txAddress	./Wire/Wire.h	/^    static uint8_t txAddress;$/;"	m	class:TwoWire
txAddress	./Wire/Wire.h	/^    static uint8_t txAddress;$/;"	m	class:TwoWire
TXBUF_BASE	./Ethernet/utility/w5100.cpp	23;"	d	file:
TXBUF_BASE	./Ethernet/utility/w5100.cpp	23;"	d	file:
TX_BUF	./Ethernet/utility/w5100.cpp	20;"	d	file:
TX_BUF	./Ethernet/utility/w5100.cpp	20;"	d	file:
txBufferIndex	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::txBufferIndex = 0;$/;"	m	class:TwoWire	file:
txBufferIndex	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::txBufferIndex = 0;$/;"	m	class:TwoWire	file:
txBufferIndex	./Robot_Control/Wire.h	/^    static uint8_t txBufferIndex;$/;"	m	class:TwoWire
txBufferIndex	./Robot_Control/Wire.h	/^    static uint8_t txBufferIndex;$/;"	m	class:TwoWire
txBufferIndex	./Wire/Wire.cpp	/^uint8_t TwoWire::txBufferIndex = 0;$/;"	m	class:TwoWire	file:
txBufferIndex	./Wire/Wire.cpp	/^uint8_t TwoWire::txBufferIndex = 0;$/;"	m	class:TwoWire	file:
txBufferIndex	./Wire/Wire.h	/^    static uint8_t txBufferIndex;$/;"	m	class:TwoWire
txBufferIndex	./Wire/Wire.h	/^    static uint8_t txBufferIndex;$/;"	m	class:TwoWire
txBufferLength	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::txBufferLength = 0;$/;"	m	class:TwoWire	file:
txBufferLength	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::txBufferLength = 0;$/;"	m	class:TwoWire	file:
txBufferLength	./Robot_Control/Wire.h	/^    static uint8_t txBufferLength;$/;"	m	class:TwoWire
txBufferLength	./Robot_Control/Wire.h	/^    static uint8_t txBufferLength;$/;"	m	class:TwoWire
txBufferLength	./Wire/Wire.cpp	/^uint8_t TwoWire::txBufferLength = 0;$/;"	m	class:TwoWire	file:
txBufferLength	./Wire/Wire.cpp	/^uint8_t TwoWire::txBufferLength = 0;$/;"	m	class:TwoWire	file:
txBufferLength	./Wire/Wire.h	/^    static uint8_t txBufferLength;$/;"	m	class:TwoWire
txBufferLength	./Wire/Wire.h	/^    static uint8_t txBufferLength;$/;"	m	class:TwoWire
txBuffer	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::txBuffer[BUFFER_LENGTH];$/;"	m	class:TwoWire	file:
txBuffer	./Robot_Control/Wire.cpp	/^uint8_t TwoWire::txBuffer[BUFFER_LENGTH];$/;"	m	class:TwoWire	file:
txBuffer	./Robot_Control/Wire.h	/^    static uint8_t txBuffer[];$/;"	m	class:TwoWire
txBuffer	./Robot_Control/Wire.h	/^    static uint8_t txBuffer[];$/;"	m	class:TwoWire
txBuffer	./Wire/Wire.cpp	/^uint8_t TwoWire::txBuffer[BUFFER_LENGTH];$/;"	m	class:TwoWire	file:
txBuffer	./Wire/Wire.cpp	/^uint8_t TwoWire::txBuffer[BUFFER_LENGTH];$/;"	m	class:TwoWire	file:
txBuffer	./Wire/Wire.h	/^    static uint8_t txBuffer[];$/;"	m	class:TwoWire
txBuffer	./Wire/Wire.h	/^    static uint8_t txBuffer[];$/;"	m	class:TwoWire
tx_delay	./GSM/GSM3SoftSerial.cpp	/^  unsigned short tx_delay;$/;"	m	struct:_DELAY_TABLE	file:
tx_delay	./GSM/GSM3SoftSerial.cpp	/^  unsigned short tx_delay;$/;"	m	struct:_DELAY_TABLE	file:
_tx_delay	./GSM/GSM3SoftSerial.h	/^		uint16_t _tx_delay;$/;"	m	class:GSM3SoftSerial
_tx_delay	./GSM/GSM3SoftSerial.h	/^		uint16_t _tx_delay;$/;"	m	class:GSM3SoftSerial
tx_delay	./SoftwareSerial/SoftwareSerial.cpp	/^  unsigned short tx_delay;$/;"	m	struct:_DELAY_TABLE	file:
tx_delay	./SoftwareSerial/SoftwareSerial.cpp	/^  unsigned short tx_delay;$/;"	m	struct:_DELAY_TABLE	file:
_tx_delay	./SoftwareSerial/SoftwareSerial.h	/^  uint16_t _tx_delay;$/;"	m	class:SoftwareSerial
_tx_delay	./SoftwareSerial/SoftwareSerial.h	/^  uint16_t _tx_delay;$/;"	m	class:SoftwareSerial
__TXPIN__	./GSM/GSM3SoftSerial.cpp	42;"	d	file:
__TXPIN__	./GSM/GSM3SoftSerial.cpp	42;"	d	file:
__TXPIN__	./GSM/GSM3SoftSerial.cpp	46;"	d	file:
__TXPIN__	./GSM/GSM3SoftSerial.cpp	46;"	d	file:
__TXPIN__	./GSM/GSM3SoftSerial.cpp	50;"	d	file:
__TXPIN__	./GSM/GSM3SoftSerial.cpp	50;"	d	file:
txPin	./GSM_Shield/GSM_Shield.cpp	16;"	d	file:
txPin	./GSM_Shield/GSM_Shield.cpp	16;"	d	file:
tx_pin_write	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::tx_pin_write(uint8_t pin_state)$/;"	f	class:GSM3SoftSerial
tx_pin_write	./GSM/GSM3SoftSerial.cpp	/^void GSM3SoftSerial::tx_pin_write(uint8_t pin_state)$/;"	f	class:GSM3SoftSerial
tx_pin_write	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::tx_pin_write(uint8_t pin_state)$/;"	f	class:SoftwareSerial
tx_pin_write	./SoftwareSerial/SoftwareSerial.cpp	/^void SoftwareSerial::tx_pin_write(uint8_t pin_state)$/;"	f	class:SoftwareSerial
TX_RX_MAX_BUF_SIZE	./Ethernet/utility/w5100.cpp	19;"	d	file:
TX_RX_MAX_BUF_SIZE	./Ethernet/utility/w5100.cpp	19;"	d	file:
TYPE_A	./Ethernet/Dns.cpp	38;"	d	file:
TYPE_A	./Ethernet/Dns.cpp	38;"	d	file:
TYPE_BOTTOM_TK	./Robot_Control/ArduinoRobot.h	76;"	d
TYPE_BOTTOM_TK	./Robot_Control/ArduinoRobot.h	76;"	d
type	./Robot_Control/FatStructs.h	/^  uint8_t  type;$/;"	m	struct:partitionTable
type	./Robot_Control/FatStructs.h	/^  uint8_t  type;$/;"	m	struct:partitionTable
type	./SD/utility/FatStructs.h	/^  uint8_t  type;$/;"	m	struct:partitionTable
type	./SD/utility/FatStructs.h	/^  uint8_t  type;$/;"	m	struct:partitionTable
type_	./SD/utility/Sd2Card.h	/^  uint8_t type_;$/;"	m	class:Sd2Card
type_	./SD/utility/Sd2Card.h	/^  uint8_t type_;$/;"	m	class:Sd2Card
type	./SD/utility/Sd2Card.h	/^  uint8_t type(void) const {return type_;}$/;"	f	class:Sd2Card
type	./SD/utility/Sd2Card.h	/^  uint8_t type(void) const {return type_;}$/;"	f	class:Sd2Card
type	./SD/utility/Sd2Card.h	/^  void type(uint8_t value) {type_ = value;}$/;"	f	class:Sd2Card
type	./SD/utility/Sd2Card.h	/^  void type(uint8_t value) {type_ = value;}$/;"	f	class:Sd2Card
type_	./SD/utility/SdFat.h	/^  uint8_t   type_;          \/\/ type of file see above for values$/;"	m	class:SdFile
type_	./SD/utility/SdFat.h	/^  uint8_t   type_;          \/\/ type of file see above for values$/;"	m	class:SdFile
type	./SD/utility/SdFat.h	/^  uint8_t type(void) const {return type_;}$/;"	f	class:SdFile
type	./SD/utility/SdFat.h	/^  uint8_t type(void) const {return type_;}$/;"	f	class:SdFile
TYPE_TOP_TKD	./Robot_Control/ArduinoRobot.h	75;"	d
TYPE_TOP_TKD	./Robot_Control/ArduinoRobot.h	75;"	d
TYPE_TOP_TK	./Robot_Control/ArduinoRobot.h	74;"	d
TYPE_TOP_TK	./Robot_Control/ArduinoRobot.h	74;"	d
u_char	./WiFi/utility/socket.h	/^typedef uint8			u_char;		\/**< 8-bit value *\/$/;"	t
u_char	./WiFi/utility/socket.h	/^typedef uint8			u_char;		\/**< 8-bit value *\/$/;"	t
UDP	./Ethernet/utility/w5100.h	/^  static const uint8_t UDP    = 0x02;$/;"	m	class:SnMR
UDP	./Ethernet/utility/w5100.h	/^  static const uint8_t UDP    = 0x02;$/;"	m	class:SnMR
UDP	./Ethernet/utility/w5100.h	/^  static const uint8_t UDP         = 0x22;$/;"	m	class:SnSR
UDP	./Ethernet/utility/w5100.h	/^  static const uint8_t UDP         = 0x22;$/;"	m	class:SnSR
UDP	./Ethernet/utility/w5100.h	/^  static const uint8_t UDP  = 17;$/;"	m	class:IPPROTO
UDP	./Ethernet/utility/w5100.h	/^  static const uint8_t UDP  = 17;$/;"	m	class:IPPROTO
UDP_HEADER_SIZE	./Ethernet/Dns.cpp	17;"	d	file:
UDP_HEADER_SIZE	./Ethernet/Dns.cpp	17;"	d	file:
UDP_MODE	./WiFi/utility/server_drv.h	/^typedef enum eProtMode {TCP_MODE, UDP_MODE}tProtMode;$/;"	e	enum:eProtMode
UDP_MODE	./WiFi/utility/server_drv.h	/^typedef enum eProtMode {TCP_MODE, UDP_MODE}tProtMode;$/;"	e	enum:eProtMode
UDP_SOCKET	./WiFi/utility/socket.h	12;"	d
UDP_SOCKET	./WiFi/utility/socket.h	12;"	d
UDP_TX_PACKET_MAX_SIZE	./Ethernet/EthernetUdp.h	42;"	d
UDP_TX_PACKET_MAX_SIZE	./Ethernet/EthernetUdp.h	42;"	d
UDP_TX_PACKET_MAX_SIZE	./WiFi/WiFiUdp.h	6;"	d
UDP_TX_PACKET_MAX_SIZE	./WiFi/WiFiUdp.h	6;"	d
uint16	./WiFi/utility/socket.h	/^typedef unsigned int uint16;$/;"	t
uint16	./WiFi/utility/socket.h	/^typedef unsigned int uint16;$/;"	t
uint32	./WiFi/utility/socket.h	/^typedef unsigned long uint32;$/;"	t
uint32	./WiFi/utility/socket.h	/^typedef unsigned long uint32;$/;"	t
uint8	./WiFi/utility/socket.h	/^typedef unsigned char uint8;$/;"	t
uint8	./WiFi/utility/socket.h	/^typedef unsigned char uint8;$/;"	t
u_int	./WiFi/utility/socket.h	/^typedef uint16			u_int;		\/**< 16-bit value *\/$/;"	t
u_int	./WiFi/utility/socket.h	/^typedef uint16			u_int;		\/**< 16-bit value *\/$/;"	t
u_long	./WiFi/utility/socket.h	/^typedef uint32			u_long;		\/**< 32-bit value *\/$/;"	t
u_long	./WiFi/utility/socket.h	/^typedef uint32			u_long;		\/**< 32-bit value *\/$/;"	t
UMProvider	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3ShieldV1BaseProvider* UMProvider[UMPROVIDERS];$/;"	m	class:GSM3ShieldV1ModemCore
UMProvider	./GSM/GSM3ShieldV1ModemCore.h	/^		GSM3ShieldV1BaseProvider* UMProvider[UMPROVIDERS];$/;"	m	class:GSM3ShieldV1ModemCore
UMPROVIDERS	./GSM/GSM3ShieldV1ModemCore.h	43;"	d
UMPROVIDERS	./GSM/GSM3ShieldV1ModemCore.h	43;"	d
unbufferedRead	./SD/utility/SdFat.h	/^  uint8_t unbufferedRead(void) const {$/;"	f	class:SdFile
unbufferedRead	./SD/utility/SdFat.h	/^  uint8_t unbufferedRead(void) const {$/;"	f	class:SdFile
UNDEFINED	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
UNDEFINED	./GSM/GSM3ShieldV1BandManagement.h	/^typedef enum GSM3GSMBand {UNDEFINED, EGSM_MODE, DCS_MODE, PCS_MODE, EGSM_DCS_MODE, GSM850_PCS_MODE, GSM850_EGSM_DCS_PCS_MODE};$/;"	e	enum:GSM3GSMBand
unRegisterUMProvider	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::unRegisterUMProvider(GSM3ShieldV1BaseProvider* provider)$/;"	f	class:GSM3ShieldV1ModemCore
unRegisterUMProvider	./GSM/GSM3ShieldV1ModemCore.cpp	/^void GSM3ShieldV1ModemCore::unRegisterUMProvider(GSM3ShieldV1BaseProvider* provider)$/;"	f	class:GSM3ShieldV1ModemCore
UNUSEDOK	./SD/utility/SdFatUtil.h	34;"	d
UNUSEDOK	./SD/utility/SdFatUtil.h	34;"	d
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	class:TinyGPSCustom
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	class:TinyGPSCustom
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSDate
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSDate
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSDecimal
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSDecimal
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSInteger
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSInteger
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSLocation
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSLocation
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSTime
updated	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSTime
updateIR	./Robot_Control/Sensors.cpp	/^void RobotControl::updateIR(){$/;"	f	class:RobotControl
updateIR	./Robot_Control/Sensors.cpp	/^void RobotControl::updateIR(){$/;"	f	class:RobotControl
useFill	./Robot_Control/Adafruit_GFX.h	/^  bool useFill;$/;"	m	class:Adafruit_GFX
useFill	./Robot_Control/Adafruit_GFX.h	/^  bool useFill;$/;"	m	class:Adafruit_GFX
useFill	./TFT/utility/Adafruit_GFX.h	/^  bool useFill;$/;"	m	class:Adafruit_GFX
useFill	./TFT/utility/Adafruit_GFX.h	/^  bool useFill;$/;"	m	class:Adafruit_GFX
user	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		char* user; \/\/ Username for GPRS$/;"	m	class:GSM3ShieldV1DataNetworkProvider
user	./GSM/GSM3ShieldV1DataNetworkProvider.h	/^		char* user; \/\/ Username for GPRS$/;"	m	class:GSM3ShieldV1DataNetworkProvider
userName	./GSM/GSM3ShieldV1.h	/^		char* userName;				\/\/User.$/;"	m	class:GSM3ShieldV1
userName	./GSM/GSM3ShieldV1.h	/^		char* userName;				\/\/User.$/;"	m	class:GSM3ShieldV1
userNameRead	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::userNameRead(char* container){$/;"	f	class:RobotControl
userNameRead	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::userNameRead(char* container){$/;"	f	class:RobotControl
USERNAME	./Robot_Control/utility/RobotTextManager.h	4;"	d
USERNAME	./Robot_Control/utility/RobotTextManager.h	4;"	d
userNameWrite	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::userNameWrite(char* text){$/;"	f	class:RobotControl
userNameWrite	./Robot_Control/ArduinoRobot.h	/^inline void RobotControl::userNameWrite(char* text){$/;"	f	class:RobotControl
user_onReceive	./Robot_Control/Wire.cpp	/^void (*TwoWire::user_onReceive)(int);$/;"	v
user_onReceive	./Robot_Control/Wire.cpp	/^void (*TwoWire::user_onReceive)(int);$/;"	v
user_onReceive	./Robot_Control/Wire.h	/^    static void (*user_onReceive)(int);$/;"	m	class:TwoWire
user_onReceive	./Robot_Control/Wire.h	/^    static void (*user_onReceive)(int);$/;"	m	class:TwoWire
user_onReceive	./Wire/Wire.cpp	/^void (*TwoWire::user_onReceive)(int);$/;"	v
user_onReceive	./Wire/Wire.cpp	/^void (*TwoWire::user_onReceive)(int);$/;"	v
user_onReceive	./Wire/Wire.h	/^    static void (*user_onReceive)(int);$/;"	m	class:TwoWire
user_onReceive	./Wire/Wire.h	/^    static void (*user_onReceive)(int);$/;"	m	class:TwoWire
user_onRequest	./Robot_Control/Wire.cpp	/^void (*TwoWire::user_onRequest)(void);$/;"	v
user_onRequest	./Robot_Control/Wire.cpp	/^void (*TwoWire::user_onRequest)(void);$/;"	v
user_onRequest	./Robot_Control/Wire.h	/^    static void (*user_onRequest)(void);$/;"	m	class:TwoWire
user_onRequest	./Robot_Control/Wire.h	/^    static void (*user_onRequest)(void);$/;"	m	class:TwoWire
user_onRequest	./Wire/Wire.cpp	/^void (*TwoWire::user_onRequest)(void);$/;"	v
user_onRequest	./Wire/Wire.cpp	/^void (*TwoWire::user_onRequest)(void);$/;"	v
user_onRequest	./Wire/Wire.h	/^    static void (*user_onRequest)(void);$/;"	m	class:TwoWire
user_onRequest	./Wire/Wire.h	/^    static void (*user_onRequest)(void);$/;"	m	class:TwoWire
useStroke	./Robot_Control/Adafruit_GFX.h	/^  bool useStroke;$/;"	m	class:Adafruit_GFX
useStroke	./Robot_Control/Adafruit_GFX.h	/^  bool useStroke;$/;"	m	class:Adafruit_GFX
useStroke	./TFT/utility/Adafruit_GFX.h	/^  bool useStroke;$/;"	m	class:Adafruit_GFX
useStroke	./TFT/utility/Adafruit_GFX.h	/^  bool useStroke;$/;"	m	class:Adafruit_GFX
_useTimer1	./Servo/Servo.h	62;"	d
_useTimer1	./Servo/Servo.h	62;"	d
_useTimer1	./Servo/Servo.h	68;"	d
_useTimer1	./Servo/Servo.h	68;"	d
_useTimer1	./Servo/Servo.h	73;"	d
_useTimer1	./Servo/Servo.h	73;"	d
_useTimer1	./Servo/Servo.h	78;"	d
_useTimer1	./Servo/Servo.h	78;"	d
_useTimer1	./Servo/Servo.h	82;"	d
_useTimer1	./Servo/Servo.h	82;"	d
_useTimer3	./Servo/Servo.h	63;"	d
_useTimer3	./Servo/Servo.h	63;"	d
_useTimer3	./Servo/Servo.h	72;"	d
_useTimer3	./Servo/Servo.h	72;"	d
_useTimer3	./Servo/Servo.h	77;"	d
_useTimer3	./Servo/Servo.h	77;"	d
_useTimer4	./Servo/Servo.h	64;"	d
_useTimer4	./Servo/Servo.h	64;"	d
_useTimer5	./Servo/Servo.h	61;"	d
_useTimer5	./Servo/Servo.h	61;"	d
u_short	./WiFi/utility/socket.h	/^typedef uint16			u_short;	\/**< 16-bit value *\/$/;"	t
u_short	./WiFi/utility/socket.h	/^typedef uint16			u_short;	\/**< 16-bit value *\/$/;"	t
usperstep	./AFMotor/AFMotor.h	/^  uint32_t usperstep, steppingcounter;$/;"	m	class:AF_Stepper
usperstep	./AFMotor/AFMotor.h	/^  uint32_t usperstep, steppingcounter;$/;"	m	class:AF_Stepper
usToTicks	./Servo/Servo.cpp	50;"	d	file:
usToTicks	./Servo/Servo.cpp	50;"	d	file:
usuallyZero	./Robot_Control/FatStructs.h	/^  uint16_t usuallyZero;$/;"	m	struct:masterBootRecord
usuallyZero	./Robot_Control/FatStructs.h	/^  uint16_t usuallyZero;$/;"	m	struct:masterBootRecord
usuallyZero	./SD/utility/FatStructs.h	/^  uint16_t usuallyZero;$/;"	m	struct:masterBootRecord
usuallyZero	./SD/utility/FatStructs.h	/^  uint16_t usuallyZero;$/;"	m	struct:masterBootRecord
UTIL_H	./Ethernet/util.h	2;"	d
UTIL_H	./Ethernet/util.h	2;"	d
v1	./SD/utility/SdInfo.h	/^  csd1_t v1;$/;"	m	union:csd_t
v1	./SD/utility/SdInfo.h	/^  csd1_t v1;$/;"	m	union:csd_t
v2	./SD/utility/SdInfo.h	/^  csd2_t v2;$/;"	m	union:csd_t
v2	./SD/utility/SdInfo.h	/^  csd2_t v2;$/;"	m	union:csd_t
_valid	./TFT/utility/PImage.h	/^  bool     _valid;$/;"	m	class:PImage
_valid	./TFT/utility/PImage.h	/^  bool     _valid;$/;"	m	class:PImage
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	class:TinyGPSCustom
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	class:TinyGPSCustom
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSDate
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSDate
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSDecimal
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSDecimal
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSInteger
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSInteger
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSLocation
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSLocation
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSTime
valid	./TinyGPSPlus/TinyGPS++.h	/^   bool valid, updated;$/;"	m	struct:TinyGPSTime
val	./TinyGPSPlus/TinyGPS++.h	/^   int32_t val, newval;$/;"	m	struct:TinyGPSDecimal
val	./TinyGPSPlus/TinyGPS++.h	/^   int32_t val, newval;$/;"	m	struct:TinyGPSDecimal
val	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t val, newval;$/;"	m	struct:TinyGPSInteger
val	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t val, newval;$/;"	m	struct:TinyGPSInteger
value	./TinyGPSPlus/TinyGPS++.h	/^   const char *value()     { updated = false; return buffer; }$/;"	f	class:TinyGPSCustom
value	./TinyGPSPlus/TinyGPS++.h	/^   const char *value()     { updated = false; return buffer; }$/;"	f	class:TinyGPSCustom
value	./TinyGPSPlus/TinyGPS++.h	/^   int32_t value()         { updated = false; return val; }$/;"	f	struct:TinyGPSDecimal
value	./TinyGPSPlus/TinyGPS++.h	/^   int32_t value()         { updated = false; return val; }$/;"	f	struct:TinyGPSDecimal
value	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t value()           { updated = false; return date; }$/;"	f	struct:TinyGPSDate
value	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t value()           { updated = false; return date; }$/;"	f	struct:TinyGPSDate
value	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t value()           { updated = false; return time; }$/;"	f	struct:TinyGPSTime
value	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t value()           { updated = false; return time; }$/;"	f	struct:TinyGPSTime
value	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t value()        { updated = false; return val; }$/;"	f	struct:TinyGPSInteger
value	./TinyGPSPlus/TinyGPS++.h	/^   uint32_t value()        { updated = false; return val; }$/;"	f	struct:TinyGPSInteger
vdd_r_curr_max	./Robot_Control/SdInfo.h	/^  unsigned vdd_r_curr_max : 3;$/;"	m	struct:CSD
vdd_r_curr_max	./Robot_Control/SdInfo.h	/^  unsigned vdd_r_curr_max : 3;$/;"	m	struct:CSD
vdd_r_curr_max	./SD/utility/SdInfo.h	/^  unsigned vdd_r_curr_max : 3;$/;"	m	struct:CSDV1
vdd_r_curr_max	./SD/utility/SdInfo.h	/^  unsigned vdd_r_curr_max : 3;$/;"	m	struct:CSDV1
vdd_r_curr_min	./Robot_Control/SdInfo.h	/^  unsigned vdd_r_curr_min : 3;$/;"	m	struct:CSD
vdd_r_curr_min	./Robot_Control/SdInfo.h	/^  unsigned vdd_r_curr_min : 3;$/;"	m	struct:CSD
vdd_r_curr_min	./SD/utility/SdInfo.h	/^  unsigned vdd_r_curr_min : 3;$/;"	m	struct:CSDV1
vdd_r_curr_min	./SD/utility/SdInfo.h	/^  unsigned vdd_r_curr_min : 3;$/;"	m	struct:CSDV1
vdd_w_cur_max	./Robot_Control/SdInfo.h	/^  unsigned vdd_w_cur_max : 3;$/;"	m	struct:CSD
vdd_w_cur_max	./Robot_Control/SdInfo.h	/^  unsigned vdd_w_cur_max : 3;$/;"	m	struct:CSD
vdd_w_cur_max	./SD/utility/SdInfo.h	/^  unsigned vdd_w_cur_max : 3;$/;"	m	struct:CSDV1
vdd_w_cur_max	./SD/utility/SdInfo.h	/^  unsigned vdd_w_cur_max : 3;$/;"	m	struct:CSDV1
vdd_w_curr_min	./Robot_Control/SdInfo.h	/^  unsigned vdd_w_curr_min : 3;$/;"	m	struct:CSD
vdd_w_curr_min	./Robot_Control/SdInfo.h	/^  unsigned vdd_w_curr_min : 3;$/;"	m	struct:CSD
vdd_w_curr_min	./SD/utility/SdInfo.h	/^  unsigned vdd_w_curr_min : 3;$/;"	m	struct:CSDV1
vdd_w_curr_min	./SD/utility/SdInfo.h	/^  unsigned vdd_w_curr_min : 3;$/;"	m	struct:CSDV1
VERSION_BLINK_PIN	./Firmata/Boards.h	140;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	140;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	155;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	155;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	171;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	171;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	188;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	188;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	204;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	204;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	220;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	220;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	236;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	236;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	252;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	252;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	268;"	d
VERSION_BLINK_PIN	./Firmata/Boards.h	268;"	d
version	./Stepper/Stepper.cpp	/^int Stepper::version(void)$/;"	f	class:Stepper
version	./Stepper/Stepper.cpp	/^int Stepper::version(void)$/;"	f	class:Stepper
vibr	./Robot_Control/Squawk.cpp	/^  pto_t     vibr;$/;"	m	struct:__anon18	file:
vibr	./Robot_Control/Squawk.cpp	/^  pto_t     vibr;$/;"	m	struct:__anon18	file:
vint16	./WiFi/utility/socket.h	/^typedef volatile int vint16;$/;"	t
vint16	./WiFi/utility/socket.h	/^typedef volatile int vint16;$/;"	t
vint32	./WiFi/utility/socket.h	/^typedef volatile long vint32;$/;"	t
vint32	./WiFi/utility/socket.h	/^typedef volatile long vint32;$/;"	t
vint8	./WiFi/utility/socket.h	/^typedef volatile char vint8;$/;"	t
vint8	./WiFi/utility/socket.h	/^typedef volatile char vint8;$/;"	t
VIRTUAL_KEYBOARD_H	./Robot_Control/utility/VirtualKeyboard.h	2;"	d
VIRTUAL_KEYBOARD_H	./Robot_Control/utility/VirtualKeyboard.h	2;"	d
VirtualKeyboard	./Robot_Control/utility/VirtualKeyboard.h	/^class VirtualKeyboard{$/;"	c
VirtualKeyboard	./Robot_Control/utility/VirtualKeyboard.h	/^class VirtualKeyboard{$/;"	c
Vkey	./Robot_Control/utility/VirtualKeyboard.cpp	/^VirtualKeyboard Vkey=VirtualKeyboard();/;"	v
Vkey	./Robot_Control/utility/VirtualKeyboard.cpp	/^VirtualKeyboard Vkey=VirtualKeyboard();/;"	v
voiceCall	./GSM/GSM3MobileMockupProvider.h	/^		inline int voiceCall(const char* number){return 0;};$/;"	f	class:GSM3MobileMockupProvider
voiceCall	./GSM/GSM3MobileMockupProvider.h	/^		inline int voiceCall(const char* number){return 0;};$/;"	f	class:GSM3MobileMockupProvider
VOICECALL	./GSM/GSM3ShieldV1BaseProvider.h	/^	VOICECALL, ANSWERCALL, HANGCALL, RETRIEVECALLINGNUMBER, $/;"	e	enum:GSM3_commandType_e
VOICECALL	./GSM/GSM3ShieldV1BaseProvider.h	/^	VOICECALL, ANSWERCALL, HANGCALL, RETRIEVECALLINGNUMBER, $/;"	e	enum:GSM3_commandType_e
voiceCall	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^int GSM3ShieldV1VoiceProvider::voiceCall(const char* to)$/;"	f	class:GSM3ShieldV1VoiceProvider
voiceCall	./GSM/GSM3ShieldV1VoiceProvider.cpp	/^int GSM3ShieldV1VoiceProvider::voiceCall(const char* to)$/;"	f	class:GSM3ShieldV1VoiceProvider
voiceCall	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::voiceCall(const char* to, unsigned long timeout)$/;"	f	class:GSM3VoiceCallService
voiceCall	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::voiceCall(const char* to, unsigned long timeout)$/;"	f	class:GSM3VoiceCallService
_voiceCallstatus	./GSM/GSM3ShieldV1VoiceProvider.h	/^		GSM3_voiceCall_st _voiceCallstatus; \/\/ The voiceCall status$/;"	m	class:GSM3ShieldV1VoiceProvider
_voiceCallstatus	./GSM/GSM3ShieldV1VoiceProvider.h	/^		GSM3_voiceCall_st _voiceCallstatus; \/\/ The voiceCall status$/;"	m	class:GSM3ShieldV1VoiceProvider
vol	./Robot_Control/Squawk.h	/^  uint8_t  vol;$/;"	m	struct:__anon15
vol	./Robot_Control/Squawk.h	/^  uint8_t  vol;$/;"	m	struct:__anon15
vol_	./SD/utility/SdFat.h	/^  SdVolume* vol_;           \/\/ volume where file is located$/;"	m	class:SdFile
vol_	./SD/utility/SdFat.h	/^  SdVolume* vol_;           \/\/ volume where file is located$/;"	m	class:SdFile
VOLT_BMP	./Robot_Control/ArduinoRobot.h	41;"	d
VOLT_BMP	./Robot_Control/ArduinoRobot.h	41;"	d
volumeInitialized_	./Robot_Control/Fat16.cpp	/^uint8_t  Fat16::volumeInitialized_ = 0;  \/\/ true if FAT16 volume is valid$/;"	m	class:Fat16	file:
volumeInitialized_	./Robot_Control/Fat16.cpp	/^uint8_t  Fat16::volumeInitialized_ = 0;  \/\/ true if FAT16 volume is valid$/;"	m	class:Fat16	file:
volumeInitialized_	./Robot_Control/Fat16.h	/^  static uint8_t  volumeInitialized_;  \/\/ true if volume has been initialized$/;"	m	class:Fat16
volumeInitialized_	./Robot_Control/Fat16.h	/^  static uint8_t  volumeInitialized_;  \/\/ true if volume has been initialized$/;"	m	class:Fat16
volumeLabel	./Robot_Control/FatStructs.h	/^  char     volumeLabel[11];$/;"	m	struct:fat32BootSector
volumeLabel	./Robot_Control/FatStructs.h	/^  char     volumeLabel[11];$/;"	m	struct:fat32BootSector
volumeLabel	./SD/utility/FatStructs.h	/^  char     volumeLabel[11];$/;"	m	struct:fat32BootSector
volumeLabel	./SD/utility/FatStructs.h	/^  char     volumeLabel[11];$/;"	m	struct:fat32BootSector
volume	./Robot_Control/Squawk.cpp	/^  int8_t    volume;$/;"	m	struct:__anon18	file:
volume	./Robot_Control/Squawk.cpp	/^  int8_t    volume;$/;"	m	struct:__anon18	file:
volume	./SD/SD.h	/^  SdVolume volume;$/;"	m	class:SDClass
volume	./SD/SD.h	/^  SdVolume volume;$/;"	m	class:SDClass
volume	./SD/utility/SdFat.h	/^  SdVolume* volume(void) const {return vol_;}$/;"	f	class:SdFile
volume	./SD/utility/SdFat.h	/^  SdVolume* volume(void) const {return vol_;}$/;"	f	class:SdFile
volumeSerialNumber	./Robot_Control/FatStructs.h	/^  uint32_t volumeSerialNumber;$/;"	m	struct:fat32BootSector
volumeSerialNumber	./Robot_Control/FatStructs.h	/^  uint32_t volumeSerialNumber;$/;"	m	struct:fat32BootSector
volumeSerialNumber	./SD/utility/FatStructs.h	/^  uint32_t volumeSerialNumber;$/;"	m	struct:fat32BootSector
volumeSerialNumber	./SD/utility/FatStructs.h	/^  uint32_t volumeSerialNumber;$/;"	m	struct:fat32BootSector
vuint16	./WiFi/utility/socket.h	/^typedef volatile unsigned int vuint16;$/;"	t
vuint16	./WiFi/utility/socket.h	/^typedef volatile unsigned int vuint16;$/;"	t
vuint32	./WiFi/utility/socket.h	/^typedef volatile unsigned long vuint32;$/;"	t
vuint32	./WiFi/utility/socket.h	/^typedef volatile unsigned long vuint32;$/;"	t
vuint8	./WiFi/utility/socket.h	/^typedef volatile unsigned char vuint8;$/;"	t
vuint8	./WiFi/utility/socket.h	/^typedef volatile unsigned char vuint8;$/;"	t
W5100Class	./Ethernet/utility/w5100.h	/^class W5100Class {$/;"	c
W5100Class	./Ethernet/utility/w5100.h	/^class W5100Class {$/;"	c
W5100	./Ethernet/utility/w5100.cpp	/^W5100Class W5100;$/;"	v
W5100	./Ethernet/utility/w5100.cpp	/^W5100Class W5100;$/;"	v
W5100_H_INCLUDED	./Ethernet/utility/w5100.h	11;"	d
W5100_H_INCLUDED	./Ethernet/utility/w5100.h	11;"	d
waitContinue	./Robot_Control/helper.cpp	/^void RobotControl::waitContinue(uint8_t key){$/;"	f	class:RobotControl
waitContinue	./Robot_Control/helper.cpp	/^void RobotControl::waitContinue(uint8_t key){$/;"	f	class:RobotControl
waitForAnswer	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::waitForAnswer()$/;"	f	class:GSM3MobileClientService
waitForAnswer	./GSM/GSM3MobileClientService.cpp	/^int GSM3MobileClientService::waitForAnswer()$/;"	f	class:GSM3MobileClientService
waitForAnswer	./GSM/GSM3MobileServerService.cpp	/^int GSM3MobileServerService::waitForAnswer()$/;"	f	class:GSM3MobileServerService
waitForAnswer	./GSM/GSM3MobileServerService.cpp	/^int GSM3MobileServerService::waitForAnswer()$/;"	f	class:GSM3MobileServerService
waitForAnswerIfNeeded	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::waitForAnswerIfNeeded(int returnvalue)$/;"	f	class:GSM3SMSService
waitForAnswerIfNeeded	./GSM/GSM3SMSService.cpp	/^int GSM3SMSService::waitForAnswerIfNeeded(int returnvalue)$/;"	f	class:GSM3SMSService
waitForAnswerIfNeeded	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::waitForAnswerIfNeeded(int returnvalue)$/;"	f	class:GSM3VoiceCallService
waitForAnswerIfNeeded	./GSM/GSM3VoiceCallService.cpp	/^int GSM3VoiceCallService::waitForAnswerIfNeeded(int returnvalue)$/;"	f	class:GSM3VoiceCallService
waitForData	./Firmata/Firmata.h	/^    byte waitForData; \/\/ this flag says the next serial input will be data$/;"	m	class:FirmataClass
waitForData	./Firmata/Firmata.h	/^    byte waitForData; \/\/ this flag says the next serial input will be data$/;"	m	class:FirmataClass
waitForSlaveReady	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::waitForSlaveReady()$/;"	f	class:SpiDrv
waitForSlaveReady	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::waitForSlaveReady()$/;"	f	class:SpiDrv
WAIT_FOR_SLAVE_SELECT	./WiFi/utility/spi_drv.h	14;"	d
WAIT_FOR_SLAVE_SELECT	./WiFi/utility/spi_drv.h	14;"	d
waitForSlaveSign	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::waitForSlaveSign()$/;"	f	class:SpiDrv
waitForSlaveSign	./WiFi/utility/spi_drv.cpp	/^void SpiDrv::waitForSlaveSign()$/;"	f	class:SpiDrv
waitForToken	./Robot_Control/SdCard.cpp	/^static uint8_t waitForToken(uint8_t token, uint16_t timeoutMillis) {$/;"	f	file:
waitForToken	./Robot_Control/SdCard.cpp	/^static uint8_t waitForToken(uint8_t token, uint16_t timeoutMillis) {$/;"	f	file:
WAITINGANSWER	./GSM/GSM3MobileMockupProvider.h	/^		enum GSM3_modemlinest_e { IDLE, WAITINGANSWER, SENDINGSMS};$/;"	e	enum:GSM3MobileMockupProvider::GSM3_modemlinest_e
WAITINGANSWER	./GSM/GSM3MobileMockupProvider.h	/^		enum GSM3_modemlinest_e { IDLE, WAITINGANSWER, SENDINGSMS};$/;"	e	enum:GSM3MobileMockupProvider::GSM3_modemlinest_e
waitNotBusy	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::waitNotBusy(uint16_t timeoutMillis) {$/;"	f	class:Sd2Card
waitNotBusy	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::waitNotBusy(uint16_t timeoutMillis) {$/;"	f	class:Sd2Card
WaitResp	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::WaitResp(uint16_t start_comm_tmout, uint16_t max_interchar_tmout, $/;"	f	class:GSM
WaitResp	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::WaitResp(uint16_t start_comm_tmout, uint16_t max_interchar_tmout, $/;"	f	class:GSM
WaitResp	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::WaitResp(uint16_t start_comm_tmout, uint16_t max_interchar_tmout)$/;"	f	class:GSM
WaitResp	./GSM_Shield/GSM_Shield.cpp	/^byte GSM::WaitResp(uint16_t start_comm_tmout, uint16_t max_interchar_tmout)$/;"	f	class:GSM
waitResponseCmd	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponseCmd(uint8_t cmd, uint8_t numParam, uint8_t* param, uint8_t* param_len)$/;"	f	class:SpiDrv
waitResponseCmd	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponseCmd(uint8_t cmd, uint8_t numParam, uint8_t* param, uint8_t* param_len)$/;"	f	class:SpiDrv
waitResponseData16	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponseData16(uint8_t cmd, uint8_t* param, uint16_t* param_len)$/;"	f	class:SpiDrv
waitResponseData16	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponseData16(uint8_t cmd, uint8_t* param, uint16_t* param_len)$/;"	f	class:SpiDrv
waitResponseData8	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponseData8(uint8_t cmd, uint8_t* param, uint8_t* param_len)$/;"	f	class:SpiDrv
waitResponseData8	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponseData8(uint8_t cmd, uint8_t* param, uint8_t* param_len)$/;"	f	class:SpiDrv
waitResponseParams	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponseParams(uint8_t cmd, uint8_t numParam, tParam* params)$/;"	f	class:SpiDrv
waitResponseParams	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponseParams(uint8_t cmd, uint8_t numParam, tParam* params)$/;"	f	class:SpiDrv
waitResponse	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponse(uint8_t cmd, uint8_t* numParamRead, uint8_t** params, uint8_t maxNumParams)$/;"	f	class:SpiDrv
waitResponse	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitResponse(uint8_t cmd, uint8_t* numParamRead, uint8_t** params, uint8_t maxNumParams)$/;"	f	class:SpiDrv
waitSlaveReady	./WiFi/utility/spi_drv.cpp	139;"	d	file:
waitSlaveReady	./WiFi/utility/spi_drv.cpp	139;"	d	file:
waitSlaveSignalH	./WiFi/utility/spi_drv.cpp	141;"	d	file:
waitSlaveSignalH	./WiFi/utility/spi_drv.cpp	141;"	d	file:
waitSlaveSignalL	./WiFi/utility/spi_drv.cpp	142;"	d	file:
waitSlaveSignalL	./WiFi/utility/spi_drv.cpp	142;"	d	file:
waitSlaveSign	./WiFi/utility/spi_drv.cpp	140;"	d	file:
waitSlaveSign	./WiFi/utility/spi_drv.cpp	140;"	d	file:
waitSpiChar	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitSpiChar(unsigned char waitChar)$/;"	f	class:SpiDrv
waitSpiChar	./WiFi/utility/spi_drv.cpp	/^int SpiDrv::waitSpiChar(unsigned char waitChar)$/;"	f	class:SpiDrv
waitStartBlock	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::waitStartBlock(void) {$/;"	f	class:Sd2Card
waitStartBlock	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::waitStartBlock(void) {$/;"	f	class:Sd2Card
WAIT_START_CMD	./WiFi/utility/spi_drv.cpp	120;"	d	file:
WAIT_START_CMD	./WiFi/utility/spi_drv.cpp	120;"	d	file:
walkPath	./SD/SD.cpp	/^boolean walkPath(char *filepath, SdFile& parentDir,$/;"	f
walkPath	./SD/SD.cpp	/^boolean walkPath(char *filepath, SdFile& parentDir,$/;"	f
WARN	./WiFi/utility/debug.h	50;"	d
WARN	./WiFi/utility/debug.h	50;"	d
WHITE	./Robot_Control/ArduinoRobot.h	123;"	d
WHITE	./Robot_Control/ArduinoRobot.h	123;"	d
width	./Robot_Control/Adafruit_GFX.cpp	/^int16_t Adafruit_GFX::width(void) { $/;"	f	class:Adafruit_GFX
width	./Robot_Control/Adafruit_GFX.cpp	/^int16_t Adafruit_GFX::width(void) { $/;"	f	class:Adafruit_GFX
_width	./Robot_Control/Adafruit_GFX.h	/^  int16_t  _width, _height; \/\/ dependent on rotation$/;"	m	class:Adafruit_GFX
_width	./Robot_Control/Adafruit_GFX.h	/^  int16_t  _width, _height; \/\/ dependent on rotation$/;"	m	class:Adafruit_GFX
WIDTH	./Robot_Control/Adafruit_GFX.h	/^  int16_t  WIDTH, HEIGHT;   \/\/ this is the 'raw' display w\/h - never changes$/;"	m	class:Adafruit_GFX
WIDTH	./Robot_Control/Adafruit_GFX.h	/^  int16_t  WIDTH, HEIGHT;   \/\/ this is the 'raw' display w\/h - never changes$/;"	m	class:Adafruit_GFX
width	./Robot_Control/ArduinoRobot.h	/^	uint8_t width;$/;"	m	struct:EEPROM_BMP
width	./Robot_Control/ArduinoRobot.h	/^	uint8_t width;$/;"	m	struct:EEPROM_BMP
width	./TFT/utility/Adafruit_GFX.cpp	/^int16_t Adafruit_GFX::width(void) { $/;"	f	class:Adafruit_GFX
width	./TFT/utility/Adafruit_GFX.cpp	/^int16_t Adafruit_GFX::width(void) { $/;"	f	class:Adafruit_GFX
_width	./TFT/utility/Adafruit_GFX.h	/^  int16_t  _width, _height; \/\/ dependent on rotation$/;"	m	class:Adafruit_GFX
_width	./TFT/utility/Adafruit_GFX.h	/^  int16_t  _width, _height; \/\/ dependent on rotation$/;"	m	class:Adafruit_GFX
WIDTH	./TFT/utility/Adafruit_GFX.h	/^  int16_t  WIDTH, HEIGHT;   \/\/ this is the 'raw' display w\/h - never changes$/;"	m	class:Adafruit_GFX
WIDTH	./TFT/utility/Adafruit_GFX.h	/^  int16_t  WIDTH, HEIGHT;   \/\/ this is the 'raw' display w\/h - never changes$/;"	m	class:Adafruit_GFX
width	./TFT/utility/PImage.h	/^  int width() { return _bmpWidth; }$/;"	f	class:PImage
width	./TFT/utility/PImage.h	/^  int width() { return _bmpWidth; }$/;"	f	class:PImage
WiFiClass	./WiFi/WiFi.cpp	/^WiFiClass::WiFiClass()$/;"	f	class:WiFiClass
WiFiClass	./WiFi/WiFi.cpp	/^WiFiClass::WiFiClass()$/;"	f	class:WiFiClass
WiFiClass	./WiFi/WiFi.h	/^class WiFiClass$/;"	c
WiFiClass	./WiFi/WiFi.h	/^class WiFiClass$/;"	c
wificlient_h	./WiFi/WiFiClient.h	2;"	d
wificlient_h	./WiFi/WiFiClient.h	2;"	d
WiFiClient	./WiFi/WiFiClient.cpp	/^WiFiClient::WiFiClient() : _sock(MAX_SOCK_NUM) {$/;"	f	class:WiFiClient
WiFiClient	./WiFi/WiFiClient.cpp	/^WiFiClient::WiFiClient() : _sock(MAX_SOCK_NUM) {$/;"	f	class:WiFiClient
WiFiClient	./WiFi/WiFiClient.cpp	/^WiFiClient::WiFiClient(uint8_t sock) : _sock(sock) {$/;"	f	class:WiFiClient
WiFiClient	./WiFi/WiFiClient.cpp	/^WiFiClient::WiFiClient(uint8_t sock) : _sock(sock) {$/;"	f	class:WiFiClient
WiFiClient	./WiFi/WiFiClient.h	/^class WiFiClient : public Client {$/;"	c
WiFiClient	./WiFi/WiFiClient.h	/^class WiFiClient : public Client {$/;"	c
wifiDriverInit	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::wifiDriverInit()$/;"	f	class:WiFiDrv
wifiDriverInit	./WiFi/utility/wifi_drv.cpp	/^void WiFiDrv::wifiDriverInit()$/;"	f	class:WiFiDrv
WiFi_Drv_h	./WiFi/utility/wifi_drv.h	2;"	d
WiFi_Drv_h	./WiFi/utility/wifi_drv.h	2;"	d
wiFiDrv	./WiFi/utility/wifi_drv.cpp	/^WiFiDrv wiFiDrv;$/;"	v
wiFiDrv	./WiFi/utility/wifi_drv.cpp	/^WiFiDrv wiFiDrv;$/;"	v
WiFiDrv	./WiFi/utility/wifi_drv.h	/^class WiFiDrv$/;"	c
WiFiDrv	./WiFi/utility/wifi_drv.h	/^class WiFiDrv$/;"	c
WiFi_h	./WiFi/WiFi.h	2;"	d
WiFi_h	./WiFi/WiFi.h	2;"	d
WIFILED	./WiFi/utility/spi_drv.cpp	15;"	d	file:
WIFILED	./WiFi/utility/spi_drv.cpp	15;"	d	file:
wifiserver_h	./WiFi/WiFiServer.h	2;"	d
wifiserver_h	./WiFi/WiFiServer.h	2;"	d
WiFiServer	./WiFi/WiFiServer.cpp	/^WiFiServer::WiFiServer(uint16_t port)$/;"	f	class:WiFiServer
WiFiServer	./WiFi/WiFiServer.cpp	/^WiFiServer::WiFiServer(uint16_t port)$/;"	f	class:WiFiServer
WiFiServer	./WiFi/WiFiServer.h	/^class WiFiServer : public Server {$/;"	c
WiFiServer	./WiFi/WiFiServer.h	/^class WiFiServer : public Server {$/;"	c
wifiSetKey	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::wifiSetKey(char* ssid, uint8_t ssid_len, uint8_t key_idx, const void *key, const uint8_t len)$/;"	f	class:WiFiDrv
wifiSetKey	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::wifiSetKey(char* ssid, uint8_t ssid_len, uint8_t key_idx, const void *key, const uint8_t len)$/;"	f	class:WiFiDrv
wifiSetNetwork	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::wifiSetNetwork(char* ssid, uint8_t ssid_len)$/;"	f	class:WiFiDrv
wifiSetNetwork	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::wifiSetNetwork(char* ssid, uint8_t ssid_len)$/;"	f	class:WiFiDrv
wifiSetPassphrase	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::wifiSetPassphrase(char* ssid, uint8_t ssid_len, const char *passphrase, const uint8_t len)$/;"	f	class:WiFiDrv
wifiSetPassphrase	./WiFi/utility/wifi_drv.cpp	/^int8_t WiFiDrv::wifiSetPassphrase(char* ssid, uint8_t ssid_len, const char *passphrase, const uint8_t len)$/;"	f	class:WiFiDrv
WIFI_SPI_ACK	./WiFi/utility/wifi_spi.h	10;"	d
WIFI_SPI_ACK	./WiFi/utility/wifi_spi.h	10;"	d
WIFI_SPI_ERR	./WiFi/utility/wifi_spi.h	11;"	d
WIFI_SPI_ERR	./WiFi/utility/wifi_spi.h	11;"	d
WiFi_Spi_h	./WiFi/utility/wifi_spi.h	2;"	d
WiFi_Spi_h	./WiFi/utility/wifi_spi.h	2;"	d
wifiudp_h	./WiFi/WiFiUdp.h	2;"	d
wifiudp_h	./WiFi/WiFiUdp.h	2;"	d
WiFiUDP	./WiFi/WiFiUdp.cpp	/^WiFiUDP::WiFiUDP() : _sock(NO_SOCKET_AVAIL) {}$/;"	f	class:WiFiUDP
WiFiUDP	./WiFi/WiFiUdp.cpp	/^WiFiUDP::WiFiUDP() : _sock(NO_SOCKET_AVAIL) {}$/;"	f	class:WiFiUDP
WiFiUDP	./WiFi/WiFiUdp.h	/^class WiFiUDP : public UDP {$/;"	c
WiFiUDP	./WiFi/WiFiUdp.h	/^class WiFiUDP : public UDP {$/;"	c
WiFi	./WiFi/WiFi.cpp	/^WiFiClass WiFi;$/;"	v
WiFi	./WiFi/WiFi.cpp	/^WiFiClass WiFi;$/;"	v
Wire	./Robot_Control/Wire.cpp	/^TwoWire Wire = TwoWire();$/;"	v
Wire	./Robot_Control/Wire.cpp	/^TwoWire Wire = TwoWire();$/;"	v
Wire	./Wire/Wire.cpp	/^TwoWire Wire = TwoWire();$/;"	v
Wire	./Wire/Wire.cpp	/^TwoWire Wire = TwoWire();$/;"	v
wl_auth_mode	./WiFi/utility/wl_types.h	/^enum wl_auth_mode {$/;"	g
wl_auth_mode	./WiFi/utility/wl_types.h	/^enum wl_auth_mode {$/;"	g
WL_CONNECTED	./WiFi/utility/wl_definitions.h	/^        WL_CONNECTED,$/;"	e	enum:__anon13
WL_CONNECTED	./WiFi/utility/wl_definitions.h	/^        WL_CONNECTED,$/;"	e	enum:__anon13
WL_CONNECT_FAILED	./WiFi/utility/wl_definitions.h	/^        WL_CONNECT_FAILED,$/;"	e	enum:__anon13
WL_CONNECT_FAILED	./WiFi/utility/wl_definitions.h	/^        WL_CONNECT_FAILED,$/;"	e	enum:__anon13
WL_CONNECTION_LOST	./WiFi/utility/wl_definitions.h	/^        WL_CONNECTION_LOST,$/;"	e	enum:__anon13
WL_CONNECTION_LOST	./WiFi/utility/wl_definitions.h	/^        WL_CONNECTION_LOST,$/;"	e	enum:__anon13
WL_DEFINITIONS_H_	./WiFi/utility/wl_definitions.h	9;"	d
WL_DEFINITIONS_H_	./WiFi/utility/wl_definitions.h	9;"	d
WL_DELAY_START_CONNECTION	./WiFi/utility/wifi_drv.h	12;"	d
WL_DELAY_START_CONNECTION	./WiFi/utility/wifi_drv.h	12;"	d
WL_DISCONNECTED	./WiFi/utility/wl_definitions.h	/^        WL_DISCONNECTED$/;"	e	enum:__anon13
WL_DISCONNECTED	./WiFi/utility/wl_definitions.h	/^        WL_DISCONNECTED$/;"	e	enum:__anon13
wl_enc_type	./WiFi/utility/wl_definitions.h	/^enum wl_enc_type {  \/* Values map to 802.11 encryption suites... *\/$/;"	g
wl_enc_type	./WiFi/utility/wl_definitions.h	/^enum wl_enc_type {  \/* Values map to 802.11 encryption suites... *\/$/;"	g
wl_error_code_t	./WiFi/utility/wl_types.h	/^} wl_error_code_t;$/;"	t	typeref:enum:__anon3
wl_error_code_t	./WiFi/utility/wl_types.h	/^} wl_error_code_t;$/;"	t	typeref:enum:__anon3
WL_FAILURE	./WiFi/utility/wl_types.h	/^        WL_FAILURE = -1,$/;"	e	enum:__anon3
WL_FAILURE	./WiFi/utility/wl_types.h	/^        WL_FAILURE = -1,$/;"	e	enum:__anon3
WL_FW_VER_LENGTH	./WiFi/utility/wifi_drv.h	14;"	d
WL_FW_VER_LENGTH	./WiFi/utility/wifi_drv.h	14;"	d
WL_IDLE_STATUS	./WiFi/utility/wl_definitions.h	/^        WL_IDLE_STATUS = 0,$/;"	e	enum:__anon13
WL_IDLE_STATUS	./WiFi/utility/wl_definitions.h	/^        WL_IDLE_STATUS = 0,$/;"	e	enum:__anon13
WL_IPV4_LENGTH	./WiFi/utility/wl_definitions.h	20;"	d
WL_IPV4_LENGTH	./WiFi/utility/wl_definitions.h	20;"	d
WL_MAC_ADDR_LENGTH	./WiFi/utility/wl_definitions.h	18;"	d
WL_MAC_ADDR_LENGTH	./WiFi/utility/wl_definitions.h	18;"	d
WL_MAX_ATTEMPT_CONNECTION	./WiFi/utility/wl_definitions.h	28;"	d
WL_MAX_ATTEMPT_CONNECTION	./WiFi/utility/wl_definitions.h	28;"	d
WL_NETWORKS_LIST_MAXNUM	./WiFi/utility/wl_definitions.h	22;"	d
WL_NETWORKS_LIST_MAXNUM	./WiFi/utility/wl_definitions.h	22;"	d
WL_NO_SHIELD	./WiFi/utility/wl_definitions.h	/^		WL_NO_SHIELD = 255,$/;"	e	enum:__anon13
WL_NO_SHIELD	./WiFi/utility/wl_definitions.h	/^		WL_NO_SHIELD = 255,$/;"	e	enum:__anon13
WL_NO_SSID_AVAIL	./WiFi/utility/wl_definitions.h	/^        WL_NO_SSID_AVAIL,$/;"	e	enum:__anon13
WL_NO_SSID_AVAIL	./WiFi/utility/wl_definitions.h	/^        WL_NO_SSID_AVAIL,$/;"	e	enum:__anon13
WL_SCAN_COMPLETED	./WiFi/utility/wl_definitions.h	/^        WL_SCAN_COMPLETED,$/;"	e	enum:__anon13
WL_SCAN_COMPLETED	./WiFi/utility/wl_definitions.h	/^        WL_SCAN_COMPLETED,$/;"	e	enum:__anon13
WL_SSID_MAX_LENGTH	./WiFi/utility/wl_definitions.h	12;"	d
WL_SSID_MAX_LENGTH	./WiFi/utility/wl_definitions.h	12;"	d
wl_status_t	./WiFi/utility/wl_definitions.h	/^} wl_status_t;$/;"	t	typeref:enum:__anon13
wl_status_t	./WiFi/utility/wl_definitions.h	/^} wl_status_t;$/;"	t	typeref:enum:__anon13
WL_SUCCESS	./WiFi/utility/wl_types.h	/^        WL_SUCCESS = 1,$/;"	e	enum:__anon3
WL_SUCCESS	./WiFi/utility/wl_types.h	/^        WL_SUCCESS = 1,$/;"	e	enum:__anon3
wl_tcp_state	./WiFi/utility/wifi_spi.h	/^enum wl_tcp_state {$/;"	g
wl_tcp_state	./WiFi/utility/wifi_spi.h	/^enum wl_tcp_state {$/;"	g
_WL_TYPES_H_	./WiFi/utility/wl_types.h	10;"	d
_WL_TYPES_H_	./WiFi/utility/wl_types.h	10;"	d
WL_WEP_KEY_MAX_LENGTH	./WiFi/utility/wl_definitions.h	16;"	d
WL_WEP_KEY_MAX_LENGTH	./WiFi/utility/wl_definitions.h	16;"	d
WL_WPA_KEY_MAX_LENGTH	./WiFi/utility/wl_definitions.h	14;"	d
WL_WPA_KEY_MAX_LENGTH	./WiFi/utility/wl_definitions.h	14;"	d
wp_grp_enable	./Robot_Control/SdInfo.h	/^  unsigned wp_grp_enable : 1;$/;"	m	struct:CSD
wp_grp_enable	./Robot_Control/SdInfo.h	/^  unsigned wp_grp_enable : 1;$/;"	m	struct:CSD
wp_grp_enable	./SD/utility/SdInfo.h	/^  unsigned wp_grp_enable : 1;$/;"	m	struct:CSDV1
wp_grp_enable	./SD/utility/SdInfo.h	/^  unsigned wp_grp_enable : 1;$/;"	m	struct:CSDV1
wp_grp_enable	./SD/utility/SdInfo.h	/^  unsigned wp_grp_enable : 1;$/;"	m	struct:CSDV2
wp_grp_enable	./SD/utility/SdInfo.h	/^  unsigned wp_grp_enable : 1;$/;"	m	struct:CSDV2
wp_grp_size	./Robot_Control/SdInfo.h	/^  unsigned wp_grp_size : 7;$/;"	m	struct:CSD
wp_grp_size	./Robot_Control/SdInfo.h	/^  unsigned wp_grp_size : 7;$/;"	m	struct:CSD
wp_grp_size	./SD/utility/SdInfo.h	/^  unsigned wp_grp_size : 7;$/;"	m	struct:CSDV1
wp_grp_size	./SD/utility/SdInfo.h	/^  unsigned wp_grp_size : 7;$/;"	m	struct:CSDV1
wp_grp_size	./SD/utility/SdInfo.h	/^  unsigned wp_grp_size : 7;$/;"	m	struct:CSDV2
wp_grp_size	./SD/utility/SdInfo.h	/^  unsigned wp_grp_size : 7;$/;"	m	struct:CSDV2
wrap	./Robot_Control/Adafruit_GFX.h	/^  boolean  wrap; \/\/ If set, 'wrap' text at right edge of display$/;"	m	class:Adafruit_GFX
wrap	./Robot_Control/Adafruit_GFX.h	/^  boolean  wrap; \/\/ If set, 'wrap' text at right edge of display$/;"	m	class:Adafruit_GFX
wrap	./TFT/utility/Adafruit_GFX.h	/^  boolean  wrap; \/\/ If set, 'wrap' text at right edge of display$/;"	m	class:Adafruit_GFX
wrap	./TFT/utility/Adafruit_GFX.h	/^  boolean  wrap; \/\/ If set, 'wrap' text at right edge of display$/;"	m	class:Adafruit_GFX
write4bits	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::write4bits(uint8_t value) {$/;"	f	class:LiquidCrystal
write4bits	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::write4bits(uint8_t value) {$/;"	f	class:LiquidCrystal
write8bits	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::write8bits(uint8_t value) {$/;"	f	class:LiquidCrystal
write8bits	./LiquidCrystal/LiquidCrystal.cpp	/^void LiquidCrystal::write8bits(uint8_t value) {$/;"	f	class:LiquidCrystal
write_blk_misalign	./Robot_Control/SdInfo.h	/^  unsigned write_blk_misalign : 1;$/;"	m	struct:CSD
write_blk_misalign	./Robot_Control/SdInfo.h	/^  unsigned write_blk_misalign : 1;$/;"	m	struct:CSD
write_blk_misalign	./SD/utility/SdInfo.h	/^  unsigned write_blk_misalign : 1;$/;"	m	struct:CSDV1
write_blk_misalign	./SD/utility/SdInfo.h	/^  unsigned write_blk_misalign : 1;$/;"	m	struct:CSDV1
write_blk_misalign	./SD/utility/SdInfo.h	/^  unsigned write_blk_misalign : 1;$/;"	m	struct:CSDV2
write_blk_misalign	./SD/utility/SdInfo.h	/^  unsigned write_blk_misalign : 1;$/;"	m	struct:CSDV2
write_bl_len_high	./Robot_Control/SdInfo.h	/^  unsigned write_bl_len_high : 2;$/;"	m	struct:CSD
write_bl_len_high	./Robot_Control/SdInfo.h	/^  unsigned write_bl_len_high : 2;$/;"	m	struct:CSD
write_bl_len_high	./SD/utility/SdInfo.h	/^  unsigned write_bl_len_high : 2;$/;"	m	struct:CSDV1
write_bl_len_high	./SD/utility/SdInfo.h	/^  unsigned write_bl_len_high : 2;$/;"	m	struct:CSDV1
write_bl_len_high	./SD/utility/SdInfo.h	/^  unsigned write_bl_len_high : 2;$/;"	m	struct:CSDV2
write_bl_len_high	./SD/utility/SdInfo.h	/^  unsigned write_bl_len_high : 2;$/;"	m	struct:CSDV2
write_bl_len_low	./Robot_Control/SdInfo.h	/^  unsigned write_bl_len_low : 2;$/;"	m	struct:CSD
write_bl_len_low	./Robot_Control/SdInfo.h	/^  unsigned write_bl_len_low : 2;$/;"	m	struct:CSD
write_bl_len_low	./SD/utility/SdInfo.h	/^  unsigned write_bl_len_low : 2;$/;"	m	struct:CSDV1
write_bl_len_low	./SD/utility/SdInfo.h	/^  unsigned write_bl_len_low : 2;$/;"	m	struct:CSDV1
write_bl_len_low	./SD/utility/SdInfo.h	/^  unsigned write_bl_len_low : 2;$/;"	m	struct:CSDV2
write_bl_len_low	./SD/utility/SdInfo.h	/^  unsigned write_bl_len_low : 2;$/;"	m	struct:CSDV2
writeBlock	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::writeBlock(uint32_t blockNumber, const uint8_t* src) {$/;"	f	class:SdCard
writeBlock	./Robot_Control/SdCard.cpp	/^uint8_t SdCard::writeBlock(uint32_t blockNumber, const uint8_t* src) {$/;"	f	class:SdCard
writeBlock	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeBlock(uint32_t blockNumber, const uint8_t* src) {$/;"	f	class:Sd2Card
writeBlock	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeBlock(uint32_t blockNumber, const uint8_t* src) {$/;"	f	class:Sd2Card
writeBlock	./SD/utility/SdFat.h	/^  uint8_t writeBlock(uint32_t block, const uint8_t* dst) {$/;"	f	class:SdVolume
writeBlock	./SD/utility/SdFat.h	/^  uint8_t writeBlock(uint32_t block, const uint8_t* dst) {$/;"	f	class:SdVolume
writeByte	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::writeByte(uint8_t dat){$/;"	f	class:EasyTransfer2
writeByte	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::writeByte(uint8_t dat){$/;"	f	class:EasyTransfer2
writeByte	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::writeByte(unsigned int eeaddress, byte data){$/;"	f	class:EEPROM_I2C
writeByte	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::writeByte(unsigned int eeaddress, byte data){$/;"	f	class:EEPROM_I2C
writeByte	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::writeByte(uint8_t dat){$/;"	f	class:EasyTransfer2
writeByte	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::writeByte(uint8_t dat){$/;"	f	class:EasyTransfer2
writecommand	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::writecommand(uint8_t c) {$/;"	f	class:Arduino_LCD
writecommand	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::writecommand(uint8_t c) {$/;"	f	class:Arduino_LCD
writecommand	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::writecommand(uint8_t c) {$/;"	f	class:Adafruit_ST7735
writecommand	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::writecommand(uint8_t c) {$/;"	f	class:Adafruit_ST7735
writedata	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::writedata(uint8_t c) {$/;"	f	class:Arduino_LCD
writedata	./Robot_Control/Arduino_LCD.cpp	/^void Arduino_LCD::writedata(uint8_t c) {$/;"	f	class:Arduino_LCD
writeData	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeData(const uint8_t* src) {$/;"	f	class:Sd2Card
writeData	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeData(const uint8_t* src) {$/;"	f	class:Sd2Card
writeData	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeData(uint8_t token, const uint8_t* src) {$/;"	f	class:Sd2Card
writeData	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeData(uint8_t token, const uint8_t* src) {$/;"	f	class:Sd2Card
writedata	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::writedata(uint8_t c) {$/;"	f	class:Adafruit_ST7735
writedata	./TFT/utility/Adafruit_ST7735.cpp	/^void Adafruit_ST7735::writedata(uint8_t c) {$/;"	f	class:Adafruit_ST7735
write	./EEPROM/EEPROM.cpp	/^void EEPROMClass::write(int address, uint8_t value)$/;"	f	class:EEPROMClass
write	./EEPROM/EEPROM.cpp	/^void EEPROMClass::write(int address, uint8_t value)$/;"	f	class:EEPROMClass
writeError	./Robot_Control/Fat16.h	/^  bool writeError;$/;"	m	class:Fat16
writeError	./Robot_Control/Fat16.h	/^  bool writeError;$/;"	m	class:Fat16
write	./Ethernet/EthernetClient.cpp	/^size_t EthernetClient::write(const uint8_t *buf, size_t size) {$/;"	f	class:EthernetClient
write	./Ethernet/EthernetClient.cpp	/^size_t EthernetClient::write(const uint8_t *buf, size_t size) {$/;"	f	class:EthernetClient
write	./Ethernet/EthernetClient.cpp	/^size_t EthernetClient::write(uint8_t b) {$/;"	f	class:EthernetClient
write	./Ethernet/EthernetClient.cpp	/^size_t EthernetClient::write(uint8_t b) {$/;"	f	class:EthernetClient
write	./Ethernet/EthernetServer.cpp	/^size_t EthernetServer::write(const uint8_t *buffer, size_t size) $/;"	f	class:EthernetServer
write	./Ethernet/EthernetServer.cpp	/^size_t EthernetServer::write(const uint8_t *buffer, size_t size) $/;"	f	class:EthernetServer
write	./Ethernet/EthernetServer.cpp	/^size_t EthernetServer::write(uint8_t b) $/;"	f	class:EthernetServer
write	./Ethernet/EthernetServer.cpp	/^size_t EthernetServer::write(uint8_t b) $/;"	f	class:EthernetServer
write	./Ethernet/EthernetUdp.cpp	/^size_t EthernetUDP::write(const uint8_t *buffer, size_t size)$/;"	f	class:EthernetUDP
write	./Ethernet/EthernetUdp.cpp	/^size_t EthernetUDP::write(const uint8_t *buffer, size_t size)$/;"	f	class:EthernetUDP
write	./Ethernet/EthernetUdp.cpp	/^size_t EthernetUDP::write(uint8_t byte)$/;"	f	class:EthernetUDP
write	./Ethernet/EthernetUdp.cpp	/^size_t EthernetUDP::write(uint8_t byte)$/;"	f	class:EthernetUDP
write	./Ethernet/utility/w5100.cpp	/^uint16_t W5100Class::write(uint16_t _addr, const uint8_t *_buf, uint16_t _len)$/;"	f	class:W5100Class
write	./Ethernet/utility/w5100.cpp	/^uint16_t W5100Class::write(uint16_t _addr, const uint8_t *_buf, uint16_t _len)$/;"	f	class:W5100Class
write	./Ethernet/utility/w5100.cpp	/^uint8_t W5100Class::write(uint16_t _addr, uint8_t _data)$/;"	f	class:W5100Class
write	./Ethernet/utility/w5100.cpp	/^uint8_t W5100Class::write(uint16_t _addr, uint8_t _data)$/;"	f	class:W5100Class
write	./GSM/GSM3CircularBuffer.cpp	/^int GSM3CircularBuffer::write(char c)$/;"	f	class:GSM3CircularBuffer
write	./GSM/GSM3CircularBuffer.cpp	/^int GSM3CircularBuffer::write(char c)$/;"	f	class:GSM3CircularBuffer
write	./GSM/GSM3MobileClientService.cpp	/^size_t GSM3MobileClientService::write(const uint8_t* buf)$/;"	f	class:GSM3MobileClientService
write	./GSM/GSM3MobileClientService.cpp	/^size_t GSM3MobileClientService::write(const uint8_t* buf)$/;"	f	class:GSM3MobileClientService
write	./GSM/GSM3MobileClientService.cpp	/^size_t GSM3MobileClientService::write(const uint8_t* buf, size_t sz)$/;"	f	class:GSM3MobileClientService
write	./GSM/GSM3MobileClientService.cpp	/^size_t GSM3MobileClientService::write(const uint8_t* buf, size_t sz)$/;"	f	class:GSM3MobileClientService
write	./GSM/GSM3MobileClientService.cpp	/^size_t GSM3MobileClientService::write(uint8_t c)$/;"	f	class:GSM3MobileClientService
write	./GSM/GSM3MobileClientService.cpp	/^size_t GSM3MobileClientService::write(uint8_t c)$/;"	f	class:GSM3MobileClientService
write	./GSM/GSM3MobileServerService.cpp	/^size_t GSM3MobileServerService::write(const uint8_t* buf)$/;"	f	class:GSM3MobileServerService
write	./GSM/GSM3MobileServerService.cpp	/^size_t GSM3MobileServerService::write(const uint8_t* buf)$/;"	f	class:GSM3MobileServerService
write	./GSM/GSM3MobileServerService.cpp	/^size_t GSM3MobileServerService::write(const uint8_t* buf, size_t sz)$/;"	f	class:GSM3MobileServerService
write	./GSM/GSM3MobileServerService.cpp	/^size_t GSM3MobileServerService::write(const uint8_t* buf, size_t sz)$/;"	f	class:GSM3MobileServerService
write	./GSM/GSM3MobileServerService.cpp	/^size_t GSM3MobileServerService::write(uint8_t c)$/;"	f	class:GSM3MobileServerService
write	./GSM/GSM3MobileServerService.cpp	/^size_t GSM3MobileServerService::write(uint8_t c)$/;"	f	class:GSM3MobileServerService
write	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^size_t GSM3ShieldV1DirectModemProvider::write(uint8_t c)$/;"	f	class:GSM3ShieldV1DirectModemProvider
write	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^size_t GSM3ShieldV1DirectModemProvider::write(uint8_t c)$/;"	f	class:GSM3ShieldV1DirectModemProvider
write	./GSM/GSM3ShieldV1ModemCore.cpp	/^size_t GSM3ShieldV1ModemCore::write(uint8_t c)$/;"	f	class:GSM3ShieldV1ModemCore
write	./GSM/GSM3ShieldV1ModemCore.cpp	/^size_t GSM3ShieldV1ModemCore::write(uint8_t c)$/;"	f	class:GSM3ShieldV1ModemCore
write	./GSM/GSM3SMSService.cpp	/^size_t GSM3SMSService::write(uint8_t c)$/;"	f	class:GSM3SMSService
write	./GSM/GSM3SMSService.cpp	/^size_t GSM3SMSService::write(uint8_t c)$/;"	f	class:GSM3SMSService
write	./GSM/GSM3SoftSerial.cpp	/^size_t GSM3SoftSerial::write(uint8_t c)$/;"	f	class:GSM3SoftSerial
write	./GSM/GSM3SoftSerial.cpp	/^size_t GSM3SoftSerial::write(uint8_t c)$/;"	f	class:GSM3SoftSerial
writeInt	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::writeInt(int dat){$/;"	f	class:EasyTransfer2
writeInt	./Robot_Control/EasyTransfer2.cpp	/^void EasyTransfer2::writeInt(int dat){$/;"	f	class:EasyTransfer2
writeInt	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::writeInt(int dat){$/;"	f	class:EasyTransfer2
writeInt	./Robot_Motor/EasyTransfer2.cpp	/^void EasyTransfer2::writeInt(int dat){$/;"	f	class:EasyTransfer2
write	./LiquidCrystal/LiquidCrystal.cpp	/^inline size_t LiquidCrystal::write(uint8_t value) {$/;"	f	class:LiquidCrystal
write	./LiquidCrystal/LiquidCrystal.cpp	/^inline size_t LiquidCrystal::write(uint8_t value) {$/;"	f	class:LiquidCrystal
writeln_P	./Robot_Control/Fat16.cpp	/^void Fat16::writeln_P(PGM_P str) {$/;"	f	class:Fat16
writeln_P	./Robot_Control/Fat16.cpp	/^void Fat16::writeln_P(PGM_P str) {$/;"	f	class:Fat16
writeln_P	./SD/utility/SdFile.cpp	/^void SdFile::writeln_P(PGM_P str) {$/;"	f	class:SdFile
writeln_P	./SD/utility/SdFile.cpp	/^void SdFile::writeln_P(PGM_P str) {$/;"	f	class:SdFile
writeMicroseconds	./Servo/Servo.cpp	/^void Servo::writeMicroseconds(int value)$/;"	f	class:Servo
writeMicroseconds	./Servo/Servo.cpp	/^void Servo::writeMicroseconds(int value)$/;"	f	class:Servo
writeModemCommand	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^String GSM3ShieldV1DirectModemProvider::writeModemCommand(String ATcommand, int responseDelay)$/;"	f	class:GSM3ShieldV1DirectModemProvider
writeModemCommand	./GSM/GSM3ShieldV1DirectModemProvider.cpp	/^String GSM3ShieldV1DirectModemProvider::writeModemCommand(String ATcommand, int responseDelay)$/;"	f	class:GSM3ShieldV1DirectModemProvider
WRITE_MULTIPLE_TOKEN	./SD/utility/SdInfo.h	/^uint8_t const WRITE_MULTIPLE_TOKEN = 0XFC;$/;"	v
WRITE_MULTIPLE_TOKEN	./SD/utility/SdInfo.h	/^uint8_t const WRITE_MULTIPLE_TOKEN = 0XFC;$/;"	v
writePage	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::writePage(unsigned int eeaddress, byte* data, byte length ){$/;"	f	class:EEPROM_I2C
writePage	./Robot_Control/EEPROM_I2C.cpp	/^void EEPROM_I2C::writePage(unsigned int eeaddress, byte* data, byte length ){$/;"	f	class:EEPROM_I2C
write_partial	./Robot_Control/SdInfo.h	/^  unsigned write_partial : 1;$/;"	m	struct:CSD
write_partial	./Robot_Control/SdInfo.h	/^  unsigned write_partial : 1;$/;"	m	struct:CSD
write_partial	./SD/utility/SdInfo.h	/^  unsigned write_partial : 1;$/;"	m	struct:CSDV1
write_partial	./SD/utility/SdInfo.h	/^  unsigned write_partial : 1;$/;"	m	struct:CSDV1
write_partial	./SD/utility/SdInfo.h	/^  unsigned write_partial : 1;$/;"	m	struct:CSDV2
write_partial	./SD/utility/SdInfo.h	/^  unsigned write_partial : 1;$/;"	m	struct:CSDV2
writePGM	./GSM/GSM3ShieldV1ModemCore.cpp	/^size_t GSM3ShieldV1ModemCore::writePGM(PROGMEM const prog_char str[], bool CR)$/;"	f	class:GSM3ShieldV1ModemCore
writePGM	./GSM/GSM3ShieldV1ModemCore.cpp	/^size_t GSM3ShieldV1ModemCore::writePGM(PROGMEM const prog_char str[], bool CR)$/;"	f	class:GSM3ShieldV1ModemCore
WritePhoneNumber	./GSM_Shield/GSM_Shield.cpp	/^char GSM::WritePhoneNumber(byte position, char *phone_number)$/;"	f	class:GSM
WritePhoneNumber	./GSM_Shield/GSM_Shield.cpp	/^char GSM::WritePhoneNumber(byte position, char *phone_number)$/;"	f	class:GSM
writePort	./Firmata/Boards.h	/^static inline unsigned char writePort(byte port, byte value, byte bitmask)$/;"	f
writePort	./Firmata/Boards.h	/^static inline unsigned char writePort(byte port, byte value, byte bitmask)$/;"	f
write_P	./Robot_Control/Fat16.cpp	/^void Fat16::write_P(PGM_P str) {$/;"	f	class:Fat16
write_P	./Robot_Control/Fat16.cpp	/^void Fat16::write_P(PGM_P str) {$/;"	f	class:Fat16
write_P	./SD/utility/SdFile.cpp	/^void SdFile::write_P(PGM_P str) {$/;"	f	class:SdFile
write_P	./SD/utility/SdFile.cpp	/^void SdFile::write_P(PGM_P str) {$/;"	f	class:SdFile
writeRGB	./Esplora/Esplora.cpp	/^void _Esplora::writeRGB(byte r, byte g, byte b) {$/;"	f	class:_Esplora
writeRGB	./Esplora/Esplora.cpp	/^void _Esplora::writeRGB(byte r, byte g, byte b) {$/;"	f	class:_Esplora
write	./Robot_Control/Adafruit_GFX.cpp	/^size_t Adafruit_GFX::write(uint8_t c) {$/;"	f	class:Adafruit_GFX
write	./Robot_Control/Adafruit_GFX.cpp	/^size_t Adafruit_GFX::write(uint8_t c) {$/;"	f	class:Adafruit_GFX
write	./Robot_Control/Fat16.cpp	/^int16_t Fat16::write(const char* str) {$/;"	f	class:Fat16
write	./Robot_Control/Fat16.cpp	/^int16_t Fat16::write(const char* str) {$/;"	f	class:Fat16
write	./Robot_Control/Fat16.cpp	/^int16_t Fat16::write(const void* buf, uint16_t nbyte) {$/;"	f	class:Fat16
write	./Robot_Control/Fat16.cpp	/^int16_t Fat16::write(const void* buf, uint16_t nbyte) {$/;"	f	class:Fat16
write	./Robot_Control/Fat16.cpp	/^size_t Fat16::write(uint8_t b) {$/;"	f	class:Fat16
write	./Robot_Control/Fat16.cpp	/^size_t Fat16::write(uint8_t b) {$/;"	f	class:Fat16
write	./Robot_Control/Fat16.cpp	/^void Fat16::write(const char* str) {$/;"	f	class:Fat16
write	./Robot_Control/Fat16.cpp	/^void Fat16::write(const char* str) {$/;"	f	class:Fat16
write	./Robot_Control/Fat16.cpp	/^void Fat16::write(uint8_t b) {$/;"	f	class:Fat16
write	./Robot_Control/Fat16.cpp	/^void Fat16::write(uint8_t b) {$/;"	f	class:Fat16
write	./Robot_Control/Wire.cpp	/^size_t TwoWire::write(const uint8_t *data, size_t quantity)$/;"	f	class:TwoWire
write	./Robot_Control/Wire.cpp	/^size_t TwoWire::write(const uint8_t *data, size_t quantity)$/;"	f	class:TwoWire
write	./Robot_Control/Wire.cpp	/^size_t TwoWire::write(uint8_t data)$/;"	f	class:TwoWire
write	./Robot_Control/Wire.cpp	/^size_t TwoWire::write(uint8_t data)$/;"	f	class:TwoWire
write	./Robot_Control/Wire.h	/^    inline size_t write(int n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Robot_Control/Wire.h	/^    inline size_t write(int n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Robot_Control/Wire.h	/^    inline size_t write(long n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Robot_Control/Wire.h	/^    inline size_t write(long n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Robot_Control/Wire.h	/^    inline size_t write(unsigned int n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Robot_Control/Wire.h	/^    inline size_t write(unsigned int n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Robot_Control/Wire.h	/^    inline size_t write(unsigned long n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Robot_Control/Wire.h	/^    inline size_t write(unsigned long n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
writeScript	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::writeScript(int seq, int line, int col){$/;"	f	class:TextManager
writeScript	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::writeScript(int seq, int line, int col){$/;"	f	class:TextManager
write	./SD/File.cpp	/^size_t File::write(const uint8_t *buf, size_t size) {$/;"	f	class:File
write	./SD/File.cpp	/^size_t File::write(const uint8_t *buf, size_t size) {$/;"	f	class:File
write	./SD/File.cpp	/^size_t File::write(uint8_t val) {$/;"	f	class:File
write	./SD/File.cpp	/^size_t File::write(uint8_t val) {$/;"	f	class:File
write	./SD/utility/SdFile.cpp	/^size_t SdFile::write(const char* str) {$/;"	f	class:SdFile
write	./SD/utility/SdFile.cpp	/^size_t SdFile::write(const char* str) {$/;"	f	class:SdFile
write	./SD/utility/SdFile.cpp	/^size_t SdFile::write(const void* buf, uint16_t nbyte) {$/;"	f	class:SdFile
write	./SD/utility/SdFile.cpp	/^size_t SdFile::write(const void* buf, uint16_t nbyte) {$/;"	f	class:SdFile
write	./SD/utility/SdFile.cpp	/^size_t SdFile::write(uint8_t b) {$/;"	f	class:SdFile
write	./SD/utility/SdFile.cpp	/^size_t SdFile::write(uint8_t b) {$/;"	f	class:SdFile
write	./Servo/Servo.cpp	/^void Servo::write(int value)$/;"	f	class:Servo
write	./Servo/Servo.cpp	/^void Servo::write(int value)$/;"	f	class:Servo
writeSMS	./GSM/GSM3MobileMockupProvider.cpp	/^void GSM3MobileMockupProvider::writeSMS(char c)$/;"	f	class:GSM3MobileMockupProvider
writeSMS	./GSM/GSM3MobileMockupProvider.cpp	/^void GSM3MobileMockupProvider::writeSMS(char c)$/;"	f	class:GSM3MobileMockupProvider
writeSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline void writeSMS(const char c){};$/;"	f	class:GSM3MobileSMSProvider
writeSMS	./GSM/GSM3MobileSMSProvider.h	/^		virtual inline void writeSMS(const char c){};$/;"	f	class:GSM3MobileSMSProvider
writeSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::writeSMS(char c)$/;"	f	class:GSM3ShieldV1SMSProvider
writeSMS	./GSM/GSM3ShieldV1SMSProvider.cpp	/^void GSM3ShieldV1SMSProvider::writeSMS(char c)$/;"	f	class:GSM3ShieldV1SMSProvider
writeSn	./Ethernet/utility/w5100.h	/^uint16_t W5100Class::writeSn(SOCKET _s, uint16_t _addr, uint8_t *_buf, uint16_t _len) {$/;"	f	class:W5100Class
writeSn	./Ethernet/utility/w5100.h	/^uint16_t W5100Class::writeSn(SOCKET _s, uint16_t _addr, uint8_t *_buf, uint16_t _len) {$/;"	f	class:W5100Class
writeSn	./Ethernet/utility/w5100.h	/^uint8_t W5100Class::writeSn(SOCKET _s, uint16_t _addr, uint8_t _data) {$/;"	f	class:W5100Class
writeSn	./Ethernet/utility/w5100.h	/^uint8_t W5100Class::writeSn(SOCKET _s, uint16_t _addr, uint8_t _data) {$/;"	f	class:W5100Class
writeSocket	./GSM/GSM3MobileMockupProvider.cpp	/^void GSM3MobileMockupProvider::writeSocket(const uint8_t *buf, size_t size, int id_socket)$/;"	f	class:GSM3MobileMockupProvider
writeSocket	./GSM/GSM3MobileMockupProvider.cpp	/^void GSM3MobileMockupProvider::writeSocket(const uint8_t *buf, size_t size, int id_socket)$/;"	f	class:GSM3MobileMockupProvider
writeSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::writeSocket(const char* buf)$/;"	f	class:GSM3ShieldV1ClientProvider
writeSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::writeSocket(const char* buf)$/;"	f	class:GSM3ShieldV1ClientProvider
writeSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::writeSocket(uint8_t c)$/;"	f	class:GSM3ShieldV1ClientProvider
writeSocket	./GSM/GSM3ShieldV1ClientProvider.cpp	/^void GSM3ShieldV1ClientProvider::writeSocket(uint8_t c)$/;"	f	class:GSM3ShieldV1ClientProvider
writeSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::writeSocket(char c)$/;"	f	class:GSM3ShieldV1MultiClientProvider
writeSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::writeSocket(char c)$/;"	f	class:GSM3ShieldV1MultiClientProvider
writeSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::writeSocket(const char* buf)$/;"	f	class:GSM3ShieldV1MultiClientProvider
writeSocket	./GSM/GSM3ShieldV1MultiClientProvider.cpp	/^void GSM3ShieldV1MultiClientProvider::writeSocket(const char* buf)$/;"	f	class:GSM3ShieldV1MultiClientProvider
write	./SoftwareSerial/SoftwareSerial.cpp	/^size_t SoftwareSerial::write(uint8_t b)$/;"	f	class:SoftwareSerial
write	./SoftwareSerial/SoftwareSerial.cpp	/^size_t SoftwareSerial::write(uint8_t b)$/;"	f	class:SoftwareSerial
write	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::write(int angleArg)$/;"	f	class:SoftwareServo
write	./SoftwareServo/SoftwareServo.cpp	/^void SoftwareServo::write(int angleArg)$/;"	f	class:SoftwareServo
writeStart	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeStart(uint32_t blockNumber, uint32_t eraseCount) {$/;"	f	class:Sd2Card
writeStart	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeStart(uint32_t blockNumber, uint32_t eraseCount) {$/;"	f	class:Sd2Card
writeStop	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeStop(void) {$/;"	f	class:Sd2Card
writeStop	./SD/utility/Sd2Card.cpp	/^uint8_t Sd2Card::writeStop(void) {$/;"	f	class:Sd2Card
writeText	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::writeText(int lineNum, int colNum, char* txt, bool onOff){$/;"	f	class:TextManager
writeText	./Robot_Control/utility/RobotTextManager.cpp	/^void TextManager::writeText(int lineNum, int colNum, char* txt, bool onOff){$/;"	f	class:TextManager
write	./TFT/utility/Adafruit_GFX.cpp	/^size_t Adafruit_GFX::write(uint8_t c) {$/;"	f	class:Adafruit_GFX
write	./TFT/utility/Adafruit_GFX.cpp	/^size_t Adafruit_GFX::write(uint8_t c) {$/;"	f	class:Adafruit_GFX
write	./WiFi/WiFiClient.cpp	/^size_t WiFiClient::write(const uint8_t *buf, size_t size) {$/;"	f	class:WiFiClient
write	./WiFi/WiFiClient.cpp	/^size_t WiFiClient::write(const uint8_t *buf, size_t size) {$/;"	f	class:WiFiClient
write	./WiFi/WiFiClient.cpp	/^size_t WiFiClient::write(uint8_t b) {$/;"	f	class:WiFiClient
write	./WiFi/WiFiClient.cpp	/^size_t WiFiClient::write(uint8_t b) {$/;"	f	class:WiFiClient
write	./WiFi/WiFiServer.cpp	/^size_t WiFiServer::write(const uint8_t *buffer, size_t size)$/;"	f	class:WiFiServer
write	./WiFi/WiFiServer.cpp	/^size_t WiFiServer::write(const uint8_t *buffer, size_t size)$/;"	f	class:WiFiServer
write	./WiFi/WiFiServer.cpp	/^size_t WiFiServer::write(uint8_t b)$/;"	f	class:WiFiServer
write	./WiFi/WiFiServer.cpp	/^size_t WiFiServer::write(uint8_t b)$/;"	f	class:WiFiServer
write	./WiFi/WiFiUdp.cpp	/^size_t WiFiUDP::write(const uint8_t *buffer, size_t size)$/;"	f	class:WiFiUDP
write	./WiFi/WiFiUdp.cpp	/^size_t WiFiUDP::write(const uint8_t *buffer, size_t size)$/;"	f	class:WiFiUDP
write	./WiFi/WiFiUdp.cpp	/^size_t WiFiUDP::write(uint8_t byte)$/;"	f	class:WiFiUDP
write	./WiFi/WiFiUdp.cpp	/^size_t WiFiUDP::write(uint8_t byte)$/;"	f	class:WiFiUDP
write	./Wire/Wire.cpp	/^size_t TwoWire::write(const uint8_t *data, size_t quantity)$/;"	f	class:TwoWire
write	./Wire/Wire.cpp	/^size_t TwoWire::write(const uint8_t *data, size_t quantity)$/;"	f	class:TwoWire
write	./Wire/Wire.cpp	/^size_t TwoWire::write(uint8_t data)$/;"	f	class:TwoWire
write	./Wire/Wire.cpp	/^size_t TwoWire::write(uint8_t data)$/;"	f	class:TwoWire
write	./Wire/Wire.h	/^    inline size_t write(int n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Wire/Wire.h	/^    inline size_t write(int n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Wire/Wire.h	/^    inline size_t write(long n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Wire/Wire.h	/^    inline size_t write(long n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Wire/Wire.h	/^    inline size_t write(unsigned int n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Wire/Wire.h	/^    inline size_t write(unsigned int n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Wire/Wire.h	/^    inline size_t write(unsigned long n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
write	./Wire/Wire.h	/^    inline size_t write(unsigned long n) { return write((uint8_t)n); }$/;"	f	class:TwoWire
X_AXIS	./Esplora/Esplora.h	/^const byte X_AXIS = 0;$/;"	v
X_AXIS	./Esplora/Esplora.h	/^const byte X_AXIS = 0;$/;"	v
xid	./Ethernet/Dhcp.h	/^	uint32_t xid;$/;"	m	struct:_RIP_MSG_FIXED
xid	./Ethernet/Dhcp.h	/^	uint32_t xid;$/;"	m	struct:_RIP_MSG_FIXED
XMIT_START_ADJUSTMENT	./GSM/GSM3SoftSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 4;$/;"	v
XMIT_START_ADJUSTMENT	./GSM/GSM3SoftSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 4;$/;"	v
XMIT_START_ADJUSTMENT	./GSM/GSM3SoftSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 5;$/;"	v
XMIT_START_ADJUSTMENT	./GSM/GSM3SoftSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 5;$/;"	v
XMIT_START_ADJUSTMENT	./GSM/GSM3SoftSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 6;$/;"	v
XMIT_START_ADJUSTMENT	./GSM/GSM3SoftSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 6;$/;"	v
XMIT_START_ADJUSTMENT	./SoftwareSerial/SoftwareSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 4;$/;"	v
XMIT_START_ADJUSTMENT	./SoftwareSerial/SoftwareSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 4;$/;"	v
XMIT_START_ADJUSTMENT	./SoftwareSerial/SoftwareSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 5;$/;"	v
XMIT_START_ADJUSTMENT	./SoftwareSerial/SoftwareSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 5;$/;"	v
XMIT_START_ADJUSTMENT	./SoftwareSerial/SoftwareSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 6;$/;"	v
XMIT_START_ADJUSTMENT	./SoftwareSerial/SoftwareSerial.cpp	/^const int XMIT_START_ADJUSTMENT = 6;$/;"	v
__XOFF__	./GSM/GSM3SoftSerial.cpp	56;"	d	file:
__XOFF__	./GSM/GSM3SoftSerial.cpp	56;"	d	file:
XON	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
XON	./GSM/GSM3ShieldV1BaseProvider.h	/^enum GSM3_commandType_e { XON, NONE, MODEMCONFIG, ALIVETEST, BEGINSMS, ENDSMS, AVAILABLESMS, FLUSHSMS,$/;"	e	enum:GSM3_commandType_e
__XON__	./GSM/GSM3SoftSerial.cpp	55;"	d	file:
__XON__	./GSM/GSM3SoftSerial.cpp	55;"	d	file:
Y_AXIS	./Esplora/Esplora.h	/^const byte Y_AXIS = 1;$/;"	v
Y_AXIS	./Esplora/Esplora.h	/^const byte Y_AXIS = 1;$/;"	v
year	./TinyGPSPlus/TinyGPS++.cpp	/^uint16_t TinyGPSDate::year()$/;"	f	class:TinyGPSDate
year	./TinyGPSPlus/TinyGPS++.cpp	/^uint16_t TinyGPSDate::year()$/;"	f	class:TinyGPSDate
YELLOW	./Robot_Control/ArduinoRobot.h	122;"	d
YELLOW	./Robot_Control/ArduinoRobot.h	122;"	d
yiaddr	./Ethernet/Dhcp.h	/^	uint8_t  yiaddr[4];$/;"	m	struct:_RIP_MSG_FIXED
yiaddr	./Ethernet/Dhcp.h	/^	uint8_t  yiaddr[4];$/;"	m	struct:_RIP_MSG_FIXED
Z_AXIS	./Esplora/Esplora.h	/^const byte Z_AXIS = 2;$/;"	v
Z_AXIS	./Esplora/Esplora.h	/^const byte Z_AXIS = 2;$/;"	v
